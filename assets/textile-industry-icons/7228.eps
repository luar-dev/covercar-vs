%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1510.i105.051.P.m007.c23.textile industry.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: kot
%%CreationDate: 10/31/2015
%%BoundingBox: 0 0 401 406
%%HiResBoundingBox: 0 0 400.6407 405.6827
%%CropBox: 0 0 400.6407 405.6827
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">textile industry</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2015-10-31T02:54:52+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-10-31T02:54:52+05:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-10-31T02:54:51+05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9EWfnGKcyg2F0eDUHoRt&#xA;Oaf5XAfCc1fZ3aY1JkOEx4XM1Wk8EDe7Sm//ADUsbSa/T9FXzpp5iE0hj4ANKQKMG+xsfh5fa/HL&#xA;MvaAgZDhJ4a+1zNP2PLJGB4ojxLoe78fBb/ytnSmstRvItOvZILBljWQR/C7ueNGYVEe9PtY/wAo&#xA;x4ZSANR+1l/ImQTxwMog5AT7gFK7/N/TbSSeGfSr2O4j9ERwugVmaZOYBBPwnw8e2Qn2nGNgxNiv&#xA;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&#xA;XYq7FXYq7FXYq7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:ac445f6e-8891-db4f-8bd0-22c69543a1e3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ac445f6e-8891-db4f-8bd0-22c69543a1e3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0d078f33-fcac-432d-ae49-b9b9549227e0</stRef:instanceID>
            <stRef:documentID>xmp.did:3addecd5-1264-3c4b-8452-f380206b423f</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74fc0c53-3ce7-114b-8878-2dc28977561c</stEvt:instanceID>
                  <stEvt:when>2015-10-30T20:01:41+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ac445f6e-8891-db4f-8bd0-22c69543a1e3</stEvt:instanceID>
                  <stEvt:when>2015-10-31T02:54:52+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -405.683 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 405.683 li
400.641 405.683 li
400.641 0 li
cp
clp
77.5708 10.7363 mo
2.70898 10.7363 li
2.70898 8.73633 li
77.5708 8.73633 li
78.1177 8.73633 83.002 9.17969 83.002 9.72607 cv
83.002 9.74609 li
83.002 10.293 78.1177 10.7363 77.5708 10.7363 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.615686 .615686 .611765 rgb
f
18.3945 6.83008 mo
17.3745 6.83008 16.4502 7.42969 16.0342 8.36133 cv
15.1196 10.4097 li
14.6973 11.3555 15.1938 12.4346 16.2285 12.8203 cv
16.2666 12.8345 li
17.3013 13.2202 18.4824 12.7661 18.9043 11.8208 cv
20.0991 9.14453 li
20.585 8.05713 19.7891 6.83008 18.5977 6.83008 cv
18.3945 6.83008 li
cp
.913725 .305882 .105882 rgb
f
21.0244 12.7397 mo
20.9863 12.7256 li
19.9517 12.3398 18.771 12.7935 18.3486 13.7393 cv
15.1196 20.9712 li
14.6973 21.917 15.1938 22.9961 16.2285 23.3818 cv
16.2666 23.396 li
17.3013 23.7817 18.4824 23.3276 18.9043 22.3823 cv
22.1333 15.1499 li
22.5557 14.2046 22.0591 13.1255 21.0244 12.7397 cv
cp
f
13.0244 12.7256 mo
12.9868 12.7397 li
11.9521 13.1255 11.4556 14.2046 11.8774 15.1499 cv
14.189 20.3271 li
16.3965 15.3838 li
15.6626 13.7393 li
15.2402 12.7935 14.0591 12.3398 13.0244 12.7256 cv
cp
f
25.7432 17.6504 mo
25.7808 17.6641 li
26.8159 18.0498 27.9966 17.5962 28.4189 16.6509 cv
31.6479 9.41846 li
32.0703 8.47314 31.5737 7.39404 30.5386 7.0083 cv
30.501 6.99414 li
29.4663 6.6084 28.2852 7.06201 27.8633 8.00732 cv
24.6338 15.2397 li
24.2119 16.1851 24.7085 17.2646 25.7432 17.6504 cv
cp
f
21.3921 9.41846 mo
23.7036 14.5957 li
25.9111 9.65186 li
25.1768 8.00732 li
24.7549 7.06201 23.5737 6.6084 22.5391 6.99414 cv
22.501 7.0083 li
21.4663 7.39404 20.9697 8.47314 21.3921 9.41846 cv
cp
f
30.501 17.5557 mo
29.4663 17.1699 28.2852 17.6235 27.8633 18.5688 cv
24.6338 25.8013 li
24.2119 26.7466 24.7085 27.8262 25.7432 28.2114 cv
25.7808 28.2256 li
26.8159 28.6113 27.9966 28.1577 28.4189 27.2124 cv
31.6479 19.98 li
32.0703 19.0347 31.5737 17.9556 30.5386 17.5698 cv
30.501 17.5557 li
cp
f
22.5391 17.5557 mo
22.501 17.5698 li
21.4663 17.9556 20.9697 19.0347 21.3921 19.98 cv
23.7036 25.1572 li
25.9111 20.2134 li
25.1768 18.5688 li
24.7549 17.6235 23.5737 17.1699 22.5391 17.5557 cv
cp
f
37.6738 6.83008 mo
36.6538 6.83008 35.729 7.42969 35.3135 8.36133 cv
34.3989 10.4097 li
33.9766 11.3555 34.4731 12.4346 35.5078 12.8203 cv
35.5459 12.8345 li
36.5806 13.2202 37.7612 12.7661 38.1836 11.8208 cv
39.3784 9.14453 li
39.8638 8.05713 39.0679 6.83008 37.877 6.83008 cv
37.6738 6.83008 li
cp
f
40.3037 12.7397 mo
40.2656 12.7256 li
39.231 12.3398 38.0498 12.7935 37.6279 13.7393 cv
34.3989 20.9712 li
33.9766 21.917 34.4731 22.9961 35.5078 23.3818 cv
35.5459 23.396 li
36.5806 23.7817 37.7612 23.3276 38.1836 22.3823 cv
41.4126 15.1499 li
41.835 14.2046 41.3384 13.1255 40.3037 12.7397 cv
cp
f
32.3037 12.7256 mo
32.2661 12.7397 li
31.231 13.1255 30.7344 14.2046 31.1567 15.1499 cv
33.4683 20.3271 li
35.6758 15.3838 li
34.9414 13.7393 li
34.5195 12.7935 33.3384 12.3398 32.3037 12.7256 cv
cp
f
45.0225 17.6504 mo
45.0601 17.6641 li
46.0947 18.0498 47.2759 17.5962 47.6982 16.6509 cv
50.9272 9.41846 li
51.3491 8.47314 50.8525 7.39404 49.8179 7.0083 cv
49.7803 6.99414 li
48.7456 6.6084 47.5645 7.06201 47.1421 8.00732 cv
43.9131 15.2397 li
43.4912 16.1851 43.9878 17.2646 45.0225 17.6504 cv
cp
f
40.6714 9.41846 mo
42.9829 14.5957 li
45.1904 9.65186 li
44.4561 8.00732 li
44.0337 7.06201 42.853 6.6084 41.8184 6.99414 cv
41.7803 7.0083 li
40.7456 7.39404 40.249 8.47314 40.6714 9.41846 cv
cp
f
49.7803 17.5557 mo
48.7456 17.1699 47.5645 17.6235 47.1421 18.5688 cv
43.9131 25.8013 li
43.4912 26.7466 43.9878 27.8262 45.0225 28.2114 cv
45.0601 28.2256 li
46.0947 28.6113 47.2759 28.1577 47.6982 27.2124 cv
50.9272 19.98 li
51.3491 19.0347 50.8525 17.9556 49.8179 17.5698 cv
49.7803 17.5557 li
cp
f
41.8184 17.5557 mo
41.7803 17.5698 li
40.7456 17.9556 40.249 19.0347 40.6714 19.98 cv
42.9829 25.1572 li
45.1904 20.2134 li
44.4561 18.5688 li
44.0337 17.6235 42.853 17.1699 41.8184 17.5557 cv
cp
f
56.9531 6.83008 mo
55.9331 6.83008 55.0083 7.42969 54.5923 8.36133 cv
53.6777 10.4097 li
53.2559 11.3555 53.7524 12.4346 54.7871 12.8203 cv
54.8247 12.8345 li
55.8594 13.2202 57.0405 12.7661 57.4629 11.8208 cv
58.6577 9.14453 li
59.1431 8.05713 58.3472 6.83008 57.1563 6.83008 cv
56.9531 6.83008 li
cp
f
59.5825 12.7397 mo
59.5449 12.7256 li
58.5103 12.3398 57.3291 12.7935 56.9072 13.7393 cv
53.6777 20.9712 li
53.2559 21.917 53.7524 22.9961 54.7871 23.3818 cv
54.8247 23.396 li
55.8594 23.7817 57.0405 23.3276 57.4629 22.3823 cv
60.6919 15.1499 li
61.1138 14.2046 60.6172 13.1255 59.5825 12.7397 cv
cp
f
51.583 12.7256 mo
51.5449 12.7397 li
50.5103 13.1255 50.0137 14.2046 50.436 15.1499 cv
52.7476 20.3271 li
54.9551 15.3838 li
54.2207 13.7393 li
53.7988 12.7935 52.6177 12.3398 51.583 12.7256 cv
cp
f
64.3013 17.6504 mo
64.3394 17.6641 li
65.374 18.0498 66.5552 17.5962 66.9771 16.6509 cv
70.2061 9.41846 li
70.6284 8.47314 70.1318 7.39404 69.0972 7.0083 cv
69.0591 6.99414 li
68.0244 6.6084 66.8438 7.06201 66.4214 8.00732 cv
63.1924 15.2397 li
62.77 16.1851 63.2666 17.2646 64.3013 17.6504 cv
cp
f
59.9502 9.41846 mo
62.2617 14.5957 li
64.4697 9.65186 li
63.7354 8.00732 li
63.313 7.06201 62.1323 6.6084 61.0972 6.99414 cv
61.0596 7.0083 li
60.0249 7.39404 59.5283 8.47314 59.9502 9.41846 cv
cp
f
69.0972 17.5698 mo
69.0591 17.5557 li
68.0244 17.1699 66.8438 17.6235 66.4214 18.5688 cv
63.1924 25.8013 li
62.77 26.7466 63.2666 27.8262 64.3013 28.2114 cv
64.3394 28.2256 li
65.374 28.6113 66.5552 28.1577 66.9771 27.2124 cv
70.2061 19.98 li
70.6284 19.0347 70.1318 17.9556 69.0972 17.5698 cv
cp
f
63.7354 18.5688 mo
63.313 17.6235 62.1323 17.1699 61.0972 17.5557 cv
61.0596 17.5698 li
60.0249 17.9556 59.5283 19.0347 59.9502 19.98 cv
62.2617 25.1572 li
64.4697 20.2134 li
63.7354 18.5688 li
cp
f
21.0244 23.3013 mo
20.9863 23.2871 li
19.9517 22.9014 18.771 23.355 18.3486 24.3008 cv
15.1196 31.5327 li
14.6973 32.4785 15.1938 33.5576 16.2285 33.9434 cv
16.2666 33.957 li
17.3013 34.3433 18.4824 33.8892 18.9043 32.9438 cv
22.1333 25.7114 li
22.5557 24.7661 22.0591 23.687 21.0244 23.3013 cv
cp
f
11.8774 25.7114 mo
14.189 30.8887 li
16.3965 25.9453 li
15.6626 24.3008 li
15.2402 23.355 14.0591 22.9014 13.0244 23.2871 cv
12.9868 23.3013 li
11.9521 23.687 11.4556 24.7661 11.8774 25.7114 cv
cp
f
16.2285 44.5049 mo
16.2666 44.5186 li
17.3013 44.9048 18.4824 44.4507 18.9043 43.5054 cv
22.1333 36.2729 li
22.5557 35.3276 22.0591 34.2485 21.0244 33.8628 cv
20.9863 33.8486 li
19.9517 33.4629 18.771 33.9165 18.3486 34.8623 cv
15.1196 42.0942 li
14.6973 43.0396 15.1938 44.1191 16.2285 44.5049 cv
cp
f
11.8774 36.2729 mo
14.189 41.4502 li
16.3965 36.5063 li
15.6626 34.8623 li
15.2402 33.9165 14.0591 33.4629 13.0244 33.8486 cv
12.9868 33.8628 li
11.9521 34.2485 11.4556 35.3276 11.8774 36.2729 cv
cp
f
30.501 28.1172 mo
29.4663 27.7314 28.2852 28.1851 27.8633 29.1304 cv
24.6338 36.3628 li
24.2119 37.3081 24.7085 38.3877 25.7432 38.7729 cv
25.7808 38.7871 li
26.8159 39.1729 27.9966 38.7192 28.4189 37.7739 cv
31.6479 30.5415 li
32.0703 29.5962 31.5737 28.5171 30.5386 28.1313 cv
30.501 28.1172 li
cp
f
22.5391 28.1172 mo
22.501 28.1313 li
21.4663 28.5171 20.9697 29.5962 21.3921 30.5415 cv
23.7036 35.7188 li
25.9111 30.7749 li
25.1768 29.1304 li
24.7549 28.1851 23.5737 27.7314 22.5391 28.1172 cv
cp
f
25.7432 49.3345 mo
25.7808 49.3486 li
26.8159 49.7344 27.9966 49.2808 28.4189 48.3354 cv
31.6479 41.103 li
32.0703 40.1577 31.5737 39.0781 30.5386 38.6929 cv
30.501 38.6787 li
29.4663 38.293 28.2852 38.7466 27.8633 39.6919 cv
24.6338 46.9243 li
24.2119 47.8696 24.7085 48.9487 25.7432 49.3345 cv
cp
f
23.7036 46.2803 mo
25.9111 41.3364 li
25.1768 39.6919 li
24.7549 38.7466 23.5737 38.293 22.5391 38.6787 cv
22.501 38.6929 li
21.4663 39.0781 20.9697 40.1577 21.3921 41.103 cv
23.7036 46.2803 li
cp
f
40.3037 23.3013 mo
40.2656 23.2871 li
39.231 22.9014 38.0498 23.355 37.6279 24.3008 cv
34.3989 31.5327 li
33.9766 32.4785 34.4731 33.5576 35.5078 33.9434 cv
35.5459 33.957 li
36.5806 34.3433 37.7612 33.8892 38.1836 32.9438 cv
41.4126 25.7114 li
41.835 24.7661 41.3384 23.687 40.3037 23.3013 cv
cp
f
32.3037 23.2871 mo
32.2661 23.3013 li
31.231 23.687 30.7344 24.7661 31.1567 25.7114 cv
33.4683 30.8887 li
35.6758 25.9453 li
34.9414 24.3008 li
34.5195 23.355 33.3384 22.9014 32.3037 23.2871 cv
cp
f
38.1836 43.5054 mo
41.4126 36.2729 li
41.835 35.3276 41.3384 34.2485 40.3037 33.8628 cv
40.2656 33.8486 li
39.231 33.4629 38.0498 33.9165 37.6279 34.8623 cv
34.3989 42.0942 li
33.9766 43.0396 34.4731 44.1191 35.5078 44.5049 cv
35.5459 44.5186 li
36.5806 44.9048 37.7612 44.4507 38.1836 43.5054 cv
cp
f
32.3037 33.8486 mo
32.2661 33.8628 li
31.231 34.2485 30.7344 35.3276 31.1567 36.2729 cv
33.4683 41.4502 li
35.6758 36.5063 li
34.9414 34.8623 li
34.5195 33.9165 33.3384 33.4629 32.3037 33.8486 cv
cp
f
49.7803 28.1172 mo
48.7456 27.7314 47.5645 28.1851 47.1421 29.1304 cv
43.9131 36.3628 li
43.4912 37.3081 43.9878 38.3877 45.0225 38.7729 cv
45.0601 38.7871 li
46.0947 39.1729 47.2759 38.7192 47.6982 37.7739 cv
50.9272 30.5415 li
51.3491 29.5962 50.8525 28.5171 49.8179 28.1313 cv
49.7803 28.1172 li
cp
f
41.8184 28.1172 mo
41.7803 28.1313 li
40.7456 28.5171 40.249 29.5962 40.6714 30.5415 cv
42.9829 35.7188 li
45.1904 30.7749 li
44.4561 29.1304 li
44.0337 28.1851 42.853 27.7314 41.8184 28.1172 cv
cp
f
45.0225 49.3345 mo
45.0601 49.3486 li
46.0947 49.7344 47.2759 49.2808 47.6982 48.3354 cv
50.9272 41.103 li
51.3491 40.1577 50.8525 39.0781 49.8179 38.6929 cv
49.7803 38.6787 li
48.7456 38.293 47.5645 38.7466 47.1421 39.6919 cv
43.9131 46.9243 li
43.4912 47.8696 43.9878 48.9487 45.0225 49.3345 cv
cp
f
42.9829 46.2803 mo
45.1904 41.3364 li
44.4561 39.6919 li
44.0337 38.7466 42.853 38.293 41.8184 38.6787 cv
41.7803 38.6929 li
40.7456 39.0781 40.249 40.1577 40.6714 41.103 cv
42.9829 46.2803 li
cp
f
57.4629 32.9438 mo
60.6919 25.7114 li
61.1138 24.7661 60.6172 23.687 59.5825 23.3013 cv
59.5449 23.2871 li
58.5103 22.9014 57.3291 23.355 56.9072 24.3008 cv
53.6777 31.5327 li
53.2559 32.4785 53.7524 33.5576 54.7871 33.9434 cv
54.8247 33.957 li
55.8594 34.3433 57.0405 33.8892 57.4629 32.9438 cv
cp
f
51.583 23.2871 mo
51.5449 23.3013 li
50.5103 23.687 50.0137 24.7661 50.436 25.7114 cv
52.7476 30.8887 li
54.9551 25.9453 li
54.2207 24.3008 li
53.7988 23.355 52.6177 22.9014 51.583 23.2871 cv
cp
f
57.4629 43.5054 mo
60.6919 36.2729 li
61.1138 35.3276 60.6172 34.2485 59.5825 33.8628 cv
59.5449 33.8486 li
58.5103 33.4629 57.3291 33.9165 56.9072 34.8623 cv
53.6777 42.0942 li
53.2559 43.0396 53.7524 44.1191 54.7871 44.5049 cv
54.8247 44.5186 li
55.8594 44.9048 57.0405 44.4507 57.4629 43.5054 cv
cp
f
51.583 33.8486 mo
51.5449 33.8628 li
50.5103 34.2485 50.0137 35.3276 50.436 36.2729 cv
52.7476 41.4502 li
54.9551 36.5063 li
54.2207 34.8623 li
53.7988 33.9165 52.6177 33.4629 51.583 33.8486 cv
cp
f
69.0972 28.1313 mo
69.0591 28.1172 li
68.0244 27.7314 66.8438 28.1851 66.4214 29.1304 cv
63.1924 36.3628 li
62.77 37.3081 63.2666 38.3877 64.3013 38.7729 cv
64.3394 38.7871 li
65.374 39.1729 66.5552 38.7192 66.9771 37.7739 cv
70.2061 30.5415 li
70.6284 29.5962 70.1318 28.5171 69.0972 28.1313 cv
cp
f
63.7354 29.1304 mo
63.313 28.1851 62.1323 27.7314 61.0972 28.1172 cv
61.0596 28.1313 li
60.0249 28.5171 59.5283 29.5962 59.9502 30.5415 cv
62.2617 35.7188 li
64.4697 30.7749 li
63.7354 29.1304 li
cp
f
69.0972 38.6929 mo
69.0591 38.6787 li
68.0244 38.293 66.8438 38.7466 66.4214 39.6919 cv
63.1924 46.9243 li
62.77 47.8696 63.2666 48.9487 64.3013 49.3345 cv
64.3394 49.3486 li
65.374 49.7344 66.5552 49.2808 66.9771 48.3354 cv
70.2061 41.103 li
70.6284 40.1577 70.1318 39.0781 69.0972 38.6929 cv
cp
f
62.2617 46.2803 mo
64.4697 41.3364 li
63.7354 39.6919 li
63.313 38.7466 62.1323 38.293 61.0972 38.6787 cv
61.0596 38.6929 li
60.0249 39.0781 59.5283 40.1577 59.9502 41.103 cv
62.2617 46.2803 li
cp
f
18.9043 54.0669 mo
22.1333 46.8345 li
22.5557 45.8892 22.0591 44.8101 21.0244 44.4243 cv
20.9863 44.4102 li
19.9517 44.0244 18.771 44.478 18.3486 45.4233 cv
15.1196 52.6558 li
14.6973 53.6011 15.1938 54.6807 16.2285 55.0664 cv
16.2666 55.0801 li
17.3013 55.4658 18.4824 55.0122 18.9043 54.0669 cv
cp
f
11.8774 46.8345 mo
14.189 52.0117 li
16.3965 47.0679 li
15.6626 45.4233 li
15.2402 44.478 14.0591 44.0244 13.0244 44.4102 cv
12.9868 44.4243 li
11.9521 44.8101 11.4556 45.8892 11.8774 46.8345 cv
cp
f
18.9043 64.6284 mo
22.1333 57.396 li
22.5557 56.4507 22.0591 55.3716 21.0244 54.9858 cv
20.9863 54.9717 li
19.9517 54.5859 18.771 55.0396 18.3486 55.9849 cv
15.1196 63.2173 li
14.6973 64.1626 15.1938 65.2422 16.2285 65.6274 cv
16.2666 65.6416 li
17.3013 66.0273 18.4824 65.5737 18.9043 64.6284 cv
cp
f
11.8774 57.396 mo
14.189 62.5732 li
16.3965 57.6294 li
15.6626 55.9849 li
15.2402 55.0396 14.0591 54.5859 13.0244 54.9717 cv
12.9868 54.9858 li
11.9521 55.3716 11.4556 56.4507 11.8774 57.396 cv
cp
f
25.7432 59.896 mo
25.7808 59.9102 li
26.8159 60.2959 27.9966 59.8423 28.4189 58.897 cv
31.6479 51.6646 li
32.0703 50.7192 31.5737 49.6396 30.5386 49.2544 cv
30.501 49.2402 li
29.4663 48.8545 28.2852 49.3081 27.8633 50.2534 cv
24.6338 57.4858 li
24.2119 58.4312 24.7085 59.5103 25.7432 59.896 cv
cp
f
23.7036 56.8418 mo
25.9111 51.8979 li
25.1768 50.2534 li
24.7549 49.3081 23.5737 48.8545 22.5391 49.2402 cv
22.501 49.2544 li
21.4663 49.6396 20.9697 50.7192 21.3921 51.6646 cv
23.7036 56.8418 li
cp
f
30.5386 59.8154 mo
30.501 59.8018 li
29.4663 59.4155 28.2852 59.8696 27.8633 60.8149 cv
25.3975 66.3374 li
29.8125 66.3374 li
31.6479 62.2261 li
32.0703 61.2808 31.5737 60.2012 30.5386 59.8154 cv
cp
f
25.1768 60.8149 mo
24.7549 59.8696 23.5737 59.4155 22.5391 59.8018 cv
22.501 59.8154 li
21.4663 60.2012 20.9697 61.2808 21.3921 62.2261 cv
23.2275 66.3374 li
24.1797 66.3374 li
25.9111 62.4595 li
25.1768 60.8149 li
cp
f
38.1836 54.0669 mo
41.4126 46.8345 li
41.835 45.8892 41.3384 44.8101 40.3037 44.4243 cv
40.2656 44.4102 li
39.231 44.0244 38.0498 44.478 37.6279 45.4233 cv
34.3989 52.6558 li
33.9766 53.6011 34.4731 54.6807 35.5078 55.0664 cv
35.5459 55.0801 li
36.5806 55.4658 37.7612 55.0122 38.1836 54.0669 cv
cp
f
33.4683 52.0117 mo
35.6758 47.0679 li
34.9414 45.4233 li
34.5195 44.478 33.3384 44.0244 32.3037 44.4102 cv
32.2661 44.4243 li
31.231 44.8101 30.7344 45.8892 31.1567 46.8345 cv
33.4683 52.0117 li
cp
f
38.1836 64.6284 mo
41.4126 57.396 li
41.835 56.4507 41.3384 55.3716 40.3037 54.9858 cv
40.2656 54.9717 li
39.231 54.5859 38.0498 55.0396 37.6279 55.9849 cv
34.3989 63.2173 li
33.9766 64.1626 34.4731 65.2422 35.5078 65.6274 cv
35.5459 65.6416 li
36.5806 66.0273 37.7612 65.5737 38.1836 64.6284 cv
cp
f
33.4683 62.5732 mo
35.6758 57.6294 li
34.9414 55.9849 li
34.5195 55.0396 33.3384 54.5859 32.3037 54.9717 cv
32.2661 54.9858 li
31.231 55.3716 30.7344 56.4507 31.1567 57.396 cv
33.4683 62.5732 li
cp
f
45.0225 59.896 mo
45.0601 59.9102 li
46.0947 60.2959 47.2759 59.8423 47.6982 58.897 cv
50.9272 51.6646 li
51.3491 50.7192 50.8525 49.6396 49.8179 49.2544 cv
49.7803 49.2402 li
48.7456 48.8545 47.5645 49.3081 47.1421 50.2534 cv
43.9131 57.4858 li
43.4912 58.4312 43.9878 59.5103 45.0225 59.896 cv
cp
f
42.9829 56.8418 mo
45.1904 51.8979 li
44.4561 50.2534 li
44.0337 49.3081 42.853 48.8545 41.8184 49.2402 cv
41.7803 49.2544 li
40.7456 49.6396 40.249 50.7192 40.6714 51.6646 cv
42.9829 56.8418 li
cp
f
49.8179 59.8154 mo
49.7803 59.8018 li
48.7456 59.4155 47.5645 59.8696 47.1421 60.8149 cv
44.6768 66.3374 li
49.0913 66.3374 li
50.9272 62.2261 li
51.3491 61.2808 50.8525 60.2012 49.8179 59.8154 cv
cp
f
44.4561 60.8149 mo
44.0337 59.8696 42.853 59.4155 41.8184 59.8018 cv
41.7803 59.8154 li
40.7456 60.2012 40.249 61.2808 40.6714 62.2261 cv
42.5068 66.3374 li
43.4585 66.3374 li
45.1904 62.4595 li
44.4561 60.8149 li
cp
f
57.4629 54.0669 mo
60.6919 46.8345 li
61.1138 45.8892 60.6172 44.8101 59.5825 44.4243 cv
59.5449 44.4102 li
58.5103 44.0244 57.3291 44.478 56.9072 45.4233 cv
53.6777 52.6558 li
53.2559 53.6011 53.7524 54.6807 54.7871 55.0664 cv
54.8247 55.0801 li
55.8594 55.4658 57.0405 55.0122 57.4629 54.0669 cv
cp
f
52.7476 52.0117 mo
54.9551 47.0679 li
54.2207 45.4233 li
53.7988 44.478 52.6177 44.0244 51.583 44.4102 cv
51.5449 44.4243 li
50.5103 44.8101 50.0137 45.8892 50.436 46.8345 cv
52.7476 52.0117 li
cp
f
57.4629 64.6284 mo
60.6919 57.396 li
61.1138 56.4507 60.6172 55.3716 59.5825 54.9858 cv
59.5449 54.9717 li
58.5103 54.5859 57.3291 55.0396 56.9072 55.9849 cv
53.6777 63.2173 li
53.2559 64.1626 53.7524 65.2422 54.7871 65.6274 cv
54.8247 65.6416 li
55.8594 66.0273 57.0405 65.5737 57.4629 64.6284 cv
cp
f
52.7476 62.5732 mo
54.9551 57.6294 li
54.2207 55.9849 li
53.7988 55.0396 52.6177 54.5859 51.583 54.9717 cv
51.5449 54.9858 li
50.5103 55.3716 50.0137 56.4507 50.436 57.396 cv
52.7476 62.5732 li
cp
f
64.3013 59.896 mo
64.3394 59.9102 li
65.374 60.2959 66.5552 59.8423 66.9771 58.897 cv
70.2061 51.6646 li
70.6284 50.7192 70.1318 49.6396 69.0972 49.2544 cv
69.0591 49.2402 li
68.0244 48.8545 66.8438 49.3081 66.4214 50.2534 cv
63.1924 57.4858 li
62.77 58.4312 63.2666 59.5103 64.3013 59.896 cv
cp
f
62.2617 56.8418 mo
64.4697 51.8979 li
63.7354 50.2534 li
63.313 49.3081 62.1323 48.8545 61.0972 49.2402 cv
61.0596 49.2544 li
60.0249 49.6396 59.5283 50.7192 59.9502 51.6646 cv
62.2617 56.8418 li
cp
f
69.0972 59.8154 mo
69.0591 59.8018 li
68.0244 59.4155 66.8438 59.8696 66.4214 60.8149 cv
63.9556 66.3374 li
68.3706 66.3374 li
70.2061 62.2261 li
70.6284 61.2808 70.1318 60.2012 69.0972 59.8154 cv
cp
f
63.7354 60.8149 mo
63.313 59.8696 62.1323 59.4155 61.0972 59.8018 cv
61.0596 59.8154 li
60.0249 60.2012 59.5283 61.2808 59.9502 62.2261 cv
61.7861 66.3374 li
62.7378 66.3374 li
64.4697 62.4595 li
63.7354 60.8149 li
cp
f
6.6416 9.73633 mo
6.6416 11.5703 5.15479 13.0571 3.3208 13.0571 cv
1.48682 13.0571 0 11.5703 0 9.73633 cv
0 7.90234 1.48682 6.41553 3.3208 6.41553 cv
5.15479 6.41553 6.6416 7.90234 6.6416 9.73633 cv
cp
.976471 .698039 .2 rgb
f
174.976 13.3086 mo
114.976 13.3086 li
114.976 9.09963 li
174.976 9.09963 li
174.976 13.3086 li
f
174.976 20.5449 mo
114.976 20.5449 li
114.976 16.336 li
174.976 16.336 li
174.976 20.5449 li
f
174.976 27.7812 mo
114.976 27.7812 li
114.976 23.5723 li
174.976 23.5723 li
174.976 27.7812 li
f
174.976 35.0176 mo
114.976 35.0176 li
114.976 30.8086 li
174.976 30.8086 li
174.976 35.0176 li
f
174.976 42.2539 mo
114.976 42.2539 li
114.976 38.045 li
174.976 38.045 li
174.976 42.2539 li
f
174.976 49.4902 mo
114.976 49.4902 li
114.976 45.2813 li
174.976 45.2813 li
174.976 49.4902 li
f
174.976 56.7266 mo
114.976 56.7266 li
114.976 52.5176 li
174.976 52.5176 li
174.976 56.7266 li
f
119.042 56.7769 mo
114.976 56.7769 li
114.976 56.7266 li
119.042 56.7266 li
119.042 56.7769 li
119.042 52.5176 mo
114.976 52.5176 li
114.976 49.4902 li
119.042 49.4902 li
119.042 52.5176 li
119.042 45.2813 mo
114.976 45.2813 li
114.976 42.2539 li
119.042 42.2539 li
119.042 45.2813 li
119.042 38.045 mo
114.976 38.045 li
114.976 35.0176 li
119.042 35.0176 li
119.042 38.045 li
119.042 30.8086 mo
114.976 30.8086 li
114.976 27.7812 li
119.042 27.7812 li
119.042 30.8086 li
119.042 23.5723 mo
114.976 23.5723 li
114.976 20.5449 li
119.042 20.5449 li
119.042 23.5723 li
119.042 16.336 mo
114.976 16.336 li
114.976 13.3086 li
119.042 13.3086 li
119.042 16.336 li
.988189 .848427 .598431 rgb
f
119.042 13.3086 mo
114.976 13.3086 li
114.976 9.09963 li
119.042 9.09963 li
119.042 13.3086 li
.976471 .698039 .2 rgb
f
119.042 20.5449 mo
114.976 20.5449 li
114.976 16.336 li
119.042 16.336 li
119.042 20.5449 li
f
119.042 27.7812 mo
114.976 27.7812 li
114.976 23.5723 li
119.042 23.5723 li
119.042 27.7812 li
f
119.042 35.0176 mo
114.976 35.0176 li
114.976 30.8086 li
119.042 30.8086 li
119.042 35.0176 li
f
119.042 42.2539 mo
114.976 42.2539 li
114.976 38.045 li
119.042 38.045 li
119.042 42.2539 li
f
119.042 49.4902 mo
114.976 49.4902 li
114.976 45.2813 li
119.042 45.2813 li
119.042 49.4902 li
f
119.042 56.7266 mo
114.976 56.7266 li
114.976 52.5176 li
119.042 52.5176 li
119.042 56.7266 li
f
126.034 56.7769 mo
121.967 56.7769 li
121.967 56.7266 li
126.034 56.7266 li
126.034 56.7769 li
126.034 52.5176 mo
121.967 52.5176 li
121.967 49.4902 li
126.034 49.4902 li
126.034 52.5176 li
126.034 45.2813 mo
121.967 45.2813 li
121.967 42.2539 li
126.034 42.2539 li
126.034 45.2813 li
126.034 38.045 mo
121.967 38.045 li
121.967 35.0176 li
126.034 35.0176 li
126.034 38.045 li
126.034 30.8086 mo
121.967 30.8086 li
121.967 27.7812 li
126.034 27.7812 li
126.034 30.8086 li
126.034 23.5723 mo
121.967 23.5723 li
121.967 20.5449 li
126.034 20.5449 li
126.034 23.5723 li
126.034 16.336 mo
121.967 16.336 li
121.967 13.3086 li
126.034 13.3086 li
126.034 16.336 li
.988189 .848427 .598431 rgb
f
126.034 13.3086 mo
121.967 13.3086 li
121.967 9.09963 li
126.034 9.09963 li
126.034 13.3086 li
.976471 .698039 .2 rgb
f
126.034 20.5449 mo
121.967 20.5449 li
121.967 16.336 li
126.034 16.336 li
126.034 20.5449 li
f
126.034 27.7812 mo
121.967 27.7812 li
121.967 23.5723 li
126.034 23.5723 li
126.034 27.7812 li
f
126.034 35.0176 mo
121.967 35.0176 li
121.967 30.8086 li
126.034 30.8086 li
126.034 35.0176 li
f
126.034 42.2539 mo
121.967 42.2539 li
121.967 38.045 li
126.034 38.045 li
126.034 42.2539 li
f
126.034 49.4902 mo
121.967 49.4902 li
121.967 45.2813 li
126.034 45.2813 li
126.034 49.4902 li
f
126.034 56.7266 mo
121.967 56.7266 li
121.967 52.5176 li
126.034 52.5176 li
126.034 56.7266 li
f
133.026 56.7769 mo
128.959 56.7769 li
128.959 56.7266 li
133.026 56.7266 li
133.026 56.7769 li
133.026 52.5176 mo
128.959 52.5176 li
128.959 49.4902 li
133.026 49.4902 li
133.026 52.5176 li
133.026 45.2813 mo
128.959 45.2813 li
128.959 42.2539 li
133.026 42.2539 li
133.026 45.2813 li
133.026 38.045 mo
128.959 38.045 li
128.959 35.0176 li
133.026 35.0176 li
133.026 38.045 li
133.026 30.8086 mo
128.959 30.8086 li
128.959 27.7812 li
133.026 27.7812 li
133.026 30.8086 li
133.026 23.5723 mo
128.959 23.5723 li
128.959 20.5449 li
133.026 20.5449 li
133.026 23.5723 li
133.026 16.336 mo
128.959 16.336 li
128.959 13.3086 li
133.026 13.3086 li
133.026 16.336 li
.988189 .848427 .598431 rgb
f
133.026 13.3086 mo
128.959 13.3086 li
128.959 9.09963 li
133.026 9.09963 li
133.026 13.3086 li
.976471 .698039 .2 rgb
f
133.026 20.5449 mo
128.959 20.5449 li
128.959 16.336 li
133.026 16.336 li
133.026 20.5449 li
f
133.026 27.7812 mo
128.959 27.7812 li
128.959 23.5723 li
133.026 23.5723 li
133.026 27.7812 li
f
133.026 35.0176 mo
128.959 35.0176 li
128.959 30.8086 li
133.026 30.8086 li
133.026 35.0176 li
f
133.026 42.2539 mo
128.959 42.2539 li
128.959 38.045 li
133.026 38.045 li
133.026 42.2539 li
f
133.026 49.4902 mo
128.959 49.4902 li
128.959 45.2813 li
133.026 45.2813 li
133.026 49.4902 li
f
133.026 56.7266 mo
128.959 56.7266 li
128.959 52.5176 li
133.026 52.5176 li
133.026 56.7266 li
f
140.018 56.7769 mo
135.951 56.7769 li
135.951 56.7266 li
140.018 56.7266 li
140.018 56.7769 li
140.018 52.5176 mo
135.951 52.5176 li
135.951 49.4902 li
140.018 49.4902 li
140.018 52.5176 li
140.018 45.2813 mo
135.951 45.2813 li
135.951 42.2539 li
140.018 42.2539 li
140.018 45.2813 li
140.018 38.045 mo
135.951 38.045 li
135.951 35.0176 li
140.018 35.0176 li
140.018 38.045 li
140.018 30.8086 mo
135.951 30.8086 li
135.951 27.7812 li
140.018 27.7812 li
140.018 30.8086 li
140.018 23.5723 mo
135.951 23.5723 li
135.951 20.5449 li
140.018 20.5449 li
140.018 23.5723 li
140.018 16.336 mo
135.951 16.336 li
135.951 13.3086 li
140.018 13.3086 li
140.018 16.336 li
.988189 .848427 .598431 rgb
f
140.018 13.3086 mo
135.951 13.3086 li
135.951 9.09963 li
140.018 9.09963 li
140.018 13.3086 li
.976471 .698039 .2 rgb
f
140.018 20.5449 mo
135.951 20.5449 li
135.951 16.336 li
140.018 16.336 li
140.018 20.5449 li
f
140.018 27.7812 mo
135.951 27.7812 li
135.951 23.5723 li
140.018 23.5723 li
140.018 27.7812 li
f
140.018 35.0176 mo
135.951 35.0176 li
135.951 30.8086 li
140.018 30.8086 li
140.018 35.0176 li
f
140.018 42.2539 mo
135.951 42.2539 li
135.951 38.045 li
140.018 38.045 li
140.018 42.2539 li
f
140.018 49.4902 mo
135.951 49.4902 li
135.951 45.2813 li
140.018 45.2813 li
140.018 49.4902 li
f
140.018 56.7266 mo
135.951 56.7266 li
135.951 52.5176 li
140.018 52.5176 li
140.018 56.7266 li
f
147.009 56.7769 mo
142.942 56.7769 li
142.942 56.7266 li
147.009 56.7266 li
147.009 56.7769 li
147.009 52.5176 mo
142.942 52.5176 li
142.942 49.4902 li
147.009 49.4902 li
147.009 52.5176 li
147.009 45.2813 mo
142.942 45.2813 li
142.942 42.2539 li
147.009 42.2539 li
147.009 45.2813 li
147.009 38.045 mo
142.942 38.045 li
142.942 35.0176 li
147.009 35.0176 li
147.009 38.045 li
147.009 30.8086 mo
142.942 30.8086 li
142.942 27.7812 li
147.009 27.7812 li
147.009 30.8086 li
147.009 23.5723 mo
142.942 23.5723 li
142.942 20.5449 li
147.009 20.5449 li
147.009 23.5723 li
147.009 16.336 mo
142.942 16.336 li
142.942 13.3086 li
147.009 13.3086 li
147.009 16.336 li
.988189 .848427 .598431 rgb
f
147.009 13.3086 mo
142.942 13.3086 li
142.942 9.09963 li
147.009 9.09963 li
147.009 13.3086 li
.976471 .698039 .2 rgb
f
147.009 20.5449 mo
142.942 20.5449 li
142.942 16.336 li
147.009 16.336 li
147.009 20.5449 li
f
147.009 27.7812 mo
142.942 27.7812 li
142.942 23.5723 li
147.009 23.5723 li
147.009 27.7812 li
f
147.009 35.0176 mo
142.942 35.0176 li
142.942 30.8086 li
147.009 30.8086 li
147.009 35.0176 li
f
147.009 42.2539 mo
142.942 42.2539 li
142.942 38.045 li
147.009 38.045 li
147.009 42.2539 li
f
147.009 49.4902 mo
142.942 49.4902 li
142.942 45.2813 li
147.009 45.2813 li
147.009 49.4902 li
f
147.009 56.7266 mo
142.942 56.7266 li
142.942 52.5176 li
147.009 52.5176 li
147.009 56.7266 li
f
154.001 56.7769 mo
149.934 56.7769 li
149.934 56.7266 li
154.001 56.7266 li
154.001 56.7769 li
154.001 52.5176 mo
149.934 52.5176 li
149.934 49.4902 li
154.001 49.4902 li
154.001 52.5176 li
154.001 45.2813 mo
149.934 45.2813 li
149.934 42.2539 li
154.001 42.2539 li
154.001 45.2813 li
154.001 38.045 mo
149.934 38.045 li
149.934 35.0176 li
154.001 35.0176 li
154.001 38.045 li
154.001 30.8086 mo
149.934 30.8086 li
149.934 27.7812 li
154.001 27.7812 li
154.001 30.8086 li
154.001 23.5723 mo
149.934 23.5723 li
149.934 20.5449 li
154.001 20.5449 li
154.001 23.5723 li
154.001 16.336 mo
149.934 16.336 li
149.934 13.3086 li
154.001 13.3086 li
154.001 16.336 li
.988189 .848427 .598431 rgb
f
154.001 13.3086 mo
149.934 13.3086 li
149.934 9.09963 li
154.001 9.09963 li
154.001 13.3086 li
.976471 .698039 .2 rgb
f
154.001 20.5449 mo
149.934 20.5449 li
149.934 16.336 li
154.001 16.336 li
154.001 20.5449 li
f
154.001 27.7812 mo
149.934 27.7812 li
149.934 23.5723 li
154.001 23.5723 li
154.001 27.7812 li
f
154.001 35.0176 mo
149.934 35.0176 li
149.934 30.8086 li
154.001 30.8086 li
154.001 35.0176 li
f
154.001 42.2539 mo
149.934 42.2539 li
149.934 38.045 li
154.001 38.045 li
154.001 42.2539 li
f
154.001 49.4902 mo
149.934 49.4902 li
149.934 45.2813 li
154.001 45.2813 li
154.001 49.4902 li
f
154.001 56.7266 mo
149.934 56.7266 li
149.934 52.5176 li
154.001 52.5176 li
154.001 56.7266 li
f
160.993 56.7769 mo
156.926 56.7769 li
156.926 56.7266 li
160.993 56.7266 li
160.993 56.7769 li
160.993 52.5176 mo
156.926 52.5176 li
156.926 49.4902 li
160.993 49.4902 li
160.993 52.5176 li
160.993 45.2813 mo
156.926 45.2813 li
156.926 42.2539 li
160.993 42.2539 li
160.993 45.2813 li
160.993 38.045 mo
156.926 38.045 li
156.926 35.0176 li
160.993 35.0176 li
160.993 38.045 li
160.993 30.8086 mo
156.926 30.8086 li
156.926 27.7812 li
160.993 27.7812 li
160.993 30.8086 li
160.993 23.5723 mo
156.926 23.5723 li
156.926 20.5449 li
160.993 20.5449 li
160.993 23.5723 li
160.993 16.336 mo
156.926 16.336 li
156.926 13.3086 li
160.993 13.3086 li
160.993 16.336 li
.988189 .848427 .598431 rgb
f
160.993 13.3086 mo
156.926 13.3086 li
156.926 9.09963 li
160.993 9.09963 li
160.993 13.3086 li
.976471 .698039 .2 rgb
f
160.993 20.5449 mo
156.926 20.5449 li
156.926 16.336 li
160.993 16.336 li
160.993 20.5449 li
f
160.993 27.7812 mo
156.926 27.7812 li
156.926 23.5723 li
160.993 23.5723 li
160.993 27.7812 li
f
160.993 35.0176 mo
156.926 35.0176 li
156.926 30.8086 li
160.993 30.8086 li
160.993 35.0176 li
f
160.993 42.2539 mo
156.926 42.2539 li
156.926 38.045 li
160.993 38.045 li
160.993 42.2539 li
f
160.993 49.4902 mo
156.926 49.4902 li
156.926 45.2813 li
160.993 45.2813 li
160.993 49.4902 li
f
160.993 56.7266 mo
156.926 56.7266 li
156.926 52.5176 li
160.993 52.5176 li
160.993 56.7266 li
f
167.984 56.7769 mo
163.917 56.7769 li
163.917 56.7266 li
167.984 56.7266 li
167.984 56.7769 li
167.984 52.5176 mo
163.917 52.5176 li
163.917 49.4902 li
167.984 49.4902 li
167.984 52.5176 li
167.984 45.2813 mo
163.917 45.2813 li
163.917 42.2539 li
167.984 42.2539 li
167.984 45.2813 li
167.984 38.045 mo
163.917 38.045 li
163.917 35.0176 li
167.984 35.0176 li
167.984 38.045 li
167.984 30.8086 mo
163.917 30.8086 li
163.917 27.7812 li
167.984 27.7812 li
167.984 30.8086 li
167.984 23.5723 mo
163.917 23.5723 li
163.917 20.5449 li
167.984 20.5449 li
167.984 23.5723 li
167.984 16.336 mo
163.917 16.336 li
163.917 13.3086 li
167.984 13.3086 li
167.984 16.336 li
.988189 .848427 .598431 rgb
f
167.984 13.3086 mo
163.917 13.3086 li
163.917 9.09963 li
167.984 9.09963 li
167.984 13.3086 li
.976471 .698039 .2 rgb
f
167.984 20.5449 mo
163.917 20.5449 li
163.917 16.336 li
167.984 16.336 li
167.984 20.5449 li
f
167.984 27.7812 mo
163.917 27.7812 li
163.917 23.5723 li
167.984 23.5723 li
167.984 27.7812 li
f
167.984 35.0176 mo
163.917 35.0176 li
163.917 30.8086 li
167.984 30.8086 li
167.984 35.0176 li
f
167.984 42.2539 mo
163.917 42.2539 li
163.917 38.045 li
167.984 38.045 li
167.984 42.2539 li
f
167.984 49.4902 mo
163.917 49.4902 li
163.917 45.2813 li
167.984 45.2813 li
167.984 49.4902 li
f
167.984 56.7266 mo
163.917 56.7266 li
163.917 52.5176 li
167.984 52.5176 li
167.984 56.7266 li
f
174.976 56.7769 mo
170.909 56.7769 li
170.909 56.7266 li
174.976 56.7266 li
174.976 52.5176 li
170.909 52.5176 li
170.909 49.4902 li
174.976 49.4902 li
174.976 45.2813 li
170.909 45.2813 li
170.909 42.2539 li
174.976 42.2539 li
174.976 38.045 li
170.909 38.045 li
170.909 35.0176 li
174.976 35.0176 li
174.976 30.8086 li
170.909 30.8086 li
170.909 27.7812 li
174.976 27.7812 li
174.976 23.5723 li
170.909 23.5723 li
170.909 20.5449 li
174.976 20.5449 li
174.976 16.336 li
170.909 16.336 li
170.909 13.3086 li
174.976 13.3086 li
174.976 9.09963 li
174.976 56.7769 li
.988189 .848427 .598431 rgb
f
174.976 13.3086 mo
170.909 13.3086 li
170.909 9.09963 li
174.976 9.09963 li
174.976 13.3086 li
.976471 .698039 .2 rgb
f
174.976 20.5449 mo
170.909 20.5449 li
170.909 16.336 li
174.976 16.336 li
174.976 20.5449 li
f
174.976 27.7812 mo
170.909 27.7812 li
170.909 23.5723 li
174.976 23.5723 li
174.976 27.7812 li
f
174.976 35.0176 mo
170.909 35.0176 li
170.909 30.8086 li
174.976 30.8086 li
174.976 35.0176 li
f
174.976 42.2539 mo
170.909 42.2539 li
170.909 38.045 li
174.976 38.045 li
174.976 42.2539 li
f
174.976 49.4902 mo
170.909 49.4902 li
170.909 45.2813 li
174.976 45.2813 li
174.976 49.4902 li
f
174.976 56.7266 mo
170.909 56.7266 li
170.909 52.5176 li
174.976 52.5176 li
174.976 56.7266 li
f
117.009 66.2378 mo
114.976 66.2378 li
114.976 56.7266 li
117.009 56.7266 li
117.009 66.2378 li
cp
.976471 .698039 .2 rgb
f
121.468 66.2378 mo
119.435 66.2378 li
119.435 56.7266 li
121.468 56.7266 li
121.468 66.2378 li
cp
f
125.927 66.2378 mo
123.894 66.2378 li
123.894 56.7266 li
125.927 56.7266 li
125.927 66.2378 li
cp
f
130.386 66.2378 mo
128.353 66.2378 li
128.353 56.7266 li
130.386 56.7266 li
130.386 66.2378 li
cp
f
134.845 66.2378 mo
132.812 66.2378 li
132.812 56.7266 li
134.845 56.7266 li
134.845 66.2378 li
cp
f
139.304 66.2378 mo
137.271 66.2378 li
137.271 56.7266 li
139.304 56.7266 li
139.304 66.2378 li
cp
f
143.763 66.2378 mo
141.729 66.2378 li
141.729 56.7266 li
143.763 56.7266 li
143.763 66.2378 li
cp
f
148.222 66.2378 mo
146.188 66.2378 li
146.188 56.7266 li
148.222 56.7266 li
148.222 66.2378 li
cp
f
152.681 66.2378 mo
150.647 66.2378 li
150.647 56.7266 li
152.681 56.7266 li
152.681 66.2378 li
cp
f
157.14 66.2378 mo
155.106 66.2378 li
155.106 56.7266 li
157.14 56.7266 li
157.14 66.2378 li
cp
f
161.599 66.2378 mo
159.565 66.2378 li
159.565 56.7266 li
161.599 56.7266 li
161.599 66.2378 li
cp
f
166.058 66.2378 mo
164.024 66.2378 li
164.024 56.7266 li
166.058 56.7266 li
166.058 66.2378 li
cp
f
170.517 66.2378 mo
168.483 66.2378 li
168.483 56.7266 li
170.517 56.7266 li
170.517 66.2378 li
cp
f
174.976 66.2378 mo
172.942 66.2378 li
172.942 56.7266 li
174.976 56.7266 li
174.976 66.2378 li
cp
f
390.685 17.7647 mo
390.685 58.3521 li
390.685 61.5459 388.096 64.1348 384.902 64.1348 cv
338.52 64.1348 li
335.326 64.1348 332.737 61.5459 332.737 58.3521 cv
332.737 17.7647 li
332.737 14.5712 335.326 11.9819 338.52 11.9819 cv
384.902 11.9819 li
388.096 11.9819 390.685 14.5712 390.685 17.7647 cv
.584314 .756863 .121569 rgb
f
390.685 17.7647 mo
390.685 58.3521 li
390.685 61.5459 388.096 64.1348 384.902 64.1348 cv
338.52 64.1348 li
335.326 64.1348 332.737 61.5459 332.737 58.3521 cv
332.737 17.7647 li
332.737 14.5712 335.326 11.9819 338.52 11.9819 cv
384.902 11.9819 li
388.096 11.9819 390.685 14.5712 390.685 17.7647 cv
f
386.912 22.9277 mo
386.912 22.9067 li
386.912 22.3433 387.363 21.8867 387.92 21.8867 cv
393.449 21.8867 li
394.006 21.8867 394.457 22.3433 394.457 22.9067 cv
394.457 22.9277 li
394.457 23.4907 394.006 23.9478 393.449 23.9478 cv
387.92 23.9478 li
387.363 23.9478 386.912 23.4907 386.912 22.9277 cv
cp
.952941 .572549 0 rgb
f
386.912 29.1104 mo
386.912 29.0898 li
386.912 28.5264 387.363 28.0698 387.92 28.0698 cv
393.449 28.0698 li
394.006 28.0698 394.457 28.5264 394.457 29.0898 cv
394.457 29.1104 li
394.457 29.6738 394.006 30.1304 393.449 30.1304 cv
387.92 30.1304 li
387.363 30.1304 386.912 29.6738 386.912 29.1104 cv
cp
f
386.912 35.2935 mo
386.912 35.2725 li
386.912 34.7095 387.363 34.2524 387.92 34.2524 cv
393.449 34.2524 li
394.006 34.2524 394.457 34.7095 394.457 35.2725 cv
394.457 35.2935 li
394.457 35.8569 394.006 36.3135 393.449 36.3135 cv
387.92 36.3135 li
387.363 36.3135 386.912 35.8569 386.912 35.2935 cv
cp
f
386.912 41.4761 mo
386.912 41.4556 li
386.912 40.8921 387.363 40.4355 387.92 40.4355 cv
393.449 40.4355 li
394.006 40.4355 394.457 40.8921 394.457 41.4556 cv
394.457 41.4761 li
394.457 42.0396 394.006 42.4966 393.449 42.4966 cv
387.92 42.4966 li
387.363 42.4966 386.912 42.0396 386.912 41.4761 cv
cp
f
386.912 47.6592 mo
386.912 47.6387 li
386.912 47.0752 387.363 46.6182 387.92 46.6182 cv
393.449 46.6182 li
394.006 46.6182 394.457 47.0752 394.457 47.6387 cv
394.457 47.6592 li
394.457 48.2227 394.006 48.6792 393.449 48.6792 cv
387.92 48.6792 li
387.363 48.6792 386.912 48.2227 386.912 47.6592 cv
cp
f
386.912 53.8418 mo
386.912 53.8213 li
386.912 53.2578 387.363 52.8013 387.92 52.8013 cv
393.449 52.8013 li
394.006 52.8013 394.457 53.2578 394.457 53.8213 cv
394.457 53.8418 li
394.457 54.4053 394.006 54.8623 393.449 54.8623 cv
387.92 54.8623 li
387.363 54.8623 386.912 54.4053 386.912 53.8418 cv
cp
f
379.934 60.3623 mo
379.954 60.3623 li
380.518 60.3623 380.974 60.8135 380.974 61.3706 cv
380.974 66.8989 li
380.974 67.4556 380.518 67.9072 379.954 67.9072 cv
379.934 67.9072 li
379.37 67.9072 378.913 67.4556 378.913 66.8989 cv
378.913 61.3706 li
378.913 60.8135 379.37 60.3623 379.934 60.3623 cv
cp
f
373.75 60.3623 mo
373.771 60.3623 li
374.334 60.3623 374.791 60.8135 374.791 61.3706 cv
374.791 66.8989 li
374.791 67.4556 374.334 67.9072 373.771 67.9072 cv
373.75 67.9072 li
373.187 67.9072 372.73 67.4556 372.73 66.8989 cv
372.73 61.3706 li
372.73 60.8135 373.187 60.3623 373.75 60.3623 cv
cp
f
367.567 60.3623 mo
367.588 60.3623 li
368.151 60.3623 368.608 60.8135 368.608 61.3706 cv
368.608 66.8989 li
368.608 67.4556 368.151 67.9072 367.588 67.9072 cv
367.567 67.9072 li
367.004 67.9072 366.547 67.4556 366.547 66.8989 cv
366.547 61.3706 li
366.547 60.8135 367.004 60.3623 367.567 60.3623 cv
cp
f
361.385 60.3623 mo
361.405 60.3623 li
361.969 60.3623 362.426 60.8135 362.426 61.3706 cv
362.426 66.8989 li
362.426 67.4556 361.969 67.9072 361.405 67.9072 cv
361.385 67.9072 li
360.821 67.9072 360.364 67.4556 360.364 66.8989 cv
360.364 61.3706 li
360.364 60.8135 360.821 60.3623 361.385 60.3623 cv
cp
f
355.202 60.3623 mo
355.223 60.3623 li
355.786 60.3623 356.242 60.8135 356.242 61.3706 cv
356.242 66.8989 li
356.242 67.4556 355.786 67.9072 355.223 67.9072 cv
355.202 67.9072 li
354.639 67.9072 354.182 67.4556 354.182 66.8989 cv
354.182 61.3706 li
354.182 60.8135 354.639 60.3623 355.202 60.3623 cv
cp
f
349.019 60.3623 mo
349.039 60.3623 li
349.603 60.3623 350.06 60.8135 350.06 61.3706 cv
350.06 66.8989 li
350.06 67.4556 349.603 67.9072 349.039 67.9072 cv
349.019 67.9072 li
348.455 67.9072 347.999 67.4556 347.999 66.8989 cv
347.999 61.3706 li
347.999 60.8135 348.455 60.3623 349.019 60.3623 cv
cp
f
342.836 60.3623 mo
342.856 60.3623 li
343.42 60.3623 343.877 60.8135 343.877 61.3706 cv
343.877 66.8989 li
343.877 67.4556 343.42 67.9072 342.856 67.9072 cv
342.836 67.9072 li
342.272 67.9072 341.815 67.4556 341.815 66.8989 cv
341.815 61.3706 li
341.815 60.8135 342.272 60.3623 342.836 60.3623 cv
cp
f
336.51 53.1895 mo
336.51 53.21 li
336.51 53.7734 336.059 54.23 335.502 54.23 cv
329.974 54.23 li
329.416 54.23 328.965 53.7734 328.965 53.21 cv
328.965 53.1895 li
328.965 52.626 329.416 52.1689 329.974 52.1689 cv
335.502 52.1689 li
336.059 52.1689 336.51 52.626 336.51 53.1895 cv
cp
f
336.51 47.0063 mo
336.51 47.0269 li
336.51 47.5903 336.059 48.0474 335.502 48.0474 cv
329.974 48.0474 li
329.416 48.0474 328.965 47.5903 328.965 47.0269 cv
328.965 47.0063 li
328.965 46.4429 329.416 45.9863 329.974 45.9863 cv
335.502 45.9863 li
336.059 45.9863 336.51 46.4429 336.51 47.0063 cv
cp
f
336.51 40.8232 mo
336.51 40.8442 li
336.51 41.4077 336.059 41.8643 335.502 41.8643 cv
329.974 41.8643 li
329.416 41.8643 328.965 41.4077 328.965 40.8442 cv
328.965 40.8232 li
328.965 40.2603 329.416 39.8032 329.974 39.8032 cv
335.502 39.8032 li
336.059 39.8032 336.51 40.2603 336.51 40.8232 cv
cp
f
336.51 34.6406 mo
336.51 34.6611 li
336.51 35.2246 336.059 35.6812 335.502 35.6812 cv
329.974 35.6812 li
329.416 35.6812 328.965 35.2246 328.965 34.6611 cv
328.965 34.6406 li
328.965 34.0771 329.416 33.6206 329.974 33.6206 cv
335.502 33.6206 li
336.059 33.6206 336.51 34.0771 336.51 34.6406 cv
cp
f
336.51 28.458 mo
336.51 28.4785 li
336.51 29.042 336.059 29.4985 335.502 29.4985 cv
329.974 29.4985 li
329.416 29.4985 328.965 29.042 328.965 28.4785 cv
328.965 28.458 li
328.965 27.894 329.416 27.4375 329.974 27.4375 cv
335.502 27.4375 li
336.059 27.4375 336.51 27.894 336.51 28.458 cv
cp
f
336.51 22.2749 mo
336.51 22.2954 li
336.51 22.8589 336.059 23.3154 335.502 23.3154 cv
329.974 23.3154 li
329.416 23.3154 328.965 22.8589 328.965 22.2954 cv
328.965 22.2749 li
328.965 21.7114 329.416 21.2549 329.974 21.2549 cv
335.502 21.2549 li
336.059 21.2549 336.51 21.7114 336.51 22.2749 cv
cp
f
336.464 16.9385 mo
336.458 16.9585 li
336.301 17.4995 335.739 17.812 335.205 17.6563 cv
329.896 16.1128 li
329.361 15.957 329.056 15.3926 329.213 14.8516 cv
329.219 14.8315 li
329.376 14.2905 329.938 13.978 330.472 14.1338 cv
335.78 15.6772 li
336.315 15.833 336.621 16.3975 336.464 16.9385 cv
cp
f
343.488 15.7549 mo
343.468 15.7549 li
342.904 15.7549 342.448 15.3032 342.448 14.7466 cv
342.448 9.21777 li
342.448 8.66113 342.904 8.20947 343.468 8.20947 cv
343.488 8.20947 li
344.052 8.20947 344.509 8.66113 344.509 9.21777 cv
344.509 14.7466 li
344.509 15.3032 344.052 15.7549 343.488 15.7549 cv
cp
f
338.225 15.6733 mo
338.205 15.6797 li
337.668 15.8511 337.096 15.5591 336.927 15.0288 cv
335.249 9.76074 li
335.08 9.23047 335.378 8.66162 335.915 8.49072 cv
335.935 8.48438 li
336.472 8.31348 337.044 8.60498 337.213 9.13525 cv
338.891 14.4033 li
339.06 14.9336 338.762 15.5024 338.225 15.6733 cv
cp
f
386.699 16.9385 mo
386.705 16.9585 li
386.862 17.4995 387.424 17.812 387.959 17.6563 cv
393.267 16.1128 li
393.802 15.957 394.107 15.3926 393.95 14.8516 cv
393.944 14.8315 li
393.787 14.2905 393.227 13.978 392.691 14.1338 cv
387.383 15.6772 li
386.849 15.833 386.542 16.3975 386.699 16.9385 cv
cp
f
384.938 15.6733 mo
384.958 15.6797 li
385.495 15.8511 386.067 15.5591 386.236 15.0288 cv
387.914 9.76074 li
388.083 9.23047 387.785 8.66162 387.248 8.49072 cv
387.229 8.48438 li
386.691 8.31348 386.119 8.60498 385.95 9.13525 cv
384.272 14.4033 li
384.104 14.9336 384.401 15.5024 384.938 15.6733 cv
cp
f
386.699 58.958 mo
386.705 58.938 li
386.862 58.397 387.424 58.0845 387.959 58.2397 cv
393.267 59.7837 li
393.802 59.939 394.107 60.5039 393.95 61.0444 cv
393.944 61.0645 li
393.787 61.6055 393.227 61.918 392.691 61.7627 cv
387.383 60.2188 li
386.849 60.0635 386.542 59.4985 386.699 58.958 cv
cp
f
384.938 60.2227 mo
384.958 60.2163 li
385.495 60.0454 386.067 60.3369 386.236 60.8677 cv
387.914 66.1353 li
388.083 66.666 387.785 67.2349 387.248 67.4058 cv
387.229 67.4121 li
386.691 67.583 386.119 67.2915 385.95 66.7607 cv
384.272 61.4932 li
384.104 60.9624 384.401 60.3936 384.938 60.2227 cv
cp
f
336.464 58.958 mo
336.458 58.938 li
336.301 58.397 335.739 58.0845 335.205 58.2397 cv
329.896 59.7837 li
329.361 59.939 329.056 60.5039 329.213 61.0444 cv
329.219 61.0645 li
329.376 61.6055 329.938 61.918 330.472 61.7627 cv
335.78 60.2188 li
336.315 60.0635 336.621 59.4985 336.464 58.958 cv
cp
f
338.225 60.2227 mo
338.205 60.2163 li
337.668 60.0454 337.096 60.3369 336.927 60.8677 cv
335.249 66.1353 li
335.08 66.666 335.378 67.2349 335.915 67.4058 cv
335.935 67.4121 li
336.472 67.583 337.044 67.2915 337.213 66.7607 cv
338.891 61.4932 li
339.06 60.9624 338.762 60.3936 338.225 60.2227 cv
cp
f
349.672 15.7549 mo
349.65 15.7549 li
349.088 15.7549 348.631 15.3032 348.631 14.7466 cv
348.631 9.21777 li
348.631 8.66113 349.088 8.20947 349.65 8.20947 cv
349.672 8.20947 li
350.235 8.20947 350.691 8.66113 350.691 9.21777 cv
350.691 14.7466 li
350.691 15.3032 350.235 15.7549 349.672 15.7549 cv
cp
f
355.854 15.7549 mo
355.834 15.7549 li
355.271 15.7549 354.813 15.3032 354.813 14.7466 cv
354.813 9.21777 li
354.813 8.66113 355.271 8.20947 355.834 8.20947 cv
355.854 8.20947 li
356.418 8.20947 356.875 8.66113 356.875 9.21777 cv
356.875 14.7466 li
356.875 15.3032 356.418 15.7549 355.854 15.7549 cv
cp
f
362.037 15.7549 mo
362.017 15.7549 li
361.453 15.7549 360.996 15.3032 360.996 14.7466 cv
360.996 9.21777 li
360.996 8.66113 361.453 8.20947 362.017 8.20947 cv
362.037 8.20947 li
362.601 8.20947 363.058 8.66113 363.058 9.21777 cv
363.058 14.7466 li
363.058 15.3032 362.601 15.7549 362.037 15.7549 cv
cp
f
368.22 15.7549 mo
368.199 15.7549 li
367.636 15.7549 367.18 15.3032 367.18 14.7466 cv
367.18 9.21777 li
367.18 8.66113 367.636 8.20947 368.199 8.20947 cv
368.22 8.20947 li
368.784 8.20947 369.24 8.66113 369.24 9.21777 cv
369.24 14.7466 li
369.24 15.3032 368.784 15.7549 368.22 15.7549 cv
cp
f
374.403 15.7549 mo
374.383 15.7549 li
373.819 15.7549 373.362 15.3032 373.362 14.7466 cv
373.362 9.21777 li
373.362 8.66113 373.819 8.20947 374.383 8.20947 cv
374.403 8.20947 li
374.967 8.20947 375.423 8.66113 375.423 9.21777 cv
375.423 14.7466 li
375.423 15.3032 374.967 15.7549 374.403 15.7549 cv
cp
f
380.586 15.7549 mo
380.565 15.7549 li
380.002 15.7549 379.545 15.3032 379.545 14.7466 cv
379.545 9.21777 li
379.545 8.66113 380.002 8.20947 380.565 8.20947 cv
380.586 8.20947 li
381.149 8.20947 381.606 8.66113 381.606 9.21777 cv
381.606 14.7466 li
381.606 15.3032 381.149 15.7549 380.586 15.7549 cv
cp
f
361.711 54.0942 mo
353.818 54.0942 347.42 47.6962 347.42 39.8032 cv
347.42 39.5103 347.429 39.2194 347.446 38.9309 cv
347.897 46.4173 354.111 52.3496 361.711 52.3496 cv
369.311 52.3496 375.525 46.4173 375.976 38.9309 cv
375.993 39.2194 376.002 39.5103 376.002 39.8032 cv
376.002 47.6962 369.604 54.0942 361.711 54.0942 cv
.537255 .690196 .121569 rgb
f
376.002 38.0586 mo
376.002 45.9511 369.604 52.3496 361.711 52.3496 cv
353.818 52.3496 347.42 45.9511 347.42 38.0586 cv
347.42 30.1655 353.818 23.7671 361.711 23.7671 cv
369.604 23.7671 376.002 30.1655 376.002 38.0586 cv
.976471 .698039 .2 rgb
f
373.52 38.0586 mo
373.52 44.58 368.232 49.8667 361.711 49.8667 cv
355.189 49.8667 349.902 44.58 349.902 38.0586 cv
349.902 31.5371 355.189 26.25 361.711 26.25 cv
368.232 26.25 373.52 31.5371 373.52 38.0586 cv
.952941 .572549 0 rgb
f
373.52 38.0586 mo
373.52 31.639 368.396 26.4155 362.016 26.2538 cv
368.396 26.4155 373.52 31.6385 373.52 38.0586 cv
349.902 38.0586 mo
349.902 31.6385 355.026 26.4155 361.406 26.2538 cv
355.026 26.4155 349.902 31.639 349.902 38.0586 cv
.890196 .639216 .192157 rgb
f
373.496 38.5224 mo
373.25 32.5195 368.076 27.7217 361.711 27.7217 cv
355.346 27.7217 350.172 32.5195 349.926 38.5224 cv
349.92 38.3672 349.902 38.2149 349.902 38.0586 cv
349.902 38.0586 li
349.902 38.0586 li
349.902 31.639 355.026 26.4155 361.406 26.2538 cv
361.507 26.2513 361.609 26.25 361.711 26.25 cv
361.813 26.25 361.914 26.2513 362.016 26.2538 cv
368.396 26.4155 373.52 31.639 373.52 38.0586 cv
373.52 38.0586 li
373.52 38.0586 li
373.52 38.2149 373.502 38.3672 373.496 38.5224 cv
.866667 .52549 .0117647 rgb
f
360.385 34.4058 mo
360.385 35.6904 359.344 36.7314 358.059 36.7314 cv
356.774 36.7314 355.733 35.6904 355.733 34.4058 cv
355.733 33.1216 356.774 32.0801 358.059 32.0801 cv
359.344 32.0801 360.385 33.1216 360.385 34.4058 cv
cp
.235294 .235294 .231373 rgb
f
360.385 41.7109 mo
360.385 42.9956 359.344 44.0366 358.059 44.0366 cv
356.774 44.0366 355.733 42.9956 355.733 41.7109 cv
355.733 40.4263 356.774 39.3853 358.059 39.3853 cv
359.344 39.3853 360.385 40.4263 360.385 41.7109 cv
cp
f
367.688 34.4058 mo
367.688 35.6904 366.647 36.7314 365.363 36.7314 cv
364.078 36.7314 363.037 35.6904 363.037 34.4058 cv
363.037 33.1216 364.078 32.0801 365.363 32.0801 cv
366.647 32.0801 367.688 33.1216 367.688 34.4058 cv
cp
f
367.688 41.7109 mo
367.688 42.9956 366.647 44.0366 365.363 44.0366 cv
364.078 44.0366 363.037 42.9956 363.037 41.7109 cv
363.037 40.4263 364.078 39.3853 365.363 39.3853 cv
366.647 39.3853 367.688 40.4263 367.688 41.7109 cv
cp
f
358.072 42.7417 mo
358.046 42.7417 li
357.318 42.7417 356.729 42.1597 356.729 41.4409 cv
356.729 34.3096 li
356.729 33.5913 357.318 33.0088 358.046 33.0088 cv
358.072 33.0088 li
358.799 33.0088 359.389 33.5913 359.389 34.3096 cv
359.389 41.4409 li
359.389 42.1597 358.799 42.7417 358.072 42.7417 cv
cp
.913725 .305882 .105882 rgb
f
365.376 42.7417 mo
365.35 42.7417 li
364.623 42.7417 364.034 42.1597 364.034 41.4409 cv
364.034 34.3096 li
364.034 33.5913 364.623 33.0088 365.35 33.0088 cv
365.376 33.0088 li
366.104 33.0088 366.692 33.5913 366.692 34.3096 cv
366.692 41.4409 li
366.692 42.1597 366.104 42.7417 365.376 42.7417 cv
cp
f
38.4292 100.158 mo
38.0147 100.158 li
27.1987 100.158 18.9013 108.911 20.4658 118.67 cv
22.6084 132.036 li
53.8355 132.036 li
55.9781 118.67 li
57.5425 108.911 49.2456 100.158 38.4292 100.158 cv
1 .886275 .721569 rgb
f
53.8384 148.426 mo
22.6114 148.426 li
22.6114 132.036 li
53.8384 132.036 li
53.8384 148.426 li
.929412 .929412 .929412 rgb
f
52.6817 132.036 mo
47.6787 132.036 li
23.1553 107.513 li
23.8384 106.558 24.629 105.672 25.5137 104.868 cv
52.6817 132.036 li
.909804 .807843 .658823 rgb
f
46.1782 132.036 mo
42.4815 132.036 li
44.3301 130.187 li
46.1782 132.036 li
f
41.0947 132.036 mo
36.0923 132.036 li
41.1353 126.993 li
43.6367 129.494 li
41.0947 132.036 li
f
34.7061 132.036 mo
29.7036 132.036 li
37.9409 123.798 li
40.4419 126.3 li
34.7061 132.036 li
f
28.3179 132.036 mo
23.3155 132.036 li
34.7466 120.604 li
37.2481 123.105 li
28.3179 132.036 li
f
22.5171 131.448 mo
21.8257 127.136 li
31.5523 117.41 li
34.0532 119.911 li
22.5171 131.448 li
f
21.6343 125.941 mo
20.9429 121.63 li
28.3579 114.215 li
30.8589 116.717 li
21.6343 125.941 li
f
20.7514 120.435 mo
20.4688 118.67 li
20.3189 117.734 20.2613 116.809 20.2857 115.898 cv
25.1631 111.021 li
27.6646 113.522 li
20.7514 120.435 li
f
20.4077 114.391 mo
20.688 112.251 21.4351 110.228 22.5557 108.414 cv
24.4702 110.328 li
20.4077 114.391 li
f
53.8701 131.838 mo
53.8676 131.835 li
54.5586 127.525 li
54.561 127.527 li
53.8701 131.838 li
.909635 .909635 .908835 rgb
f
53.8676 131.835 mo
26.2597 104.228 li
27.186 103.479 28.1997 102.815 29.2871 102.253 cv
54.5586 127.525 li
53.8676 131.835 li
.909804 .807843 .658823 rgb
f
54.7525 126.333 mo
54.7501 126.33 li
55.4412 122.019 li
55.4434 122.021 li
54.7525 126.333 li
.909635 .909635 .908835 rgb
f
54.7501 126.33 mo
30.2222 101.802 li
31.4102 101.271 32.6728 100.854 33.998 100.575 cv
55.4412 122.019 li
54.7501 126.33 li
.909804 .807843 .658823 rgb
f
55.6353 120.826 mo
55.6329 120.823 li
55.9781 118.67 li
56.0331 118.327 56.0758 117.985 56.1068 117.645 cv
56.0773 117.985 56.0359 118.327 55.981 118.67 cv
55.6353 120.826 li
38.4587 100.158 mo
38.4488 100.158 38.4391 100.158 38.4292 100.158 cv
38.4322 100.158 li
38.441 100.158 38.4499 100.158 38.4587 100.158 cv
37.9926 100.158 mo
37.9972 100.158 38.0016 100.158 38.0062 100.158 cv
38.0016 100.158 37.9972 100.158 37.9926 100.158 cv
.909635 .909635 .908835 rgb
f
55.6329 120.823 mo
35.1753 100.366 li
36.0912 100.232 37.0315 100.159 37.9926 100.158 cv
37.9972 100.158 38.0016 100.158 38.0062 100.158 cv
38.01 100.158 38.0138 100.158 38.0176 100.158 cv
38.4292 100.158 li
38.4391 100.158 38.4488 100.158 38.4587 100.158 cv
38.993 100.159 39.5194 100.187 40.041 100.229 cv
56.164 116.352 li
56.1624 116.78 56.1443 117.211 56.1068 117.645 cv
56.0758 117.985 56.0331 118.327 55.9781 118.67 cv
55.6329 120.823 li
.909804 .807843 .658823 rgb
f
56.1001 114.902 mo
41.6191 100.421 li
49.4785 101.717 55.4126 107.711 56.1001 114.902 cv
f
38.0147 180.168 mo
38.4292 180.168 li
49.2456 180.168 57.5425 171.415 55.9781 161.656 cv
53.8355 148.29 li
22.6084 148.29 li
20.4658 161.656 li
18.9013 171.415 27.1987 180.168 38.0147 180.168 cv
1 .886275 .721569 rgb
f
45.0431 169.57 mo
23.7626 148.29 li
28.7651 148.29 li
48.1417 167.666 li
47.1822 168.386 46.1454 169.024 45.0431 169.57 cv
.909804 .807843 .658823 rgb
f
32.1143 150.138 mo
30.2661 148.29 li
33.9624 148.29 li
32.1143 150.138 li
f
35.3085 153.333 mo
32.8076 150.831 li
35.3491 148.29 li
40.3516 148.29 li
35.3085 153.333 li
f
38.5034 156.527 mo
36.002 154.026 li
41.7383 148.29 li
46.7407 148.29 li
38.5034 156.527 li
f
41.6973 159.721 mo
39.1963 157.22 li
48.1264 148.29 li
53.1289 148.29 li
41.6973 159.721 li
f
44.892 162.916 mo
42.3906 160.415 li
53.9272 148.878 li
54.6181 153.189 li
44.892 162.916 li
f
48.0864 166.11 mo
45.585 163.609 li
54.81 154.384 li
55.1301 156.381 li
54.9266 157.674 54.5698 158.926 54.0755 160.121 cv
48.0864 166.11 li
f
48.9785 167.002 mo
48.7798 166.803 li
52.4839 163.099 li
51.5214 164.544 50.3404 165.858 48.9785 167.002 cv
f
21.8853 152.801 mo
21.8833 152.799 li
22.5742 148.488 li
22.5764 148.49 li
21.8853 152.801 li
.909635 .909635 .908835 rgb
f
40.3113 171.227 mo
21.8853 152.801 li
22.5764 148.49 li
44.0958 170.009 li
42.8985 170.527 41.6324 170.938 40.3113 171.227 cv
.909804 .807843 .658823 rgb
f
21.0027 158.307 mo
21.0005 158.305 li
21.6919 153.993 li
21.6939 153.995 li
21.0027 158.307 li
.909635 .909635 .908835 rgb
f
35.6987 171.722 mo
35.2397 171.722 li
34.9589 171.722 34.6792 171.716 34.4015 171.706 cv
21.0027 158.307 li
21.6939 153.995 li
39.1463 171.448 li
38.0292 171.628 36.8778 171.722 35.6987 171.722 cv
.909804 .807843 .658823 rgb
f
38.0147 180.168 mo
38.0122 180.168 li
38.008 180.168 38.0037 180.168 37.9994 180.168 cv
38.0045 180.168 38.0095 180.168 38.0147 180.168 cv
38.4371 180.168 mo
38.4417 180.168 38.4473 180.168 38.452 180.168 cv
38.447 180.168 38.442 180.168 38.4371 180.168 cv
20.3432 162.616 mo
20.3722 162.297 20.4119 161.977 20.4634 161.656 cv
20.809 159.5 li
20.8111 159.502 li
20.4658 161.656 li
20.4144 161.977 20.3735 162.297 20.3432 162.616 cv
.909635 .909635 .908835 rgb
f
38.4371 180.168 mo
38.4417 180.168 38.4473 180.168 38.452 180.168 cv
38.452 180.168 li
38.4473 180.168 38.4417 180.168 38.4371 180.168 cv
38.4371 180.168 li
32.9064 171.597 mo
30.3684 171.325 27.9907 170.613 25.8589 169.552 cv
20.2803 163.974 li
20.2817 163.524 20.3016 163.071 20.3432 162.616 cv
20.3735 162.297 20.4144 161.977 20.4658 161.656 cv
20.8111 159.502 li
32.9064 171.597 li
.909804 .807843 .658823 rgb
f
25.8531 175.765 mo
22.7601 173.103 20.729 169.451 20.3442 165.424 cv
21.7101 166.79 li
21.2346 166.376 20.7819 165.942 20.354 165.488 cv
20.7544 169.489 22.7784 173.116 25.8531 175.765 cv
f
53.8354 145.39 mo
22.6084 145.39 li
22.6084 135.072 li
53.8354 135.072 li
53.8354 145.39 li
cp
.913725 .305882 .105882 rgb
f
45.1914 140.231 mo
45.1914 144.079 42.0723 147.197 38.2246 147.197 cv
34.3774 147.197 31.2583 144.079 31.2583 140.231 cv
31.2583 136.383 34.3774 133.265 38.2246 133.265 cv
42.0723 133.265 45.1914 136.383 45.1914 140.231 cv
cp
f
42.6855 140.231 mo
42.6855 142.694 40.6885 144.692 38.2246 144.692 cv
35.7612 144.692 33.7637 142.694 33.7637 140.231 cv
33.7637 137.768 35.7612 135.771 38.2246 135.771 cv
40.6885 135.771 42.6855 137.768 42.6855 140.231 cv
cp
.929412 .929412 .929412 rgb
f
37.9994 180.168 mo
37.9948 180.168 37.9895 180.168 37.9849 180.168 cv
37.9859 180.168 li
37.9904 180.168 37.9949 180.168 37.9994 180.168 cv
37.9751 180.168 mo
37.9682 180.168 37.9623 180.168 37.9554 180.168 cv
37.962 180.168 37.9685 180.168 37.9751 180.168 cv
37.943 180.168 mo
37.9372 180.168 37.9314 180.168 37.9256 180.168 cv
37.9316 180.168 37.937 180.168 37.943 180.168 cv
37.9132 180.168 mo
37.9069 180.168 37.9016 180.168 37.8953 180.168 cv
37.9013 180.168 37.9072 180.168 37.9132 180.168 cv
37.8829 180.168 mo
37.8772 180.168 37.8705 180.167 37.8648 180.167 cv
37.8708 180.167 37.877 180.168 37.8829 180.168 cv
37.8536 180.167 mo
37.8461 180.167 37.8381 180.167 37.8307 180.167 cv
37.8386 180.167 37.8457 180.167 37.8536 180.167 cv
37.8239 180.167 mo
37.8136 180.167 37.8042 180.167 37.7939 180.167 cv
37.8045 180.167 37.8134 180.167 37.8239 180.167 cv
37.7878 180.167 mo
37.7798 180.167 37.7729 180.167 37.7649 180.166 cv
37.7722 180.167 37.7805 180.167 37.7878 180.167 cv
37.7526 180.166 mo
37.7469 180.166 37.7409 180.166 37.7352 180.166 cv
37.7405 180.166 37.7473 180.166 37.7526 180.166 cv
37.7225 180.166 mo
37.7168 180.166 37.711 180.166 37.7053 180.166 cv
37.7112 180.166 37.7166 180.166 37.7225 180.166 cv
37.6926 180.165 mo
37.6869 180.165 37.6816 180.165 37.6759 180.165 cv
37.6812 180.165 37.6873 180.165 37.6926 180.165 cv
37.6622 180.165 mo
37.6571 180.165 37.652 180.165 37.6468 180.165 cv
37.6521 180.165 37.657 180.165 37.6622 180.165 cv
37.6327 180.164 mo
37.6264 180.164 37.6212 180.164 37.6149 180.164 cv
37.6208 180.164 37.6268 180.164 37.6327 180.164 cv
37.5946 180.164 mo
37.5883 180.163 37.5811 180.163 37.5749 180.163 cv
37.5814 180.163 37.588 180.163 37.5946 180.164 cv
37.5623 180.163 mo
37.5566 180.163 37.5515 180.163 37.5458 180.162 cv
37.5517 180.163 37.5564 180.163 37.5623 180.163 cv
37.5307 180.162 mo
37.5262 180.162 37.5218 180.162 37.5172 180.162 cv
37.5218 180.162 37.5261 180.162 37.5307 180.162 cv
37.5007 180.161 mo
37.4967 180.161 37.4919 180.161 37.4879 180.161 cv
37.4918 180.161 37.4967 180.161 37.5007 180.161 cv
37.4717 180.161 mo
37.4678 180.161 37.463 180.16 37.459 180.16 cv
37.4636 180.16 37.4671 180.16 37.4717 180.161 cv
37.4419 180.16 mo
37.4385 180.16 37.4359 180.16 37.4325 180.16 cv
37.4358 180.16 37.4386 180.16 37.4419 180.16 cv
37.3671 180.157 mo
37.3637 180.157 37.3606 180.157 37.3572 180.157 cv
37.3604 180.157 37.3638 180.157 37.3671 180.157 cv
37.3383 180.157 mo
37.3349 180.156 37.3323 180.156 37.3289 180.156 cv
37.3322 180.156 37.335 180.156 37.3383 180.157 cv
37.3096 180.156 mo
37.3062 180.155 37.3033 180.155 37.3 180.155 cv
37.3032 180.155 37.3064 180.155 37.3096 180.156 cv
37.2804 180.154 mo
37.2776 180.154 37.2754 180.154 37.2726 180.154 cv
37.2752 180.154 37.2778 180.154 37.2804 180.154 cv
37.2513 180.153 mo
37.2496 180.153 37.2478 180.153 37.2461 180.153 cv
37.2474 180.153 37.25 180.153 37.2513 180.153 cv
37.1444 180.149 mo
37.1433 180.149 37.142 180.149 37.1408 180.149 cv
37.1421 180.149 37.1431 180.149 37.1444 180.149 cv
37.1167 180.148 mo
37.1155 180.148 37.1144 180.148 37.1133 180.148 cv
37.1146 180.148 37.1154 180.148 37.1167 180.148 cv
37.089 180.146 mo
37.0879 180.146 37.0869 180.146 37.0858 180.146 cv
37.0865 180.146 37.0884 180.146 37.089 180.146 cv
55.9781 161.656 mo
55.1313 156.374 li
55.1314 156.373 55.1314 156.373 55.1314 156.373 cv
55.9781 161.656 li
.954817 .954817 .954418 rgb
f
38.4292 180.168 mo
38.4268 180.168 li
38.4302 180.168 38.4336 180.168 38.4371 180.168 cv
38.4344 180.168 38.4319 180.168 38.4292 180.168 cv
38.4292 180.168 li
38.452 180.168 mo
39.4129 180.167 40.3528 180.094 41.2686 179.959 cv
32.9064 171.597 li
33.3991 171.65 33.8974 171.687 34.4015 171.706 cv
42.4463 179.75 li
43.771 179.471 45.0342 179.055 46.2222 178.524 cv
39.1463 171.448 li
39.5388 171.385 39.9277 171.311 40.3113 171.227 cv
47.1572 178.073 li
48.2446 177.51 49.2578 176.847 50.1841 176.097 cv
44.0958 170.009 li
44.4167 169.87 44.7324 169.724 45.0431 169.57 cv
50.9306 175.457 li
51.8154 174.654 52.6059 173.768 53.2886 172.813 cv
48.1417 167.666 li
48.4274 167.452 48.7069 167.23 48.9785 167.002 cv
51.2808 169.305 li
56.1582 164.427 li
56.1831 163.517 56.1255 162.591 55.9756 161.656 cv
55.6924 159.891 li
52.4839 163.099 li
53.1108 162.158 53.6454 161.161 54.0755 160.121 cv
55.501 158.695 li
55.1301 156.381 li
55.1305 156.379 55.131 156.376 55.1314 156.373 cv
55.9781 161.656 li
57.5414 171.408 49.2572 180.156 38.452 180.168 cv
56.0366 165.935 mo
51.9741 169.998 li
53.8882 171.912 li
55.0088 170.097 55.7559 168.074 56.0366 165.935 cv
37.9859 180.168 mo
37.9849 180.168 li
37.9814 180.168 37.9785 180.168 37.9751 180.168 cv
37.9685 180.168 37.962 180.168 37.9554 180.168 cv
37.9514 180.168 37.947 180.168 37.943 180.168 cv
37.937 180.168 37.9316 180.168 37.9256 180.168 cv
37.9216 180.168 37.9171 180.168 37.9132 180.168 cv
37.9072 180.168 37.9013 180.168 37.8953 180.168 cv
37.8913 180.168 37.8869 180.168 37.8829 180.168 cv
37.877 180.168 37.8708 180.167 37.8648 180.167 cv
37.8608 180.167 37.8576 180.167 37.8536 180.167 cv
37.8457 180.167 37.8386 180.167 37.8307 180.167 cv
37.8284 180.167 37.8262 180.167 37.8239 180.167 cv
37.8134 180.167 37.8045 180.167 37.7939 180.167 cv
37.7922 180.167 37.7895 180.167 37.7878 180.167 cv
37.7805 180.167 37.7722 180.167 37.7649 180.166 cv
37.761 180.166 37.7565 180.166 37.7526 180.166 cv
37.7473 180.166 37.7405 180.166 37.7352 180.166 cv
37.7306 180.166 37.7271 180.166 37.7225 180.166 cv
37.7166 180.166 37.7112 180.166 37.7053 180.166 cv
37.7013 180.166 37.6966 180.165 37.6926 180.165 cv
37.6873 180.165 37.6812 180.165 37.6759 180.165 cv
37.6713 180.165 37.6668 180.165 37.6622 180.165 cv
37.657 180.165 37.6521 180.165 37.6468 180.165 cv
37.6423 180.165 37.6372 180.164 37.6327 180.164 cv
37.6268 180.164 37.6208 180.164 37.6149 180.164 cv
37.6081 180.164 37.6014 180.164 37.5946 180.164 cv
37.588 180.163 37.5814 180.163 37.5749 180.163 cv
37.5709 180.163 37.5662 180.163 37.5623 180.163 cv
37.5564 180.163 37.5517 180.163 37.5458 180.162 cv
37.5407 180.162 37.5358 180.162 37.5307 180.162 cv
37.5261 180.162 37.5218 180.162 37.5172 180.162 cv
37.5116 180.162 37.5064 180.162 37.5007 180.161 cv
37.4967 180.161 37.4918 180.161 37.4879 180.161 cv
37.4822 180.161 37.4774 180.161 37.4717 180.161 cv
37.4671 180.16 37.4636 180.16 37.459 180.16 cv
37.4534 180.16 37.4475 180.16 37.4419 180.16 cv
37.4386 180.16 37.4358 180.16 37.4325 180.16 cv
37.411 180.159 37.3886 180.158 37.3671 180.157 cv
37.3638 180.157 37.3604 180.157 37.3572 180.157 cv
37.3509 180.157 37.3445 180.157 37.3383 180.157 cv
37.335 180.156 37.3322 180.156 37.3289 180.156 cv
37.3227 180.156 37.3159 180.156 37.3096 180.156 cv
37.3064 180.155 37.3032 180.155 37.3 180.155 cv
37.2937 180.155 37.2866 180.155 37.2804 180.154 cv
37.2778 180.154 37.2752 180.154 37.2726 180.154 cv
37.2658 180.154 37.2581 180.154 37.2513 180.153 cv
37.25 180.153 37.2474 180.153 37.2461 180.153 cv
37.2121 180.152 37.1783 180.15 37.1444 180.149 cv
37.1431 180.149 37.1421 180.149 37.1408 180.149 cv
37.1324 180.148 37.1251 180.148 37.1167 180.148 cv
37.1154 180.148 37.1146 180.148 37.1133 180.148 cv
37.1054 180.147 37.0969 180.147 37.089 180.146 cv
37.0884 180.146 37.0865 180.146 37.0858 180.146 cv
32.7132 179.942 28.8005 178.303 25.8531 175.765 cv
28.2828 177.855 31.3675 179.334 34.8252 179.904 cv
21.7101 166.79 li
22.9478 167.866 24.3409 168.797 25.8589 169.552 cv
36.4033 180.097 li
36.9246 180.139 37.4514 180.167 37.9859 180.168 cv
.952941 .847059 .690196 rgb
f
50.9306 175.457 mo
45.0431 169.57 li
46.1454 169.024 47.1822 168.386 48.1417 167.666 cv
53.2886 172.813 li
52.6059 173.768 51.8154 174.654 50.9306 175.457 cv
.870588 .772549 .631373 rgb
f
54.0755 160.121 mo
54.5698 158.926 54.9266 157.674 55.1301 156.381 cv
55.501 158.695 li
54.0755 160.121 li
f
51.2808 169.305 mo
48.9785 167.002 li
50.3404 165.858 51.5214 164.544 52.4839 163.099 cv
55.6924 159.891 li
55.9756 161.656 li
56.1255 162.591 56.1831 163.517 56.1582 164.427 cv
51.2808 169.305 li
f
53.8882 171.912 mo
51.9741 169.998 li
56.0366 165.935 li
55.7559 168.074 55.0088 170.097 53.8882 171.912 cv
f
47.1572 178.073 mo
40.3113 171.227 li
41.6324 170.938 42.8985 170.527 44.0958 170.009 cv
50.1841 176.097 li
49.2578 176.847 48.2446 177.51 47.1572 178.073 cv
f
42.4463 179.75 mo
34.4015 171.706 li
34.6792 171.716 34.9589 171.722 35.2397 171.722 cv
35.6987 171.722 li
36.8778 171.722 38.0292 171.628 39.1463 171.448 cv
46.2222 178.524 li
45.0342 179.055 43.771 179.471 42.4463 179.75 cv
f
38.4268 180.168 mo
38.0147 180.168 li
38.0095 180.168 38.0045 180.168 37.9994 180.168 cv
37.9949 180.168 37.9904 180.168 37.9859 180.168 cv
37.9958 180.168 38.0048 180.168 38.0147 180.168 cv
38.4268 180.168 li
38.4268 180.168 li
.867928 .867928 .866759 rgb
f
38.4268 180.168 mo
38.0147 180.168 li
38.0048 180.168 37.9958 180.168 37.9859 180.168 cv
37.4514 180.167 36.9246 180.139 36.4033 180.097 cv
25.8589 169.552 li
27.9907 170.613 30.3684 171.325 32.9064 171.597 cv
41.2686 179.959 li
40.3528 180.094 39.4129 180.167 38.452 180.168 cv
38.4473 180.168 38.4417 180.168 38.4371 180.168 cv
38.4336 180.168 38.4302 180.168 38.4268 180.168 cv
.870588 .772549 .631373 rgb
f
34.8252 179.904 mo
31.3675 179.334 28.2828 177.855 25.8531 175.765 cv
22.7784 173.116 20.7544 169.489 20.354 165.488 cv
20.7819 165.942 21.2346 166.376 21.7101 166.79 cv
34.8252 179.904 li
f
282.284 22.336 mo
282.284 60.9214 li
282.284 63.9605 279.822 66.4224 276.783 66.4224 cv
232.688 66.4224 li
229.649 66.4224 227.187 63.9605 227.187 60.9214 cv
227.187 22.336 li
227.187 20.5884 228.005 19.0298 229.271 18.0313 cv
229.58 17.7818 229.925 17.5664 230.286 17.394 cv
231.01 17.0327 231.827 16.8345 232.688 16.8345 cv
276.783 16.8345 li
279.822 16.8345 282.284 19.2969 282.284 22.336 cv
.137255 .454902 .6 rgb
f
241.711 21.8892 mo
238.747 21.8892 li
238.333 21.8892 237.997 21.5532 237.997 21.1391 cv
237.997 20.7251 238.333 20.3891 238.747 20.3891 cv
241.711 20.3891 li
242.125 20.3891 242.461 20.7251 242.461 21.1391 cv
242.461 21.5532 242.125 21.8892 241.711 21.8892 cv
248.626 21.8892 mo
245.662 21.8892 li
245.248 21.8892 244.912 21.5532 244.912 21.1391 cv
244.912 20.7251 245.248 20.3891 245.662 20.3891 cv
248.626 20.3891 li
249.04 20.3891 249.376 20.7251 249.376 21.1391 cv
249.376 21.5532 249.04 21.8892 248.626 21.8892 cv
255.54 21.8892 mo
252.577 21.8892 li
252.163 21.8892 251.827 21.5532 251.827 21.1391 cv
251.827 20.7251 252.163 20.3891 252.577 20.3891 cv
255.54 20.3891 li
255.954 20.3891 256.29 20.7251 256.29 21.1391 cv
256.29 21.5532 255.954 21.8892 255.54 21.8892 cv
262.455 21.8892 mo
259.492 21.8892 li
259.078 21.8892 258.742 21.5532 258.742 21.1391 cv
258.742 20.7251 259.078 20.3891 259.492 20.3891 cv
262.455 20.3891 li
262.869 20.3891 263.205 20.7251 263.205 21.1391 cv
263.205 21.5532 262.869 21.8892 262.455 21.8892 cv
269.37 21.8892 mo
266.406 21.8892 li
265.992 21.8892 265.656 21.5532 265.656 21.1391 cv
265.656 20.7251 265.992 20.3891 266.406 20.3891 cv
269.37 20.3891 li
269.784 20.3891 270.12 20.7251 270.12 21.1391 cv
270.12 21.5532 269.784 21.8892 269.37 21.8892 cv
276.285 21.8892 mo
273.321 21.8892 li
272.907 21.8892 272.571 21.5532 272.571 21.1391 cv
272.571 20.7251 272.907 20.3891 273.321 20.3891 cv
276.285 20.3891 li
276.699 20.3891 277.035 20.7251 277.035 21.1391 cv
277.035 21.5532 276.699 21.8892 276.285 21.8892 cv
231.903 22.1812 mo
231.694 22.1812 231.485 22.0938 231.337 21.9233 cv
231.065 21.6103 231.099 21.1367 231.411 20.8653 cv
231.765 20.5581 232.217 20.3891 232.685 20.3891 cv
234.796 20.3891 li
235.21 20.3891 235.546 20.7251 235.546 21.1391 cv
235.546 21.5532 235.21 21.8892 234.796 21.8892 cv
232.685 21.8892 li
232.548 21.8892 232.452 21.9477 232.395 21.9971 cv
232.253 22.1206 232.078 22.1812 231.903 22.1812 cv
277.979 27.6216 mo
277.565 27.6216 277.229 27.2857 277.229 26.8715 cv
277.229 23.9082 li
277.229 23.4941 277.565 23.1583 277.979 23.1583 cv
278.394 23.1583 278.729 23.4941 278.729 23.9082 cv
278.729 26.8715 li
278.729 27.2857 278.394 27.6216 277.979 27.6216 cv
231.491 28.9751 mo
231.077 28.9751 230.741 28.6391 230.741 28.2251 cv
230.741 25.2617 li
230.741 24.8477 231.077 24.5117 231.491 24.5117 cv
231.905 24.5117 232.241 24.8477 232.241 25.2617 cv
232.241 28.2251 li
232.241 28.6391 231.905 28.9751 231.491 28.9751 cv
277.979 34.5367 mo
277.565 34.5367 277.229 34.2007 277.229 33.7866 cv
277.229 30.8233 li
277.229 30.4092 277.565 30.0732 277.979 30.0732 cv
278.394 30.0732 278.729 30.4092 278.729 30.8233 cv
278.729 33.7866 li
278.729 34.2007 278.394 34.5367 277.979 34.5367 cv
231.491 35.8902 mo
231.077 35.8902 230.741 35.5542 230.741 35.1401 cv
230.741 32.1763 li
230.741 31.7622 231.077 31.4262 231.491 31.4262 cv
231.905 31.4262 232.241 31.7622 232.241 32.1763 cv
232.241 35.1401 li
232.241 35.5542 231.905 35.8902 231.491 35.8902 cv
277.979 41.4516 mo
277.565 41.4516 277.229 41.1157 277.229 40.7017 cv
277.229 37.7378 li
277.229 37.3237 277.565 36.9878 277.979 36.9878 cv
278.394 36.9878 278.729 37.3237 278.729 37.7378 cv
278.729 40.7017 li
278.729 41.1157 278.394 41.4516 277.979 41.4516 cv
231.491 42.8046 mo
231.077 42.8046 230.741 42.4688 230.741 42.0547 cv
230.741 39.0914 li
230.741 38.6772 231.077 38.3413 231.491 38.3413 cv
231.905 38.3413 232.241 38.6772 232.241 39.0914 cv
232.241 42.0547 li
232.241 42.4688 231.905 42.8046 231.491 42.8046 cv
277.979 48.3662 mo
277.565 48.3662 277.229 48.0303 277.229 47.6162 cv
277.229 44.6528 li
277.229 44.2388 277.565 43.9029 277.979 43.9029 cv
278.394 43.9029 278.729 44.2388 278.729 44.6528 cv
278.729 47.6162 li
278.729 48.0303 278.394 48.3662 277.979 48.3662 cv
231.491 49.7197 mo
231.077 49.7197 230.741 49.3838 230.741 48.9697 cv
230.741 46.0063 li
230.741 45.5923 231.077 45.2564 231.491 45.2564 cv
231.905 45.2564 232.241 45.5923 232.241 46.0063 cv
232.241 48.9697 li
232.241 49.3838 231.905 49.7197 231.491 49.7197 cv
277.979 55.2813 mo
277.565 55.2813 277.229 54.9453 277.229 54.5312 cv
277.229 51.5679 li
277.229 51.1538 277.565 50.8178 277.979 50.8178 cv
278.394 50.8178 278.729 51.1538 278.729 51.5679 cv
278.729 54.5312 li
278.729 54.9453 278.394 55.2813 277.979 55.2813 cv
231.491 56.6348 mo
231.077 56.6348 230.741 56.2988 230.741 55.8848 cv
230.741 52.9209 li
230.741 52.5068 231.077 52.1709 231.491 52.1709 cv
231.905 52.1709 232.241 52.5068 232.241 52.9209 cv
232.241 55.8848 li
232.241 56.2988 231.905 56.6348 231.491 56.6348 cv
277.866 62.1797 mo
277.76 62.1797 277.65 62.1567 277.548 62.1079 cv
277.173 61.9316 277.012 61.4844 277.189 61.1099 cv
277.229 60.9243 li
277.229 58.4824 li
277.229 58.0684 277.565 57.7324 277.979 57.7324 cv
278.394 57.7324 278.729 58.0684 278.729 58.4824 cv
278.729 60.9243 li
278.729 61.2129 278.668 61.4907 278.546 61.7495 cv
278.418 62.021 278.148 62.1797 277.866 62.1797 cv
232.698 62.8681 mo
232.685 62.8681 li
231.613 62.8681 230.741 61.9961 230.741 60.9243 cv
230.741 59.836 li
230.741 59.4219 231.077 59.0859 231.491 59.0859 cv
231.905 59.0859 232.241 59.4219 232.241 59.836 cv
232.241 60.9243 li
232.241 61.169 232.44 61.3682 232.685 61.3682 cv
233.099 61.3682 233.441 61.7041 233.441 62.1182 cv
233.441 62.5322 233.112 62.8681 232.698 62.8681 cv
239.613 62.8681 mo
236.65 62.8681 li
236.236 62.8681 235.9 62.5322 235.9 62.1182 cv
235.9 61.7041 236.236 61.3682 236.65 61.3682 cv
239.613 61.3682 li
240.027 61.3682 240.363 61.7041 240.363 62.1182 cv
240.363 62.5322 240.027 62.8681 239.613 62.8681 cv
246.528 62.8681 mo
243.565 62.8681 li
243.151 62.8681 242.815 62.5322 242.815 62.1182 cv
242.815 61.7041 243.151 61.3682 243.565 61.3682 cv
246.528 61.3682 li
246.942 61.3682 247.278 61.7041 247.278 62.1182 cv
247.278 62.5322 246.942 62.8681 246.528 62.8681 cv
253.443 62.8681 mo
250.479 62.8681 li
250.065 62.8681 249.729 62.5322 249.729 62.1182 cv
249.729 61.7041 250.065 61.3682 250.479 61.3682 cv
253.443 61.3682 li
253.857 61.3682 254.193 61.7041 254.193 62.1182 cv
254.193 62.5322 253.857 62.8681 253.443 62.8681 cv
260.358 62.8681 mo
257.395 62.8681 li
256.98 62.8681 256.645 62.5322 256.645 62.1182 cv
256.645 61.7041 256.98 61.3682 257.395 61.3682 cv
260.358 61.3682 li
260.772 61.3682 261.108 61.7041 261.108 62.1182 cv
261.108 62.5322 260.772 62.8681 260.358 62.8681 cv
267.273 62.8681 mo
264.31 62.8681 li
263.895 62.8681 263.56 62.5322 263.56 62.1182 cv
263.56 61.7041 263.895 61.3682 264.31 61.3682 cv
267.273 61.3682 li
267.688 61.3682 268.023 61.7041 268.023 62.1182 cv
268.023 62.5322 267.688 62.8681 267.273 62.8681 cv
274.188 62.8681 mo
271.225 62.8681 li
270.811 62.8681 270.475 62.5322 270.475 62.1182 cv
270.475 61.7041 270.811 61.3682 271.225 61.3682 cv
274.188 61.3682 li
274.603 61.3682 274.938 61.7041 274.938 62.1182 cv
274.938 62.5322 274.603 62.8681 274.188 62.8681 cv
.976471 .698039 .2 rgb
f
231.612 16.5162 mo
231.595 16.5249 li
231.362 16.7573 231.026 16.8174 230.742 16.6968 cv
230.502 16.5332 li
222.177 8.41505 li
221.918 8.16554 221.875 7.77782 222.048 7.47659 cv
222.177 7.30473 li
222.383 7.08937 li
222.495 6.97758 222.633 6.89993 222.779 6.87402 cv
222.788 6.87402 li
223.037 6.83103 223.305 6.89993 223.502 7.09771 cv
231.612 15.4141 li
231.827 15.6294 231.888 15.9395 231.793 16.2061 cv
231.759 16.3266 231.698 16.4302 231.612 16.5162 cv
262.699 46.5185 mo
223.434 5.84958 li
222.753 5.14355 221.626 5.13521 220.937 5.82376 cv
220.911 5.84958 li
220.851 5.92722 li
220.231 6.60693 220.248 7.64895 220.886 8.30325 cv
220.929 8.34614 li
230.2 17.3081 li
261.598 47.6201 li
261.657 47.6807 263.302 49.2305 265.188 50.9522 cv
265.23 50.9951 li
267.718 53.2764 270.594 55.8418 270.757 55.6782 cv
270.766 55.6699 li
271.05 55.3769 262.828 46.6474 262.699 46.5185 cv
.776471 .776471 .776471 rgb
f
223.743 35.1445 mo
223.19 35.1445 222.743 34.6968 222.743 34.1445 cv
222.743 21.6074 li
222.743 16.6553 226.772 12.6265 231.725 12.6265 cv
267.717 12.6265 li
268.85 12.6265 269.771 11.7051 269.771 10.5723 cv
269.771 9.37793 268.85 8.45654 267.717 8.45654 cv
236.123 8.45654 li
233.888 8.45654 232.069 6.6377 232.069 4.40234 cv
232.069 4.05371 li
232.069 1.81836 233.888 0 236.123 0 cv
282.284 0 li
282.837 0 283.284 .447754 283.284 1 cv
283.284 1.55225 282.837 2 282.284 2 cv
236.123 2 li
234.99 2 234.069 2.92139 234.069 4.05371 cv
234.069 4.40234 li
234.069 5.53516 234.99 6.45654 236.123 6.45654 cv
267.717 6.45654 li
269.952 6.45654 271.771 8.27539 271.771 10.5107 cv
271.771 12.8076 269.952 14.6265 267.717 14.6265 cv
231.725 14.6265 li
227.875 14.6265 224.743 17.7583 224.743 21.6074 cv
224.743 34.1445 li
224.743 34.6968 224.296 35.1445 223.743 35.1445 cv
cp
.976471 .698039 .2 rgb
f
231.79 16.2066 mo
231.753 16.3189 231.698 16.4263 231.608 16.5151 cv
231.598 16.5263 li
231.295 16.8286 230.806 16.8315 230.5 16.5332 cv
222.18 8.41606 li
221.868 8.11229 221.865 7.61226 222.173 7.30473 cv
222.387 7.0908 li
222.694 6.78316 223.194 6.78611 223.498 7.09771 cv
226.828 10.5103 li
226.828 9.36377 li
223.433 5.84714 li
222.752 5.14253 221.626 5.13277 220.934 5.82518 cv
220.908 5.8511 li
220.215 6.54341 220.225 7.66948 220.93 8.35011 cv
234.396 21.353 li
234.396 18.8437 li
233.513 17.9805 232.678 17.0664 231.79 16.2066 cv
.776471 .776471 .776471 rgb
f
269.658 56.2801 mo
269.086 56.2801 260.657 48.3329 260.521 48.2144 cv
233.265 21.8892 li
234.796 21.8892 li
234.842 21.8892 234.887 21.8851 234.93 21.8772 cv
261.598 47.6201 li
261.657 47.6807 263.302 49.2305 265.188 50.9522 cv
265.23 50.9951 li
267.451 53.4141 269.845 56.1001 269.689 56.2636 cv
269.681 56.2725 li
269.676 56.2776 269.668 56.2801 269.658 56.2801 cv
231.889 20.5599 mo
229.271 18.0313 li
229.58 17.7818 229.925 17.5664 230.286 17.394 cv
233.389 20.3891 li
232.685 20.3891 li
232.408 20.3891 232.137 20.4482 231.889 20.5599 cv
.133333 .419608 .54902 rgb
f
234.796 21.8892 mo
233.265 21.8892 li
231.889 20.5599 li
232.137 20.4482 232.408 20.3891 232.685 20.3891 cv
233.389 20.3891 li
234.93 21.8772 li
234.887 21.8851 234.842 21.8892 234.796 21.8892 cv
.890196 .639216 .192157 rgb
f
271.955 39.1699 mo
253.312 57.814 li
237.515 42.0171 li
256.159 23.3735 li
271.955 39.1699 li
cp
.137255 .454902 .6 rgb
f
161.233 165.923 mo
128.719 165.923 li
127.218 165.923 126.001 164.706 126.001 163.205 cv
126.001 110.183 li
126.001 108.682 127.218 107.465 128.719 107.465 cv
161.233 107.465 li
162.734 107.465 163.951 108.682 163.951 110.183 cv
163.951 163.205 li
163.951 164.706 162.734 165.923 161.233 165.923 cv
f
154.001 175.457 mo
135.951 175.457 li
135.951 97.9306 li
154.001 97.9306 li
154.001 175.457 li
.929412 .823529 .670588 rgb
f
161.233 165.923 mo
128.719 165.923 li
127.218 165.923 126.001 164.706 126.001 163.205 cv
126.001 110.183 li
126.001 108.682 127.218 107.465 128.719 107.465 cv
161.233 107.465 li
162.734 107.465 163.951 108.682 163.951 110.183 cv
163.951 163.205 li
163.951 164.706 162.734 165.923 161.233 165.923 cv
.137255 .454902 .6 rgb
f
126.001 160.211 mo
126.001 160.211 li
126.001 156.092 li
138.89 159.633 li
138.67 159.636 138.449 159.638 138.228 159.638 cv
133.96 159.638 129.853 158.936 126.001 157.651 cv
126.001 160.211 li
.223529 .509804 .639216 rgb
f
145.483 158.955 mo
126.001 153.634 li
126.001 149.515 li
152.735 156.814 li
150.417 157.754 147.992 158.476 145.483 158.955 cv
f
156.078 155.269 mo
126.001 147.058 li
126.001 142.938 li
160.731 152.42 li
159.25 153.474 157.696 154.427 156.078 155.269 cv
f
163.089 150.607 mo
126.001 140.481 li
126.001 136.361 li
163.951 146.722 li
163.951 149.871 li
163.667 150.12 163.379 150.366 163.089 150.607 cv
f
163.951 144.265 mo
126.001 133.904 li
126.001 129.784 li
163.951 140.145 li
163.951 144.265 li
f
163.951 137.688 mo
126.001 127.328 li
126.001 123.207 li
163.951 133.568 li
163.951 137.688 li
f
163.951 131.111 mo
126.001 120.75 li
126.001 116.63 li
163.951 126.992 li
163.951 131.111 li
f
163.951 124.535 mo
126.001 114.173 li
126.001 110.183 li
126.014 110.056 li
163.951 120.414 li
163.951 124.535 li
f
128.705 107.465 mo
128.706 107.465 128.706 107.465 128.707 107.465 cv
128.706 107.465 128.706 107.465 128.705 107.465 cv
1 1 1 rgb
f
163.951 117.958 mo
127.246 107.904 li
127.667 107.631 128.166 107.468 128.705 107.465 cv
128.706 107.465 128.706 107.465 128.707 107.465 cv
128.711 107.465 128.715 107.465 128.719 107.465 cv
140.149 107.465 li
163.951 113.838 li
163.951 117.958 li
.223529 .509804 .639216 rgb
f
163.951 111.381 mo
150.095 107.465 li
161.233 107.465 li
162.734 107.465 163.951 108.682 163.951 110.183 cv
163.951 111.381 li
f
154.001 169.264 mo
135.951 169.264 li
135.951 165.923 li
154.001 165.923 li
154.001 169.264 li
.847059 .752941 .611765 rgb
f
161.233 165.923 mo
161.372 165.923 161.506 165.902 161.639 165.882 cv
138.89 159.633 li
141.139 159.595 143.341 159.364 145.483 158.955 cv
163.83 163.965 li
163.901 163.723 163.951 163.471 163.951 163.205 cv
163.951 164.706 162.734 165.923 161.233 165.923 cv
163.951 159.876 mo
152.735 156.814 li
153.877 156.351 154.991 155.835 156.078 155.269 cv
163.951 157.419 li
163.951 159.876 li
163.951 153.299 mo
160.731 152.42 li
161.539 151.845 162.326 151.24 163.089 150.607 cv
163.951 150.842 li
163.951 153.299 li
.133333 .419608 .54902 rgb
f
146.974 165.882 mo
137.037 165.882 li
126.001 162.668 li
126.001 160.211 li
146.974 165.882 li
f
135.951 165.923 mo
128.719 165.923 li
127.218 165.923 126.001 164.706 126.001 163.205 cv
126.001 162.668 li
137.037 165.882 li
135.951 165.882 li
135.951 165.923 li
.211765 .470588 .584314 rgb
f
161.233 165.923 mo
154.001 165.923 li
154.001 165.882 li
146.974 165.882 li
126.001 160.211 li
126.001 157.651 li
129.853 158.936 133.96 159.638 138.228 159.638 cv
138.449 159.638 138.67 159.636 138.89 159.633 cv
161.639 165.882 li
161.506 165.902 161.372 165.923 161.233 165.923 cv
161.233 165.923 li
f
163.83 163.965 mo
145.483 158.955 li
147.992 158.476 150.417 157.754 152.735 156.814 cv
163.951 159.876 li
163.951 163.205 li
163.951 163.205 li
163.951 163.471 163.901 163.723 163.83 163.965 cv
f
163.951 157.419 mo
156.078 155.269 li
157.696 154.427 159.25 153.474 160.731 152.42 cv
163.951 153.299 li
163.951 157.419 li
f
163.951 150.842 mo
163.089 150.607 li
163.379 150.366 163.667 150.12 163.951 149.871 cv
163.951 150.842 li
f
147.126 165.923 mo
137.178 165.923 li
137.037 165.882 li
146.974 165.882 li
147.126 165.923 li
.129412 .388235 .501961 rgb
f
137.178 165.923 mo
135.951 165.923 li
135.951 165.882 li
137.037 165.882 li
137.178 165.923 li
.2 .435294 .537255 rgb
f
154.001 165.923 mo
154.001 165.923 li
147.126 165.923 li
146.974 165.882 li
154.001 165.882 li
154.001 165.923 li
f
111.679 148.257 mo
108.623 148.257 105.571 147.563 103.613 146.806 cv
102.061 146.206 100.854 145.612 99.8164 144.937 cv
101.125 142.925 li
102.02 143.507 103.085 144.029 104.478 144.567 cv
108.026 145.938 113.517 146.503 116.699 144.851 cv
118.09 144.128 118.945 143.063 119.313 141.594 cv
120.181 138.118 118.742 135.728 117.075 132.959 cv
116.506 132.015 115.918 131.038 115.394 129.973 cv
113.081 125.274 113.27 120.553 115.898 117.345 cv
118.399 114.292 122.593 113.275 127.404 114.552 cv
126.788 116.872 li
122.928 115.848 119.634 116.573 117.755 118.866 cv
115.769 121.29 115.689 125.14 117.547 128.914 cv
118.026 129.887 118.588 130.82 119.131 131.722 cv
120.911 134.677 122.75 137.733 121.641 142.176 cv
121.105 144.321 119.814 145.938 117.805 146.981 cv
116.02 147.907 113.848 148.257 111.679 148.257 cv
cp
.137255 .454902 .6 rgb
f
284.082 135.772 mo
284.082 144.461 277.204 151.505 268.719 151.505 cv
260.233 151.505 253.355 144.461 253.355 135.772 cv
253.355 127.083 260.233 120.04 268.719 120.04 cv
277.204 120.04 284.082 127.083 284.082 135.772 cv
.929412 .929412 .929412 rgb
f
270.381 122.046 mo
270.381 130.735 263.502 137.778 255.018 137.778 cv
246.532 137.778 239.653 130.735 239.653 122.046 cv
239.653 113.357 246.532 106.313 255.018 106.313 cv
263.502 106.313 270.381 113.357 270.381 122.046 cv
cp
f
244.569 126.962 mo
244.569 118.969 250.898 112.488 258.704 112.488 cv
263.257 112.488 267.295 114.701 269.88 118.123 cv
268.176 111.336 262.177 106.313 255.018 106.313 cv
246.532 106.313 239.653 113.357 239.653 122.046 cv
239.653 127.935 242.818 133.06 247.496 135.757 cv
245.668 133.317 244.569 130.275 244.569 126.962 cv
cp
.964706 .964706 .964706 rgb
f
256.681 135.563 mo
256.681 144.251 249.802 151.295 241.317 151.295 cv
232.832 151.295 225.953 144.251 225.953 135.563 cv
225.953 126.874 232.832 119.831 241.317 119.831 cv
249.802 119.831 256.681 126.874 256.681 135.563 cv
cp
.929412 .929412 .929412 rgb
f
230.87 140.479 mo
230.87 132.485 237.198 126.005 245.004 126.005 cv
249.557 126.005 253.595 128.218 256.18 131.64 cv
254.476 124.853 248.477 119.831 241.317 119.831 cv
232.832 119.831 225.953 126.874 225.953 135.563 cv
225.953 141.452 229.118 146.577 233.796 149.273 cv
231.968 146.834 230.87 143.792 230.87 140.479 cv
cp
.964706 .964706 .964706 rgb
f
258.271 140.688 mo
258.271 132.695 264.6 126.215 272.406 126.215 cv
276.958 126.215 280.996 128.427 283.581 131.85 cv
281.877 125.063 275.879 120.04 268.719 120.04 cv
260.233 120.04 253.354 127.083 253.354 135.772 cv
253.354 141.661 256.52 146.786 261.197 149.483 cv
259.37 147.043 258.271 144.001 258.271 140.688 cv
cp
f
255.018 150.782 mo
247.437 143.616 237.835 143.789 230.46 148.916 cv
236.537 153.527 245.97 158.724 255.018 160.823 cv
264.065 158.724 273.499 153.527 279.575 148.916 cv
272.201 143.789 262.599 143.616 255.018 150.782 cv
.52549 .678431 .109804 rgb
f
255.018 135.772 mo
244.44 141.36 245.348 150.946 249.012 155.388 cv
250.913 157.693 255.018 160.823 255.018 160.823 cv
255.018 160.823 259.122 157.693 261.023 155.388 cv
264.689 150.946 265.595 141.36 255.018 135.772 cv
.584314 .756863 .121569 rgb
f
255.018 160.823 mo
255.002 160.82 254.986 160.816 254.97 160.812 cv
254.986 160.816 255.002 160.82 255.018 160.823 cv
255.018 160.823 li
255.018 160.823 li
264.065 158.724 273.499 153.527 279.575 148.916 cv
279.575 148.916 li
273.499 153.527 264.065 158.724 255.018 160.823 cv
254.934 160.804 mo
254.931 160.803 254.927 160.802 254.923 160.801 cv
254.927 160.802 254.93 160.803 254.934 160.804 cv
254.88 160.791 mo
254.88 160.791 254.879 160.791 254.879 160.791 cv
254.879 160.791 254.88 160.791 254.88 160.791 cv
279.575 148.916 mo
279.564 148.909 279.553 148.901 279.541 148.893 cv
279.553 148.901 279.564 148.909 279.575 148.916 cv
284.081 135.919 mo
284.081 135.918 284.081 135.916 284.081 135.915 cv
284.081 135.916 284.081 135.918 284.081 135.919 cv
284.082 135.892 mo
284.082 135.89 284.082 135.886 284.082 135.884 cv
284.082 135.887 284.082 135.89 284.082 135.892 cv
284.082 135.864 mo
284.082 135.862 284.082 135.858 284.082 135.855 cv
284.082 135.859 284.082 135.861 284.082 135.864 cv
284.082 135.837 mo
284.082 135.834 284.082 135.83 284.082 135.827 cv
284.082 135.83 284.082 135.834 284.082 135.837 cv
284.082 135.809 mo
284.082 135.806 284.082 135.802 284.082 135.799 cv
284.082 135.802 284.082 135.806 284.082 135.809 cv
284.082 135.772 mo
284.082 135.764 284.082 135.757 284.082 135.749 cv
284.082 135.756 284.082 135.764 284.082 135.772 cv
284.082 135.738 mo
284.082 135.734 284.082 135.73 284.082 135.726 cv
284.082 135.73 284.082 135.734 284.082 135.738 cv
284.082 135.711 mo
284.082 135.709 284.082 135.707 284.082 135.705 cv
284.082 135.707 284.082 135.709 284.082 135.711 cv
.909635 .909635 .908835 rgb
f
278.275 148.078 mo
276.55 147.048 274.723 146.279 272.844 145.8 cv
277.233 142.383 280.981 138.054 283.853 133.069 cv
283.999 133.926 284.078 134.806 284.082 135.705 cv
284.082 135.707 284.082 135.709 284.082 135.711 cv
284.082 135.716 284.082 135.721 284.082 135.726 cv
284.082 135.73 284.082 135.734 284.082 135.738 cv
284.082 135.742 284.082 135.745 284.082 135.749 cv
284.082 135.757 284.082 135.764 284.082 135.772 cv
284.082 135.772 li
284.082 135.772 li
284.082 135.781 284.082 135.79 284.082 135.799 cv
284.082 135.802 284.082 135.806 284.082 135.809 cv
284.082 135.815 284.082 135.821 284.082 135.827 cv
284.082 135.83 284.082 135.834 284.082 135.837 cv
284.082 135.843 284.082 135.849 284.082 135.855 cv
284.082 135.858 284.082 135.862 284.082 135.864 cv
284.082 135.871 284.082 135.878 284.082 135.884 cv
284.082 135.886 284.082 135.89 284.082 135.892 cv
284.082 135.9 284.081 135.907 284.081 135.915 cv
284.081 135.916 284.081 135.918 284.081 135.919 cv
284.037 140.846 281.775 145.224 278.275 148.078 cv
.847059 .847059 .847059 rgb
f
255.018 160.823 mo
255.018 160.823 259.122 157.693 261.023 155.388 cv
261.903 154.322 262.623 152.961 263.065 151.429 cv
266.573 150.029 269.857 148.125 272.844 145.8 cv
274.723 146.279 276.55 147.048 278.275 148.078 cv
278.274 148.079 278.273 148.079 278.271 148.081 cv
278.701 148.336 279.125 148.605 279.541 148.893 cv
279.553 148.901 279.564 148.909 279.575 148.916 cv
279.575 148.916 li
273.499 153.527 264.065 158.724 255.018 160.823 cv
255.018 160.823 mo
255.002 160.82 254.986 160.816 254.97 160.812 cv
254.958 160.809 254.946 160.807 254.934 160.804 cv
254.93 160.803 254.927 160.802 254.923 160.801 cv
254.909 160.798 254.895 160.795 254.88 160.791 cv
254.88 160.791 254.879 160.791 254.879 160.791 cv
247.047 158.947 238.943 154.798 232.987 150.731 cv
237.668 152.849 242.783 154.062 248.148 154.158 cv
248.413 154.601 248.702 155.013 249.012 155.388 cv
250.913 157.693 255.018 160.823 255.018 160.823 cv
.482353 .619608 .109804 rgb
f
255.018 160.823 mo
255.018 160.823 li
255.018 160.823 250.913 157.693 249.012 155.388 cv
248.702 155.013 248.413 154.601 248.148 154.158 cv
248.379 154.162 248.61 154.165 248.842 154.165 cv
253.841 154.165 258.631 153.199 263.065 151.429 cv
262.623 152.961 261.903 154.322 261.023 155.388 cv
259.122 157.693 255.018 160.823 255.018 160.823 cv
255.018 160.823 li
.537255 .690196 .121569 rgb
f
28.689 230.994 mo
28.6753 231.244 li
28.6753 232.057 28.0151 232.71 27.209 232.71 cv
26.7505 232.71 26.3472 232.502 26.0762 232.175 cv
26.0693 232.161 li
25.9028 231.646 25.7915 231.119 25.7358 230.591 cv
25.729 230.424 25.7148 230.257 25.687 230.098 cv
25.6802 230 li
25.5273 228.881 25.1245 227.804 24.4849 226.831 cv
24.478 226.831 li
22.7339 224.155 19.4399 222.995 16.4727 224.01 cv
16.4585 224.01 li
14.9438 224.517 13.6582 225.671 12.9424 227.179 cv
12.2754 228.582 12.1919 230.111 12.7061 231.474 cv
12.7061 231.487 li
13.3804 233.301 15.0273 234.607 16.8062 234.732 cv
18.4116 234.837 19.8291 234.211 20.6909 233.03 cv
21.5522 231.8 21.5596 230.306 20.6978 229.124 cv
20.1694 228.408 19.4189 228.27 19.0161 228.249 cv
18.2861 228.214 17.5635 228.499 17.0913 229.021 cv
16.959 229.215 li
17.2578 228.943 17.668 228.798 18.0986 228.84 cv
18.6201 228.888 19.0786 229.139 19.3911 229.534 cv
19.9473 230.229 19.8291 231.077 19.7803 231.487 cv
19.7803 231.494 li
19.7109 232.384 19.002 233.12 18.0498 233.28 cv
18.0151 233.287 li
16.4863 233.502 15.02 232.794 14.3599 231.515 cv
13.9707 230.813 13.8179 230.014 13.9292 229.194 cv
14.0264 228.401 14.3672 227.665 14.895 227.061 cv
14.9023 227.054 li
15.979 225.865 17.5288 225.226 19.1548 225.31 cv
20.7256 225.386 22.1499 226.137 23.0674 227.38 cv
23.0742 227.38 li
24.6865 229.583 24.6865 232.474 23.0884 234.739 cv
23.0742 234.753 li
22.6089 235.399 22.0391 235.948 21.3994 236.387 cv
20.0513 237.317 18.3765 237.783 16.6187 237.672 cv
16.6118 237.672 li
15.7847 237.616 14.9785 237.415 14.2212 237.074 cv
13.6167 236.817 13.0396 236.47 12.5044 236.039 cv
11.3442 235.114 10.4614 233.892 9.94727 232.509 cv
9.14795 230.39 9.26611 228.047 10.2876 225.914 cv
11.3442 223.69 13.2549 221.98 15.5273 221.224 cv
17.5703 220.521 19.8291 220.528 21.8721 221.244 cv
23.9497 221.96 25.6943 223.322 26.9243 225.185 cv
26.9448 225.212 li
27.8901 226.644 28.46 228.235 28.6265 229.889 cv
28.6475 230.042 28.6616 230.188 28.6685 230.341 cv
28.6821 230.556 28.689 230.778 28.689 230.994 cv
cp
.811765 .717647 .584314 rgb
f
44.9365 230.994 mo
44.9155 231.244 li
44.9155 232.057 44.2622 232.71 43.4492 232.71 cv
42.9976 232.71 42.5874 232.502 42.3164 232.175 cv
42.3096 232.161 li
42.1499 231.654 42.0317 231.133 41.9761 230.611 cv
41.9761 230.598 li
41.9692 230.431 41.9551 230.257 41.9277 230.091 cv
41.9204 230 li
41.7744 228.881 41.3716 227.804 40.7251 226.831 cv
38.9741 224.155 35.6802 222.995 32.7129 224.01 cv
32.7061 224.01 li
31.1841 224.517 29.9053 225.671 29.1895 227.179 cv
28.7656 228.062 28.5781 228.985 28.6265 229.889 cv
28.6265 230.042 28.6406 230.194 28.6685 230.341 cv
28.71 230.729 28.8076 231.104 28.9463 231.474 cv
28.9531 231.487 li
29.6274 233.301 31.2744 234.607 33.0532 234.732 cv
34.6587 234.837 36.0693 234.211 36.9312 233.03 cv
37.7998 231.8 37.8066 230.306 36.9448 229.124 cv
36.4097 228.408 35.6592 228.27 35.2563 228.249 cv
34.5264 228.214 33.811 228.499 33.3384 229.021 cv
33.2061 229.215 li
33.5049 228.943 33.9082 228.798 34.3389 228.84 cv
34.8599 228.888 35.3257 229.139 35.6382 229.534 cv
36.1875 230.229 36.0762 231.077 36.0205 231.487 cv
36.0205 231.494 li
35.958 232.384 35.2495 233.12 34.2905 233.28 cv
34.2554 233.287 li
32.7266 233.502 31.2676 232.794 30.6074 231.515 cv
30.2183 230.813 30.0654 230.014 30.1694 229.194 cv
30.2739 228.401 30.6074 227.665 31.1421 227.061 cv
31.1494 227.054 li
32.2192 225.865 33.769 225.226 35.4023 225.31 cv
36.1875 225.351 36.938 225.553 37.605 225.907 cv
38.272 226.262 38.856 226.755 39.3145 227.38 cv
40.9268 229.583 40.9336 232.474 39.3286 234.739 cv
39.3213 234.753 li
38.856 235.393 38.293 235.941 37.647 236.387 cv
36.2988 237.317 34.624 237.783 32.8589 237.672 cv
32.8516 237.672 li
32.0317 237.616 31.2188 237.415 30.4614 237.074 cv
29.8569 236.811 29.2798 236.463 28.7446 236.039 cv
27.5913 235.114 26.7085 233.892 26.1943 232.509 cv
26.1528 232.397 26.1113 232.286 26.0762 232.175 cv
26.0693 232.161 li
25.9028 231.646 25.7915 231.119 25.7358 230.591 cv
25.729 230.424 25.7148 230.257 25.687 230.098 cv
25.6802 230 li
25.6177 228.624 25.9028 227.228 26.5278 225.914 cv
26.646 225.664 26.7783 225.421 26.9243 225.185 cv
28.022 223.314 29.7524 221.897 31.7676 221.224 cv
33.8179 220.521 36.0693 220.528 38.1191 221.244 cv
40.1904 221.96 41.9414 223.322 43.1646 225.185 cv
43.1855 225.212 li
44.1167 226.623 44.6792 228.18 44.8672 229.806 cv
44.8672 229.993 44.8877 230.181 44.9155 230.368 cv
44.9297 230.577 44.9365 230.785 44.9365 230.994 cv
cp
f
44.9365 230.994 mo
44.9155 231.244 li
44.9155 232.057 44.2622 232.71 43.4492 232.71 cv
42.9976 232.71 42.5874 232.502 42.3164 232.175 cv
42.3096 232.161 li
42.1499 231.654 42.0317 231.133 41.9761 230.611 cv
41.9761 230.598 li
41.9692 230.431 41.9551 230.257 41.9277 230.091 cv
41.9204 230 li
41.7744 228.881 41.3716 227.804 40.7251 226.831 cv
38.9741 224.155 35.6802 222.995 32.7129 224.01 cv
32.7061 224.01 li
31.1841 224.517 29.9053 225.671 29.1895 227.179 cv
28.7656 228.062 28.5781 228.985 28.6265 229.889 cv
28.6265 230.042 28.6406 230.194 28.6685 230.341 cv
28.71 230.729 28.8076 231.104 28.9463 231.474 cv
28.9531 231.487 li
29.6274 233.301 31.2744 234.607 33.0532 234.732 cv
34.6587 234.837 36.0693 234.211 36.9312 233.03 cv
37.7998 231.8 37.8066 230.306 36.9448 229.124 cv
36.4097 228.408 35.6592 228.27 35.2563 228.249 cv
34.5264 228.214 33.811 228.499 33.3384 229.021 cv
33.2061 229.215 li
33.5049 228.943 33.9082 228.798 34.3389 228.84 cv
34.8599 228.888 35.3257 229.139 35.6382 229.534 cv
36.1875 230.229 36.0762 231.077 36.0205 231.487 cv
36.0205 231.494 li
35.958 232.384 35.2495 233.12 34.2905 233.28 cv
34.2554 233.287 li
32.7266 233.502 31.2676 232.794 30.6074 231.515 cv
30.2183 230.813 30.0654 230.014 30.1694 229.194 cv
30.2739 228.401 30.6074 227.665 31.1421 227.061 cv
31.1494 227.054 li
32.2192 225.865 33.769 225.226 35.4023 225.31 cv
36.1875 225.351 36.938 225.553 37.605 225.907 cv
38.272 226.262 38.856 226.755 39.3145 227.38 cv
40.9268 229.583 40.9336 232.474 39.3286 234.739 cv
39.3213 234.753 li
38.856 235.393 38.293 235.941 37.647 236.387 cv
36.2988 237.317 34.624 237.783 32.8589 237.672 cv
32.8516 237.672 li
32.0317 237.616 31.2188 237.415 30.4614 237.074 cv
29.8569 236.811 29.2798 236.463 28.7446 236.039 cv
27.5913 235.114 26.7085 233.892 26.1943 232.509 cv
26.1528 232.397 26.1113 232.286 26.0762 232.175 cv
26.0693 232.161 li
25.9028 231.646 25.7915 231.119 25.7358 230.591 cv
25.729 230.424 25.7148 230.257 25.687 230.098 cv
25.6802 230 li
25.6177 228.624 25.9028 227.228 26.5278 225.914 cv
26.646 225.664 26.7783 225.421 26.9243 225.185 cv
28.022 223.314 29.7524 221.897 31.7676 221.224 cv
33.8179 220.521 36.0693 220.528 38.1191 221.244 cv
40.1904 221.96 41.9414 223.322 43.1646 225.185 cv
43.1855 225.212 li
44.1167 226.623 44.6792 228.18 44.8672 229.806 cv
44.8672 229.993 44.8877 230.181 44.9155 230.368 cv
44.9297 230.577 44.9365 230.785 44.9365 230.994 cv
cp
f
61.1768 230.994 mo
61.1631 231.244 li
61.1631 232.057 60.5029 232.71 59.6968 232.71 cv
59.2378 232.71 58.835 232.502 58.564 232.175 cv
58.5571 232.161 li
58.397 231.646 58.2788 231.133 58.2231 230.611 cv
58.2231 230.591 li
58.2163 230.424 58.2026 230.264 58.1748 230.104 cv
58.168 230 li
58.0146 228.881 57.6118 227.804 56.9727 226.831 cv
56.9653 226.831 li
55.2212 224.155 51.9272 222.995 48.96 224.01 cv
48.9463 224.01 li
47.4312 224.517 46.1455 225.671 45.4297 227.179 cv
45.0269 228.026 44.832 228.93 44.8672 229.806 cv
44.8672 229.993 44.8877 230.181 44.9155 230.368 cv
44.9644 230.743 45.0615 231.112 45.1934 231.474 cv
45.1934 231.487 li
45.8677 233.301 47.5146 234.607 49.2935 234.732 cv
50.8989 234.837 52.3164 234.211 53.1782 233.03 cv
54.04 231.8 54.0469 230.306 53.1851 229.124 cv
52.6572 228.408 51.9067 228.27 51.5034 228.249 cv
50.7739 228.214 50.0513 228.499 49.5786 229.021 cv
49.4463 229.215 li
49.7451 228.943 50.1553 228.798 50.5864 228.84 cv
51.1074 228.888 51.5659 229.139 51.8789 229.534 cv
52.4346 230.229 52.3164 231.077 52.2681 231.487 cv
52.2681 231.494 li
52.1982 232.384 51.4897 233.12 50.5376 233.28 cv
50.5029 233.287 li
48.9741 233.502 47.5078 232.794 46.8477 231.515 cv
46.4585 230.813 46.3057 230.014 46.4165 229.194 cv
46.5137 228.401 46.8545 227.665 47.3828 227.061 cv
47.3896 227.054 li
48.4668 225.865 50.0161 225.226 51.6426 225.31 cv
53.2129 225.386 54.6377 226.137 55.5547 227.38 cv
55.562 227.38 li
57.1738 229.583 57.1738 232.474 55.5757 234.739 cv
55.562 234.753 li
55.0962 235.399 54.5264 235.948 53.8872 236.387 cv
52.5391 237.317 50.8643 237.783 49.106 237.672 cv
49.0991 237.672 li
48.272 237.616 47.4658 237.415 46.7085 237.074 cv
46.104 236.817 45.5273 236.47 44.9922 236.039 cv
43.8315 235.114 42.9492 233.892 42.4346 232.509 cv
42.3931 232.397 42.3516 232.286 42.3164 232.175 cv
42.3096 232.161 li
42.1499 231.654 42.0317 231.133 41.9761 230.611 cv
41.9761 230.598 li
41.9692 230.431 41.9551 230.257 41.9277 230.091 cv
41.9204 230 li
41.8579 228.631 42.1431 227.234 42.7754 225.914 cv
42.8936 225.664 43.0254 225.421 43.1646 225.185 cv
44.2695 223.314 45.9995 221.897 48.0151 221.224 cv
50.0581 220.521 52.3164 220.528 54.3594 221.244 cv
56.4375 221.96 58.1816 223.322 59.4116 225.185 cv
59.4326 225.212 li
60.3706 226.637 60.9404 228.214 61.1074 229.861 cv
61.1143 229.889 li
61.1348 230.042 61.1489 230.188 61.1558 230.341 cv
61.1558 230.368 li
61.1699 230.577 61.1768 230.785 61.1768 230.994 cv
cp
f
61.1768 230.994 mo
61.1631 231.244 li
61.1631 232.057 60.5029 232.71 59.6968 232.71 cv
59.2378 232.71 58.835 232.502 58.564 232.175 cv
58.5571 232.161 li
58.397 231.646 58.2788 231.133 58.2231 230.611 cv
58.2231 230.591 li
58.2163 230.424 58.2026 230.264 58.1748 230.104 cv
58.168 230 li
58.0146 228.881 57.6118 227.804 56.9727 226.831 cv
56.9653 226.831 li
55.2212 224.155 51.9272 222.995 48.96 224.01 cv
48.9463 224.01 li
47.4312 224.517 46.1455 225.671 45.4297 227.179 cv
45.0269 228.026 44.832 228.93 44.8672 229.806 cv
44.8672 229.993 44.8877 230.181 44.9155 230.368 cv
44.9644 230.743 45.0615 231.112 45.1934 231.474 cv
45.1934 231.487 li
45.8677 233.301 47.5146 234.607 49.2935 234.732 cv
50.8989 234.837 52.3164 234.211 53.1782 233.03 cv
54.04 231.8 54.0469 230.306 53.1851 229.124 cv
52.6572 228.408 51.9067 228.27 51.5034 228.249 cv
50.7739 228.214 50.0513 228.499 49.5786 229.021 cv
49.4463 229.215 li
49.7451 228.943 50.1553 228.798 50.5864 228.84 cv
51.1074 228.888 51.5659 229.139 51.8789 229.534 cv
52.4346 230.229 52.3164 231.077 52.2681 231.487 cv
52.2681 231.494 li
52.1982 232.384 51.4897 233.12 50.5376 233.28 cv
50.5029 233.287 li
48.9741 233.502 47.5078 232.794 46.8477 231.515 cv
46.4585 230.813 46.3057 230.014 46.4165 229.194 cv
46.5137 228.401 46.8545 227.665 47.3828 227.061 cv
47.3896 227.054 li
48.4668 225.865 50.0161 225.226 51.6426 225.31 cv
53.2129 225.386 54.6377 226.137 55.5547 227.38 cv
55.562 227.38 li
57.1738 229.583 57.1738 232.474 55.5757 234.739 cv
55.562 234.753 li
55.0962 235.399 54.5264 235.948 53.8872 236.387 cv
52.5391 237.317 50.8643 237.783 49.106 237.672 cv
49.0991 237.672 li
48.272 237.616 47.4658 237.415 46.7085 237.074 cv
46.104 236.817 45.5273 236.47 44.9922 236.039 cv
43.8315 235.114 42.9492 233.892 42.4346 232.509 cv
42.3931 232.397 42.3516 232.286 42.3164 232.175 cv
42.3096 232.161 li
42.1499 231.654 42.0317 231.133 41.9761 230.611 cv
41.9761 230.598 li
41.9692 230.431 41.9551 230.257 41.9277 230.091 cv
41.9204 230 li
41.8579 228.631 42.1431 227.234 42.7754 225.914 cv
42.8936 225.664 43.0254 225.421 43.1646 225.185 cv
44.2695 223.314 45.9995 221.897 48.0151 221.224 cv
50.0581 220.521 52.3164 220.528 54.3594 221.244 cv
56.4375 221.96 58.1816 223.322 59.4116 225.185 cv
59.4326 225.212 li
60.3706 226.637 60.9404 228.214 61.1074 229.861 cv
61.1143 229.889 li
61.1348 230.042 61.1489 230.188 61.1558 230.341 cv
61.1558 230.368 li
61.1699 230.577 61.1768 230.785 61.1768 230.994 cv
cp
f
77.4238 230.994 mo
77.4033 231.244 li
77.4033 232.057 76.75 232.71 75.937 232.71 cv
75.1309 232.71 74.4707 232.057 74.4707 231.244 cv
74.4775 231.001 li
74.4775 229.534 74.0464 228.096 73.2129 226.831 cv
71.4614 224.155 68.1675 222.995 65.2002 224.01 cv
65.1934 224.01 li
63.6714 224.517 62.3926 225.671 61.6772 227.179 cv
61.2603 228.047 61.0654 228.965 61.1074 229.861 cv
61.1143 229.889 li
61.1143 230.042 61.1279 230.194 61.1558 230.341 cv
61.1558 230.368 li
61.2046 230.743 61.3018 231.112 61.4341 231.474 cv
61.4409 231.487 li
62.1147 233.301 63.7617 234.607 65.541 234.732 cv
67.146 234.837 68.5566 234.211 69.4185 233.03 cv
70.2871 231.8 70.2939 230.306 69.4326 229.124 cv
68.8975 228.408 68.147 228.27 67.7437 228.249 cv
67.0142 228.214 66.2983 228.499 65.8257 229.021 cv
65.6938 229.215 li
65.9927 228.943 66.3955 228.798 66.8262 228.84 cv
67.3477 228.888 67.813 229.139 68.126 229.534 cv
68.6748 230.229 68.5635 231.077 68.5083 231.487 cv
68.5083 231.494 li
68.4458 232.384 67.7368 233.12 66.7778 233.28 cv
66.7432 233.287 li
65.2144 233.502 63.7549 232.794 63.0947 231.515 cv
62.7056 230.813 62.5527 230.014 62.6567 229.194 cv
62.7612 228.401 63.0947 227.665 63.6299 227.061 cv
63.6367 227.054 li
64.707 225.865 66.2568 225.226 67.8896 225.31 cv
68.6748 225.351 69.4253 225.553 70.0928 225.907 cv
70.7598 226.262 71.3433 226.755 71.8022 227.38 cv
73.4141 229.583 73.4214 232.474 71.8159 234.739 cv
71.8091 234.753 li
71.3433 235.393 70.7803 235.941 70.1343 236.387 cv
68.7861 237.317 67.1113 237.783 65.3462 237.672 cv
65.3394 237.672 li
64.5195 237.616 63.7061 237.415 62.9487 237.074 cv
62.3442 236.811 61.7676 236.463 61.2324 236.039 cv
60.0786 235.114 59.1963 233.892 58.6821 232.509 cv
58.6401 232.397 58.5986 232.286 58.564 232.175 cv
58.5571 232.161 li
58.397 231.646 58.2788 231.133 58.2231 230.611 cv
58.2231 230.591 li
58.2163 230.424 58.2026 230.264 58.1748 230.104 cv
58.168 230 li
58.105 228.624 58.3901 227.228 59.0156 225.914 cv
59.1338 225.664 59.2656 225.421 59.4116 225.185 cv
60.5098 223.314 62.2402 221.897 64.2554 221.224 cv
66.3052 220.521 68.5566 220.528 70.6069 221.244 cv
72.6914 221.967 74.4497 223.336 75.6729 225.212 cv
76.8262 226.963 77.4238 228.95 77.4238 230.994 cv
cp
f
28.689 246.282 mo
28.6753 246.532 li
28.6753 247.345 28.0151 247.998 27.209 247.998 cv
26.7505 247.998 26.3472 247.79 26.0762 247.463 cv
26.0693 247.449 li
25.9028 246.936 25.7915 246.407 25.7358 245.879 cv
25.729 245.712 25.7148 245.545 25.687 245.386 cv
25.6802 245.288 li
25.5273 244.169 25.1245 243.092 24.4849 242.119 cv
24.478 242.119 li
22.7339 239.444 19.4399 238.283 16.4727 239.298 cv
16.4585 239.298 li
14.9438 239.806 13.6582 240.959 12.9424 242.467 cv
12.2754 243.87 12.1919 245.399 12.7061 246.762 cv
12.7061 246.775 li
13.3804 248.589 15.0273 249.896 16.8062 250.021 cv
18.4116 250.125 19.8291 249.499 20.6909 248.318 cv
21.5522 247.088 21.5596 245.594 20.6978 244.413 cv
20.1694 243.697 19.4189 243.558 19.0161 243.537 cv
18.2861 243.502 17.5635 243.787 17.0913 244.309 cv
16.959 244.503 li
17.2578 244.232 17.668 244.086 18.0986 244.128 cv
18.6201 244.177 19.0786 244.427 19.3911 244.822 cv
19.9473 245.518 19.8291 246.365 19.7803 246.775 cv
19.7803 246.782 li
19.7109 247.672 19.002 248.408 18.0498 248.568 cv
18.0151 248.575 li
16.4863 248.791 15.02 248.082 14.3599 246.803 cv
13.9707 246.102 13.8179 245.302 13.9292 244.482 cv
14.0264 243.69 14.3672 242.953 14.895 242.349 cv
14.9023 242.342 li
15.979 241.153 17.5288 240.515 19.1548 240.598 cv
20.7256 240.674 22.1499 241.425 23.0674 242.668 cv
23.0742 242.668 li
24.6865 244.871 24.6865 247.762 23.0884 250.027 cv
23.0742 250.041 li
22.6089 250.688 22.0391 251.236 21.3994 251.675 cv
20.0513 252.605 18.3765 253.071 16.6187 252.96 cv
16.6118 252.96 li
15.7847 252.904 14.9785 252.703 14.2212 252.362 cv
13.6167 252.105 13.0396 251.758 12.5044 251.327 cv
11.3442 250.403 10.4614 249.18 9.94727 247.797 cv
9.14795 245.678 9.26611 243.335 10.2876 241.202 cv
11.1357 239.423 12.5322 237.971 14.2212 237.074 cv
14.6382 236.845 15.0757 236.657 15.5273 236.512 cv
17.4175 235.865 19.4883 235.816 21.3994 236.387 cv
21.5596 236.428 21.7192 236.477 21.8721 236.532 cv
23.9497 237.248 25.6943 238.61 26.9243 240.473 cv
26.9448 240.5 li
27.8901 241.932 28.46 243.523 28.6265 245.177 cv
28.6475 245.33 28.6616 245.476 28.6685 245.629 cv
28.6821 245.844 28.689 246.066 28.689 246.282 cv
cp
f
44.9365 246.282 mo
44.9155 246.532 li
44.9155 247.345 44.2622 247.998 43.4492 247.998 cv
42.9976 247.998 42.5874 247.79 42.3164 247.463 cv
42.3096 247.449 li
42.1499 246.942 42.0317 246.421 41.9761 245.899 cv
41.9761 245.886 li
41.9692 245.719 41.9551 245.545 41.9277 245.379 cv
41.9204 245.288 li
41.7744 244.169 41.3716 243.092 40.7251 242.119 cv
38.9741 239.444 35.6802 238.283 32.7129 239.298 cv
32.7061 239.298 li
31.1841 239.806 29.9053 240.959 29.1895 242.467 cv
28.7656 243.35 28.5781 244.273 28.6265 245.177 cv
28.6265 245.33 28.6406 245.482 28.6685 245.629 cv
28.71 246.018 28.8076 246.394 28.9463 246.762 cv
28.9531 246.775 li
29.6274 248.589 31.2744 249.896 33.0532 250.021 cv
34.6587 250.125 36.0693 249.499 36.9312 248.318 cv
37.7998 247.088 37.8066 245.594 36.9448 244.413 cv
36.4097 243.697 35.6592 243.558 35.2563 243.537 cv
34.5264 243.502 33.811 243.787 33.3384 244.309 cv
33.2061 244.503 li
33.5049 244.232 33.9082 244.086 34.3389 244.128 cv
34.8599 244.177 35.3257 244.427 35.6382 244.822 cv
36.1875 245.518 36.0762 246.365 36.0205 246.775 cv
36.0205 246.782 li
35.958 247.672 35.2495 248.408 34.2905 248.568 cv
34.2554 248.575 li
32.7266 248.791 31.2676 248.082 30.6074 246.803 cv
30.2183 246.102 30.0654 245.302 30.1694 244.482 cv
30.2739 243.69 30.6074 242.953 31.1421 242.349 cv
31.1494 242.342 li
32.2192 241.153 33.769 240.515 35.4023 240.598 cv
36.1875 240.64 36.938 240.841 37.605 241.195 cv
38.272 241.55 38.856 242.043 39.3145 242.668 cv
40.9268 244.871 40.9336 247.762 39.3286 250.027 cv
39.3213 250.041 li
38.856 250.681 38.293 251.229 37.647 251.675 cv
36.2988 252.605 34.624 253.071 32.8589 252.96 cv
32.8516 252.96 li
32.0317 252.904 31.2188 252.703 30.4614 252.362 cv
30.4546 252.362 li
29.8496 252.099 29.2798 251.751 28.7446 251.327 cv
27.5913 250.403 26.7085 249.18 26.1943 247.797 cv
26.1528 247.686 26.1113 247.574 26.0762 247.463 cv
26.0693 247.449 li
25.9028 246.936 25.7915 246.407 25.7358 245.879 cv
25.729 245.712 25.7148 245.545 25.687 245.386 cv
25.6802 245.288 li
25.6177 243.912 25.9028 242.516 26.5278 241.202 cv
26.646 240.952 26.7783 240.709 26.9243 240.473 cv
27.772 239.021 29.0088 237.839 30.4614 237.074 cv
30.8784 236.845 31.3159 236.657 31.7676 236.512 cv
33.6577 235.865 35.729 235.816 37.647 236.387 cv
37.8066 236.428 37.9595 236.477 38.1191 236.532 cv
40.1904 237.248 41.9414 238.61 43.1646 240.473 cv
43.1855 240.5 li
44.1167 241.911 44.6792 243.468 44.8672 245.094 cv
44.8672 245.281 44.8877 245.469 44.9155 245.656 cv
44.9297 245.865 44.9365 246.073 44.9365 246.282 cv
cp
f
61.1768 246.282 mo
61.1631 246.532 li
61.1631 247.345 60.5029 247.998 59.6968 247.998 cv
59.2378 247.998 58.835 247.79 58.564 247.463 cv
58.5571 247.449 li
58.397 246.936 58.2788 246.421 58.2231 245.899 cv
58.2231 245.879 li
58.2163 245.712 58.2026 245.552 58.1748 245.393 cv
58.168 245.288 li
58.0146 244.169 57.6118 243.092 56.9727 242.119 cv
56.9653 242.119 li
55.2212 239.444 51.9272 238.283 48.96 239.298 cv
48.9463 239.298 li
47.4312 239.806 46.1455 240.959 45.4297 242.467 cv
45.0269 243.314 44.832 244.218 44.8672 245.094 cv
44.8672 245.281 44.8877 245.469 44.9155 245.656 cv
44.9644 246.032 45.0615 246.4 45.1934 246.762 cv
45.1934 246.775 li
45.8677 248.589 47.5146 249.896 49.2935 250.021 cv
50.8989 250.125 52.3164 249.499 53.1782 248.318 cv
54.04 247.088 54.0469 245.594 53.1851 244.413 cv
52.6572 243.697 51.9067 243.558 51.5034 243.537 cv
50.7739 243.502 50.0513 243.787 49.5786 244.309 cv
49.4463 244.503 li
49.7451 244.232 50.1553 244.086 50.5864 244.128 cv
51.1074 244.177 51.5659 244.427 51.8789 244.822 cv
52.4346 245.518 52.3164 246.365 52.2681 246.775 cv
52.2681 246.782 li
52.1982 247.672 51.4897 248.408 50.5376 248.568 cv
50.5029 248.575 li
48.9741 248.791 47.5078 248.082 46.8477 246.803 cv
46.4585 246.102 46.3057 245.302 46.4165 244.482 cv
46.5137 243.69 46.8545 242.953 47.3828 242.349 cv
47.3896 242.342 li
48.4668 241.153 50.0161 240.515 51.6426 240.598 cv
53.2129 240.674 54.6377 241.425 55.5547 242.668 cv
55.562 242.668 li
57.1738 244.871 57.1738 247.762 55.5757 250.027 cv
55.562 250.041 li
55.0962 250.688 54.5264 251.236 53.8872 251.675 cv
52.5391 252.605 50.8643 253.071 49.106 252.96 cv
49.0991 252.96 li
48.272 252.904 47.4658 252.703 46.7085 252.362 cv
46.7017 252.362 li
46.0972 252.105 45.5273 251.758 44.9922 251.327 cv
43.8315 250.403 42.9492 249.18 42.4346 247.797 cv
42.3931 247.686 42.3516 247.574 42.3164 247.463 cv
42.3096 247.449 li
42.1499 246.942 42.0317 246.421 41.9761 245.899 cv
41.9761 245.886 li
41.9692 245.719 41.9551 245.545 41.9277 245.379 cv
41.9204 245.288 li
41.8579 243.919 42.1431 242.522 42.7754 241.202 cv
42.8936 240.952 43.0254 240.709 43.1646 240.473 cv
44.019 239.021 45.2559 237.839 46.7085 237.074 cv
47.1255 236.845 47.5635 236.657 48.0151 236.512 cv
49.9053 235.865 51.9761 235.816 53.8872 236.387 cv
54.0469 236.428 54.2065 236.477 54.3594 236.532 cv
56.4375 237.248 58.1816 238.61 59.4116 240.473 cv
59.4326 240.5 li
60.3706 241.925 60.9404 243.502 61.1074 245.149 cv
61.1143 245.177 li
61.1348 245.33 61.1489 245.476 61.1558 245.629 cv
61.1558 245.656 li
61.1699 245.865 61.1768 246.073 61.1768 246.282 cv
cp
f
77.4238 246.282 mo
77.4033 246.532 li
77.4033 247.345 76.75 247.998 75.937 247.998 cv
75.1309 247.998 74.4707 247.345 74.4707 246.532 cv
74.4775 246.289 li
74.4775 244.822 74.0464 243.384 73.2129 242.119 cv
71.4614 239.444 68.1675 238.283 65.2002 239.298 cv
65.1934 239.298 li
63.6714 239.806 62.3926 240.959 61.6772 242.467 cv
61.2603 243.335 61.0654 244.253 61.1074 245.149 cv
61.1143 245.177 li
61.1143 245.33 61.1279 245.482 61.1558 245.629 cv
61.1558 245.656 li
61.2046 246.032 61.3018 246.4 61.4341 246.762 cv
61.4409 246.775 li
62.1147 248.589 63.7617 249.896 65.541 250.021 cv
67.146 250.125 68.5566 249.499 69.4185 248.318 cv
70.2871 247.088 70.2939 245.594 69.4326 244.413 cv
68.8975 243.697 68.147 243.558 67.7437 243.537 cv
67.0142 243.502 66.2983 243.787 65.8257 244.309 cv
65.6938 244.503 li
65.9927 244.232 66.3955 244.086 66.8262 244.128 cv
67.3477 244.177 67.813 244.427 68.126 244.822 cv
68.6748 245.518 68.5635 246.365 68.5083 246.775 cv
68.5083 246.782 li
68.4458 247.672 67.7368 248.408 66.7778 248.568 cv
66.7432 248.575 li
65.2144 248.791 63.7549 248.082 63.0947 246.803 cv
62.7056 246.102 62.5527 245.302 62.6567 244.482 cv
62.7612 243.69 63.0947 242.953 63.6299 242.349 cv
63.6367 242.342 li
64.707 241.153 66.2568 240.515 67.8896 240.598 cv
68.6748 240.64 69.4253 240.841 70.0928 241.195 cv
70.7598 241.55 71.3433 242.043 71.8022 242.668 cv
73.4141 244.871 73.4214 247.762 71.8159 250.027 cv
71.8091 250.041 li
71.3433 250.681 70.7803 251.229 70.1343 251.675 cv
68.7861 252.605 67.1113 253.071 65.3462 252.96 cv
65.3394 252.96 li
64.5195 252.904 63.7061 252.703 62.9487 252.362 cv
62.3442 252.099 61.7676 251.751 61.2324 251.327 cv
60.0786 250.403 59.1963 249.18 58.6821 247.797 cv
58.6401 247.686 58.5986 247.574 58.564 247.463 cv
58.5571 247.449 li
58.397 246.936 58.2788 246.421 58.2231 245.899 cv
58.2231 245.879 li
58.2163 245.712 58.2026 245.552 58.1748 245.393 cv
58.168 245.288 li
58.105 243.912 58.3901 242.516 59.0156 241.202 cv
59.1338 240.952 59.2656 240.709 59.4116 240.473 cv
60.2593 239.021 61.4966 237.839 62.9487 237.074 cv
63.3657 236.845 63.8037 236.657 64.2554 236.512 cv
66.1455 235.865 68.2163 235.816 70.1343 236.387 cv
70.2939 236.428 70.4468 236.477 70.6069 236.532 cv
72.6914 237.255 74.4497 238.624 75.6729 240.5 cv
76.8262 242.251 77.4238 244.239 77.4238 246.282 cv
cp
f
28.689 261.57 mo
28.6753 261.82 li
28.6753 262.634 28.0151 263.286 27.209 263.286 cv
26.7505 263.286 26.3472 263.078 26.0762 262.752 cv
26.0693 262.737 li
25.9028 262.224 25.7915 261.695 25.7358 261.167 cv
25.729 261.028 li
25.7222 260.917 25.708 260.806 25.687 260.694 cv
25.687 260.674 li
25.6802 260.576 li
25.5273 259.458 25.1245 258.381 24.4849 257.407 cv
24.478 257.407 li
22.7339 254.732 19.4399 253.571 16.4727 254.586 cv
16.4585 254.586 li
14.9438 255.094 13.6582 256.247 12.9424 257.755 cv
12.2754 259.159 12.1919 260.688 12.7061 262.05 cv
12.7061 262.063 li
13.3804 263.877 15.0273 265.184 16.8062 265.309 cv
18.4116 265.413 19.8291 264.788 20.6909 263.606 cv
21.5522 262.376 21.5596 260.882 20.6978 259.701 cv
20.1694 258.985 19.4189 258.846 19.0161 258.825 cv
18.2861 258.79 17.5635 259.075 17.0913 259.597 cv
16.959 259.791 li
17.2578 259.521 17.668 259.374 18.0986 259.416 cv
18.6201 259.465 19.0786 259.715 19.3911 260.111 cv
19.9473 260.806 19.8291 261.653 19.7803 262.063 cv
19.7803 262.07 li
19.7109 262.96 19.002 263.696 18.0498 263.856 cv
18.0151 263.863 li
16.4863 264.079 15.02 263.37 14.3599 262.092 cv
13.9707 261.39 13.8179 260.591 13.9292 259.771 cv
14.0264 258.979 14.3672 258.241 14.895 257.637 cv
14.9023 257.63 li
15.979 256.441 17.5288 255.803 19.1548 255.886 cv
20.7256 255.962 22.1499 256.713 23.0674 257.956 cv
23.0742 257.956 li
24.6865 260.159 24.6865 263.051 23.0884 265.315 cv
23.0742 265.33 li
22.6089 265.976 22.0391 266.525 21.3994 266.963 cv
20.0513 267.894 18.3765 268.359 16.6187 268.248 cv
16.6118 268.248 li
15.7847 268.192 14.9785 267.991 14.2212 267.65 cv
13.6167 267.394 13.0396 267.046 12.5044 266.615 cv
11.3442 265.691 10.4614 264.468 9.94727 263.085 cv
9.14795 260.966 9.26611 258.624 10.2876 256.49 cv
11.1357 254.711 12.5322 253.259 14.2212 252.362 cv
14.6382 252.133 15.0757 251.945 15.5273 251.8 cv
17.4175 251.153 19.4883 251.104 21.3994 251.675 cv
21.5596 251.716 21.7192 251.765 21.8721 251.82 cv
23.9497 252.536 25.6943 253.898 26.9243 255.761 cv
26.9448 255.788 li
27.8901 257.22 28.46 258.812 28.6265 260.465 cv
28.6265 260.521 li
28.6475 260.639 28.6616 260.764 28.6616 260.882 cv
28.6685 260.917 li
28.6821 261.133 28.689 261.354 28.689 261.57 cv
cp
f
44.9365 261.57 mo
44.9155 261.82 li
44.9155 262.634 44.2622 263.286 43.4492 263.286 cv
42.9976 263.286 42.5874 263.078 42.3164 262.752 cv
42.3096 262.737 li
42.1499 262.224 42.0317 261.702 41.9761 261.174 cv
41.9692 261.015 li
41.9624 260.903 41.9482 260.785 41.9277 260.667 cv
41.9204 260.576 li
41.7744 259.458 41.3716 258.381 40.7251 257.407 cv
38.9741 254.732 35.6802 253.571 32.7129 254.586 cv
32.7061 254.586 li
31.1841 255.094 29.9053 256.247 29.1895 257.755 cv
28.7656 258.638 28.5781 259.562 28.6265 260.465 cv
28.6265 260.521 li
28.6265 260.646 28.6406 260.764 28.6616 260.882 cv
28.6685 260.917 li
28.71 261.306 28.8076 261.682 28.9463 262.05 cv
28.9531 262.063 li
29.6274 263.877 31.2744 265.184 33.0532 265.309 cv
34.6587 265.413 36.0693 264.788 36.9312 263.606 cv
37.7998 262.376 37.8066 260.882 36.9448 259.701 cv
36.4097 258.985 35.6592 258.846 35.2563 258.825 cv
34.5264 258.79 33.811 259.075 33.3384 259.597 cv
33.2061 259.791 li
33.5049 259.521 33.9082 259.374 34.3389 259.416 cv
34.8599 259.465 35.3257 259.715 35.6382 260.111 cv
36.1875 260.806 36.0762 261.653 36.0205 262.063 cv
36.0205 262.07 li
35.958 262.96 35.2495 263.696 34.2905 263.856 cv
34.2554 263.863 li
32.7266 264.079 31.2676 263.37 30.6074 262.092 cv
30.2183 261.39 30.0654 260.591 30.1694 259.771 cv
30.2739 258.979 30.6074 258.241 31.1421 257.637 cv
31.1494 257.63 li
32.2192 256.441 33.769 255.803 35.4023 255.886 cv
36.1875 255.928 36.938 256.129 37.605 256.483 cv
38.272 256.838 38.856 257.331 39.3145 257.956 cv
40.9268 260.159 40.9336 263.051 39.3286 265.315 cv
39.3213 265.33 li
38.856 265.969 38.293 266.518 37.647 266.963 cv
36.2988 267.894 34.624 268.359 32.8589 268.248 cv
32.8516 268.248 li
32.0317 268.192 31.2188 267.991 30.4614 267.65 cv
30.4546 267.65 li
29.8496 267.387 29.2798 267.039 28.7446 266.615 cv
27.5913 265.691 26.7085 264.468 26.1943 263.085 cv
26.1528 262.974 26.1113 262.862 26.0762 262.752 cv
26.0693 262.737 li
25.9028 262.224 25.7915 261.695 25.7358 261.167 cv
25.729 261.028 li
25.7222 260.917 25.708 260.806 25.687 260.694 cv
25.687 260.674 li
25.6802 260.576 li
25.6177 259.2 25.9028 257.804 26.5278 256.49 cv
26.646 256.24 26.7783 255.997 26.9243 255.761 cv
27.772 254.315 29.002 253.134 30.4546 252.362 cv
30.4614 252.362 li
30.8784 252.133 31.3159 251.945 31.7676 251.8 cv
33.6577 251.153 35.729 251.104 37.647 251.675 cv
37.8066 251.716 37.9595 251.765 38.1191 251.82 cv
40.1904 252.536 41.9414 253.898 43.1646 255.761 cv
43.1855 255.788 li
44.1094 257.192 44.6792 258.756 44.8672 260.375 cv
44.8672 260.382 li
44.8672 260.569 44.8877 260.757 44.9155 260.944 cv
44.9155 260.952 li
44.9297 261.16 44.9365 261.361 44.9365 261.57 cv
cp
f
61.1768 261.57 mo
61.1631 261.82 li
61.1631 262.634 60.5029 263.286 59.6968 263.286 cv
59.2378 263.286 58.835 263.078 58.564 262.752 cv
58.5571 262.737 li
58.3901 262.224 58.2788 261.695 58.2231 261.167 cv
58.2163 261 58.2026 260.834 58.1748 260.674 cv
58.168 260.576 li
58.0146 259.458 57.6118 258.381 56.9727 257.407 cv
56.9653 257.407 li
55.2212 254.732 51.9272 253.571 48.96 254.586 cv
48.9463 254.586 li
47.4312 255.094 46.1455 256.247 45.4297 257.755 cv
45.0269 258.603 44.832 259.499 44.8672 260.375 cv
44.8672 260.382 li
44.8672 260.569 44.8877 260.757 44.9155 260.944 cv
44.9155 260.952 li
44.9644 261.327 45.0615 261.688 45.1934 262.05 cv
45.1934 262.063 li
45.8677 263.877 47.5146 265.184 49.2935 265.309 cv
50.8989 265.413 52.3164 264.788 53.1782 263.606 cv
54.04 262.376 54.0469 260.882 53.1851 259.701 cv
52.6572 258.985 51.9067 258.846 51.5034 258.825 cv
50.7739 258.79 50.0513 259.075 49.5786 259.597 cv
49.4463 259.791 li
49.7451 259.521 50.1553 259.374 50.5864 259.416 cv
51.1074 259.465 51.5659 259.715 51.8789 260.111 cv
52.4346 260.806 52.3164 261.653 52.2681 262.063 cv
52.2681 262.07 li
52.1982 262.96 51.4897 263.696 50.5376 263.856 cv
50.5029 263.863 li
48.9741 264.079 47.5078 263.37 46.8477 262.092 cv
46.4585 261.39 46.3057 260.591 46.4165 259.771 cv
46.5137 258.979 46.8545 258.241 47.3828 257.637 cv
47.3896 257.63 li
48.4668 256.441 50.0161 255.803 51.6426 255.886 cv
53.2129 255.962 54.6377 256.713 55.5547 257.956 cv
55.562 257.956 li
57.1738 260.159 57.1738 263.051 55.5757 265.315 cv
55.562 265.33 li
55.0962 265.976 54.5264 266.525 53.8872 266.963 cv
52.5391 267.894 50.8643 268.359 49.106 268.248 cv
49.0991 268.248 li
48.272 268.192 47.4658 267.991 46.7085 267.65 cv
46.7017 267.65 li
46.0972 267.394 45.5273 267.046 44.9922 266.615 cv
43.8315 265.691 42.9492 264.468 42.4346 263.085 cv
42.3931 262.974 42.3516 262.862 42.3164 262.752 cv
42.3096 262.737 li
42.1499 262.224 42.0317 261.702 41.9761 261.174 cv
41.9692 261.015 li
41.9624 260.903 41.9482 260.785 41.9277 260.667 cv
41.9204 260.576 li
41.8579 259.207 42.1431 257.811 42.7754 256.49 cv
42.8936 256.24 43.0254 255.997 43.1646 255.761 cv
44.019 254.315 45.249 253.134 46.7017 252.362 cv
46.7085 252.362 li
47.1255 252.133 47.5635 251.945 48.0151 251.8 cv
49.9053 251.153 51.9761 251.104 53.8872 251.675 cv
54.0469 251.716 54.2065 251.765 54.3594 251.82 cv
56.4375 252.536 58.1816 253.898 59.4116 255.761 cv
59.4326 255.788 li
60.3774 257.22 60.9473 258.812 61.1143 260.465 cv
61.1348 260.618 61.1489 260.764 61.1558 260.917 cv
61.1699 261.133 61.1768 261.354 61.1768 261.57 cv
cp
f
77.4238 261.57 mo
77.4033 261.82 li
77.4033 262.634 76.75 263.286 75.937 263.286 cv
75.1309 263.286 74.4707 262.634 74.4707 261.82 cv
74.4775 261.577 li
74.4775 260.111 74.0464 258.673 73.2129 257.407 cv
71.4614 254.732 68.1675 253.571 65.2002 254.586 cv
65.1934 254.586 li
63.6714 255.094 62.3926 256.247 61.6772 257.755 cv
61.2534 258.638 61.0654 259.562 61.1143 260.465 cv
61.1143 260.618 61.1279 260.771 61.1558 260.917 cv
61.1978 261.306 61.2949 261.682 61.4341 262.05 cv
61.4409 262.063 li
62.1147 263.877 63.7617 265.184 65.541 265.309 cv
67.146 265.413 68.5566 264.788 69.4185 263.606 cv
70.2871 262.376 70.2939 260.882 69.4326 259.701 cv
68.8975 258.985 68.147 258.846 67.7437 258.825 cv
67.0142 258.79 66.2983 259.075 65.8257 259.597 cv
65.6938 259.791 li
65.9927 259.521 66.3955 259.374 66.8262 259.416 cv
67.3477 259.465 67.813 259.715 68.126 260.111 cv
68.6748 260.806 68.5635 261.653 68.5083 262.063 cv
68.5083 262.07 li
68.4458 262.96 67.7368 263.696 66.7778 263.856 cv
66.7432 263.863 li
65.2144 264.079 63.7549 263.37 63.0947 262.092 cv
62.7056 261.39 62.5527 260.591 62.6567 259.771 cv
62.7612 258.979 63.0947 258.241 63.6299 257.637 cv
63.6367 257.63 li
64.707 256.441 66.2568 255.803 67.8896 255.886 cv
68.6748 255.928 69.4253 256.129 70.0928 256.483 cv
70.7598 256.838 71.3433 257.331 71.8022 257.956 cv
73.4141 260.159 73.4214 263.051 71.8159 265.315 cv
71.8091 265.33 li
71.3433 265.969 70.7803 266.518 70.1343 266.963 cv
68.7861 267.894 67.1113 268.359 65.3462 268.248 cv
65.3394 268.248 li
64.5195 268.192 63.7061 267.991 62.9487 267.65 cv
62.3442 267.387 61.7676 267.039 61.2324 266.615 cv
60.0786 265.691 59.1963 264.468 58.6821 263.085 cv
58.6401 262.974 58.5986 262.862 58.564 262.752 cv
58.5571 262.737 li
58.3901 262.224 58.2788 261.695 58.2231 261.167 cv
58.2163 261 58.2026 260.834 58.1748 260.674 cv
58.168 260.576 li
58.105 259.2 58.3901 257.804 59.0156 256.49 cv
59.1338 256.24 59.2656 255.997 59.4116 255.761 cv
60.2593 254.309 61.4966 253.127 62.9487 252.362 cv
63.3657 252.133 63.8037 251.945 64.2554 251.8 cv
66.1455 251.153 68.2163 251.104 70.1343 251.675 cv
70.2939 251.716 70.4468 251.765 70.6069 251.82 cv
72.6914 252.543 74.4497 253.912 75.6729 255.788 cv
76.8262 257.54 77.4238 259.527 77.4238 261.57 cv
cp
f
28.689 276.858 mo
28.6753 277.108 li
28.6753 277.922 28.0151 278.575 27.209 278.575 cv
26.7505 278.575 26.3472 278.366 26.0762 278.04 cv
26.0693 278.025 li
25.9028 277.512 25.7915 276.983 25.7358 276.455 cv
25.729 276.288 25.7148 276.122 25.687 275.962 cv
25.6802 275.864 li
25.5273 274.746 25.1245 273.669 24.4849 272.696 cv
24.478 272.696 li
22.7339 270.021 19.4399 268.86 16.4727 269.874 cv
16.4585 269.874 li
14.9438 270.382 13.6582 271.535 12.9424 273.043 cv
12.2754 274.447 12.1919 275.976 12.7061 277.338 cv
12.7061 277.352 li
13.3804 279.166 15.0273 280.472 16.8062 280.597 cv
18.4116 280.701 19.8291 280.076 20.6909 278.895 cv
21.5522 277.664 21.5596 276.171 20.6978 274.989 cv
20.1694 274.273 19.4189 274.135 19.0161 274.113 cv
18.2861 274.079 17.5635 274.363 17.0913 274.885 cv
16.959 275.079 li
17.2578 274.809 17.668 274.662 18.0986 274.704 cv
18.6201 274.753 19.0786 275.003 19.3911 275.399 cv
19.9473 276.094 19.8291 276.941 19.7803 277.352 cv
19.7803 277.358 li
19.7109 278.248 19.002 278.985 18.0498 279.145 cv
18.0151 279.151 li
16.4863 279.367 15.02 278.658 14.3599 277.38 cv
13.9707 276.678 13.8179 275.879 13.9292 275.059 cv
14.0264 274.267 14.3672 273.529 14.895 272.925 cv
14.9023 272.918 li
15.979 271.729 17.5288 271.091 19.1548 271.174 cv
20.7256 271.25 22.1499 272.001 23.0674 273.245 cv
23.0742 273.245 li
24.6865 275.447 24.6865 278.339 23.0884 280.604 cv
23.0742 280.618 li
21.6289 282.612 19.2173 283.703 16.6187 283.536 cv
16.6118 283.536 li
15.1313 283.433 13.7139 282.869 12.5044 281.903 cv
11.3442 280.979 10.4614 279.756 9.94727 278.373 cv
9.14795 276.254 9.26611 273.912 10.2876 271.778 cv
11.1357 270 12.5322 268.547 14.2212 267.65 cv
14.6382 267.421 15.0757 267.233 15.5273 267.088 cv
17.4175 266.441 19.4883 266.393 21.3994 266.963 cv
21.5596 267.005 21.7192 267.053 21.8721 267.108 cv
23.9497 267.824 25.6943 269.187 26.9243 271.049 cv
26.9448 271.077 li
27.8901 272.508 28.46 274.1 28.6265 275.754 cv
28.6475 275.906 28.6616 276.052 28.6685 276.205 cv
28.6821 276.421 28.689 276.643 28.689 276.858 cv
cp
f
44.9365 276.858 mo
44.9155 277.108 li
44.9155 277.922 44.2622 278.575 43.4492 278.575 cv
42.9976 278.575 42.5874 278.366 42.3164 278.04 cv
42.3096 278.025 li
42.1499 277.519 42.0317 276.997 41.9761 276.477 cv
41.9761 276.462 li
41.9692 276.296 41.9551 276.122 41.9277 275.955 cv
41.9204 275.864 li
41.7744 274.746 41.3716 273.669 40.7251 272.696 cv
38.9741 270.021 35.6802 268.86 32.7129 269.874 cv
32.7061 269.874 li
31.1841 270.382 29.9053 271.535 29.1895 273.043 cv
28.7656 273.926 28.5781 274.85 28.6265 275.754 cv
28.6265 275.906 28.6406 276.06 28.6685 276.205 cv
28.71 276.595 28.8076 276.97 28.9463 277.338 cv
28.9531 277.352 li
29.6274 279.166 31.2744 280.472 33.0532 280.597 cv
34.6587 280.701 36.0693 280.076 36.9312 278.895 cv
37.7998 277.664 37.8066 276.171 36.9448 274.989 cv
36.4097 274.273 35.6592 274.135 35.2563 274.113 cv
34.5264 274.079 33.811 274.363 33.3384 274.885 cv
33.2061 275.079 li
33.5049 274.809 33.9082 274.662 34.3389 274.704 cv
34.8599 274.753 35.3257 275.003 35.6382 275.399 cv
36.1875 276.094 36.0762 276.941 36.0205 277.352 cv
36.0205 277.358 li
35.958 278.248 35.2495 278.985 34.2905 279.145 cv
34.2554 279.151 li
32.7266 279.367 31.2676 278.658 30.6074 277.38 cv
30.2183 276.678 30.0654 275.879 30.1694 275.059 cv
30.2739 274.267 30.6074 273.529 31.1421 272.925 cv
31.1494 272.918 li
32.2192 271.729 33.769 271.091 35.4023 271.174 cv
36.1875 271.216 36.938 271.417 37.605 271.771 cv
38.272 272.126 38.856 272.619 39.3145 273.245 cv
40.9268 275.447 40.9336 278.339 39.3286 280.604 cv
39.3213 280.618 li
37.876 282.612 35.458 283.703 32.8589 283.536 cv
32.8516 283.536 li
31.3784 283.433 29.9541 282.869 28.7446 281.903 cv
27.5913 280.979 26.7085 279.756 26.1943 278.373 cv
26.1528 278.262 26.1113 278.151 26.0762 278.04 cv
26.0693 278.025 li
25.9028 277.512 25.7915 276.983 25.7358 276.455 cv
25.729 276.288 25.7148 276.122 25.687 275.962 cv
25.6802 275.864 li
25.6177 274.488 25.9028 273.092 26.5278 271.778 cv
26.646 271.528 26.7783 271.285 26.9243 271.049 cv
27.772 269.604 29.002 268.422 30.4546 267.65 cv
30.4614 267.65 li
30.8784 267.421 31.3159 267.233 31.7676 267.088 cv
33.6577 266.441 35.729 266.393 37.647 266.963 cv
37.8066 267.005 37.9595 267.053 38.1191 267.108 cv
40.1904 267.824 41.9414 269.187 43.1646 271.049 cv
43.1855 271.077 li
44.1167 272.487 44.6792 274.044 44.8672 275.67 cv
44.8672 275.857 44.8877 276.045 44.9155 276.233 cv
44.9297 276.441 44.9365 276.65 44.9365 276.858 cv
cp
f
61.1768 276.858 mo
61.1631 277.108 li
61.1631 277.922 60.5029 278.575 59.6968 278.575 cv
59.2378 278.575 58.835 278.366 58.564 278.04 cv
58.5571 278.025 li
58.397 277.512 58.2788 276.997 58.2231 276.477 cv
58.2231 276.455 li
58.2163 276.288 58.2026 276.129 58.1748 275.969 cv
58.168 275.864 li
58.0146 274.746 57.6118 273.669 56.9727 272.696 cv
56.9653 272.696 li
55.2212 270.021 51.9272 268.86 48.96 269.874 cv
48.9463 269.874 li
47.4312 270.382 46.1455 271.535 45.4297 273.043 cv
45.0269 273.891 44.832 274.795 44.8672 275.67 cv
44.8672 275.857 44.8877 276.045 44.9155 276.233 cv
44.9644 276.608 45.0615 276.977 45.1934 277.338 cv
45.1934 277.352 li
45.8677 279.166 47.5146 280.472 49.2935 280.597 cv
50.8989 280.701 52.3164 280.076 53.1782 278.895 cv
54.04 277.664 54.0469 276.171 53.1851 274.989 cv
52.6572 274.273 51.9067 274.135 51.5034 274.113 cv
50.7739 274.079 50.0513 274.363 49.5786 274.885 cv
49.4463 275.079 li
49.7451 274.809 50.1553 274.662 50.5864 274.704 cv
51.1074 274.753 51.5659 275.003 51.8789 275.399 cv
52.4346 276.094 52.3164 276.941 52.2681 277.352 cv
52.2681 277.358 li
52.1982 278.248 51.4897 278.985 50.5376 279.145 cv
50.5029 279.151 li
48.9741 279.367 47.5078 278.658 46.8477 277.38 cv
46.4585 276.678 46.3057 275.879 46.4165 275.059 cv
46.5137 274.267 46.8545 273.529 47.3828 272.925 cv
47.3896 272.918 li
48.4668 271.729 50.0161 271.091 51.6426 271.174 cv
53.2129 271.25 54.6377 272.001 55.5547 273.245 cv
55.562 273.245 li
57.1738 275.447 57.1738 278.339 55.5757 280.604 cv
55.562 280.618 li
54.1162 282.612 51.7051 283.703 49.106 283.536 cv
49.0991 283.536 li
47.6191 283.433 46.2012 282.869 44.9922 281.903 cv
43.8315 280.979 42.9492 279.756 42.4346 278.373 cv
42.3931 278.262 42.3516 278.151 42.3164 278.04 cv
42.3096 278.025 li
42.1499 277.519 42.0317 276.997 41.9761 276.477 cv
41.9761 276.462 li
41.9692 276.296 41.9551 276.122 41.9277 275.955 cv
41.9204 275.864 li
41.8579 274.496 42.1431 273.099 42.7754 271.778 cv
42.8936 271.528 43.0254 271.285 43.1646 271.049 cv
44.019 269.604 45.249 268.422 46.7017 267.65 cv
46.7085 267.65 li
47.1255 267.421 47.5635 267.233 48.0151 267.088 cv
49.9053 266.441 51.9761 266.393 53.8872 266.963 cv
54.0469 267.005 54.2065 267.053 54.3594 267.108 cv
56.4375 267.824 58.1816 269.187 59.4116 271.049 cv
59.4326 271.077 li
60.3706 272.501 60.9404 274.079 61.1074 275.726 cv
61.1143 275.754 li
61.1348 275.906 61.1489 276.052 61.1558 276.205 cv
61.1558 276.233 li
61.1699 276.441 61.1768 276.65 61.1768 276.858 cv
cp
f
77.4238 276.858 mo
77.4033 277.108 li
77.4033 277.922 76.75 278.575 75.937 278.575 cv
75.1309 278.575 74.4707 277.922 74.4707 277.108 cv
74.4775 276.865 li
74.4775 275.399 74.0464 273.961 73.2129 272.696 cv
71.4614 270.021 68.1675 268.86 65.2002 269.874 cv
65.1934 269.874 li
63.6714 270.382 62.3926 271.535 61.6772 273.043 cv
61.2603 273.912 61.0654 274.829 61.1074 275.726 cv
61.1143 275.754 li
61.1143 275.906 61.1279 276.06 61.1558 276.205 cv
61.1558 276.233 li
61.2046 276.608 61.3018 276.977 61.4341 277.338 cv
61.4409 277.352 li
62.1147 279.166 63.7617 280.472 65.541 280.597 cv
67.146 280.701 68.5566 280.076 69.4185 278.895 cv
70.2871 277.664 70.2939 276.171 69.4326 274.989 cv
68.8975 274.273 68.147 274.135 67.7437 274.113 cv
67.0142 274.079 66.2983 274.363 65.8257 274.885 cv
65.6938 275.079 li
65.9927 274.809 66.3955 274.662 66.8262 274.704 cv
67.3477 274.753 67.813 275.003 68.126 275.399 cv
68.6748 276.094 68.5635 276.941 68.5083 277.352 cv
68.5083 277.358 li
68.4458 278.248 67.7368 278.985 66.7778 279.145 cv
66.7432 279.151 li
65.2144 279.367 63.7549 278.658 63.0947 277.38 cv
62.7056 276.678 62.5527 275.879 62.6567 275.059 cv
62.7612 274.267 63.0947 273.529 63.6299 272.925 cv
63.6367 272.918 li
64.707 271.729 66.2568 271.091 67.8896 271.174 cv
68.6748 271.216 69.4253 271.417 70.0928 271.771 cv
70.7598 272.126 71.3433 272.619 71.8022 273.245 cv
73.4141 275.447 73.4214 278.339 71.8159 280.604 cv
71.8091 280.618 li
70.3638 282.612 67.9453 283.703 65.3462 283.536 cv
65.3394 283.536 li
63.8662 283.433 62.4414 282.869 61.2324 281.903 cv
60.0786 280.979 59.1963 279.756 58.6821 278.373 cv
58.6401 278.262 58.5986 278.151 58.564 278.04 cv
58.5571 278.025 li
58.397 277.512 58.2788 276.997 58.2231 276.477 cv
58.2231 276.455 li
58.2163 276.288 58.2026 276.129 58.1748 275.969 cv
58.168 275.864 li
58.105 274.488 58.3901 273.092 59.0156 271.778 cv
59.1338 271.528 59.2656 271.285 59.4116 271.049 cv
60.2593 269.597 61.4966 268.415 62.9487 267.65 cv
63.3657 267.421 63.8037 267.233 64.2554 267.088 cv
66.1455 266.441 68.2163 266.393 70.1343 266.963 cv
70.2939 267.005 70.4468 267.053 70.6069 267.108 cv
72.6914 267.831 74.4497 269.2 75.6729 271.077 cv
76.8262 272.828 77.4238 274.815 77.4238 276.858 cv
cp
f
397.316 124.907 mo
395.783 120.557 392.952 116.826 389.131 114.117 cv
389.119 114.108 li
386.621 112.363 383.968 111.156 381.236 110.522 cv
379.704 110.166 378.138 109.988 376.549 109.988 cv
375.245 109.988 373.927 110.108 372.603 110.348 cv
370.514 110.72 368.493 111.412 366.624 112.386 cv
366.622 112.386 li
366.532 112.438 li
366.116 112.657 365.71 112.893 365.31 113.141 cv
345.879 124.314 li
350.504 124.314 li
350.371 124.423 li
346.932 127.585 342.884 129.566 341.089 134.24 cv
339.077 139.478 339.699 146.769 343.09 151.576 cv
341.111 151.679 li
320.368 163.607 li
367.037 164.599 li
386.012 153.688 li
386.367 153.493 386.729 153.311 387.077 153.097 cv
387.086 153.092 li
387.289 152.953 li
387.779 152.671 li
387.745 152.641 li
392.928 149.211 396.44 144.285 397.892 138.315 cv
399.013 133.791 398.814 129.154 397.316 124.907 cv
1 .886275 .721569 rgb
f
378.193 135.878 mo
376.66 131.527 373.829 127.796 370.008 125.087 cv
369.996 125.079 li
367.497 123.333 364.845 122.126 362.112 121.493 cv
360.581 121.137 359.014 120.959 357.426 120.959 cv
356.122 120.959 354.804 121.079 353.479 121.319 cv
350.138 121.914 346.97 123.328 344.317 125.408 cv
341.707 127.455 339.573 130.162 338.145 133.237 cv
337.027 135.627 336.418 138.206 336.334 140.902 cv
336.253 143.498 336.66 146.063 337.546 148.526 cv
338.407 150.921 339.673 153.083 341.308 154.952 cv
343.025 156.914 345.073 158.46 347.397 159.549 cv
350.938 161.199 354.996 161.702 358.821 160.965 cv
362.806 160.199 366.301 158.198 368.932 155.178 cv
371.306 152.443 372.761 149.114 373.14 145.551 cv
373.522 141.956 372.779 138.385 370.993 135.225 cv
368.829 131.392 365.151 128.605 360.902 127.581 cv
359.704 127.292 358.499 127.149 357.305 127.149 cv
354.374 127.149 351.512 128.01 348.999 129.682 cv
346.302 131.46 344.326 134 343.284 137.029 cv
342.264 139.995 342.254 143.261 343.256 146.226 cv
344.348 149.521 346.807 152.289 350.003 153.82 cv
353.074 155.292 356.443 155.466 359.489 154.309 cv
361.481 153.564 363.235 152.285 364.563 150.608 cv
365.951 148.854 366.764 146.795 366.91 144.655 cv
366.91 144.644 li
367.149 140.877 365.58 137.378 362.714 135.284 cv
362.693 135.27 li
359.435 132.947 355.283 132.955 352.116 135.29 cv
352.108 135.295 li
350.328 136.622 349.243 138.688 349.133 140.962 cv
349.019 143.324 349.935 145.572 351.646 147.128 cv
351.658 147.139 li
352.518 147.909 353.577 148.395 354.721 148.544 cv
355.897 148.697 357.049 148.479 358.057 147.913 cv
359.896 146.955 360.917 144.838 360.603 142.622 cv
360.596 142.573 li
360.366 141.185 359.304 140.16 358.032 140.066 cv
358.021 140.064 li
357.434 139.985 356.212 139.822 355.209 140.623 cv
354.639 141.077 354.284 141.743 354.209 142.498 cv
354.146 143.124 354.36 143.715 354.75 144.147 cv
354.653 144.094 354.56 144.03 354.477 143.955 cv
353.727 143.27 353.311 142.229 353.361 141.171 cv
353.39 140.589 353.591 139.499 354.621 138.729 cv
356.316 137.482 358.467 137.489 360.238 138.746 cv
361.94 139.994 362.832 142.042 362.685 144.368 cv
362.506 146.946 360.63 149.333 358.015 150.31 cv
358.002 150.314 li
356.041 151.061 353.846 150.938 351.821 149.967 cv
349.657 148.931 347.999 147.072 347.271 144.87 cv
347.266 144.855 li
345.81 140.555 347.477 135.782 351.319 133.25 cv
351.328 133.245 li
353.878 131.547 356.928 131.009 359.916 131.73 cv
363.03 132.481 365.727 134.524 367.313 137.336 cv
370.064 142.202 369.449 148.102 365.747 152.366 cv
361.723 156.986 354.908 158.347 349.179 155.678 cv
345.643 154.022 342.926 150.966 341.526 147.073 cv
340.098 143.1 340.262 138.719 341.976 135.056 cv
341.978 135.05 li
344.34 129.957 348.802 126.483 354.219 125.52 cv
354.225 125.519 li
358.949 124.663 363.441 125.693 367.577 128.581 cv
373.853 133.032 376.565 140.571 374.659 148.257 cv
374.656 148.268 li
373.415 153.381 370.428 157.742 365.75 160.425 cv
360.481 163.447 353.368 163.408 351.862 163.369 cv
351.675 163.364 351.574 163.359 351.575 163.36 cv
321.337 163.36 li
320.173 163.36 319.228 164.311 319.228 165.485 cv
319.228 165.528 li
319.228 166.702 320.173 167.653 321.337 167.653 cv
353.698 167.653 li
353.821 167.653 353.939 167.637 354.056 167.617 cv
356.09 167.576 358.706 167.443 359.955 167.197 cv
362.782 166.64 365.474 165.587 367.954 164.068 cv
367.963 164.063 li
373.519 160.622 377.255 155.513 378.768 149.286 cv
379.89 144.761 379.69 140.125 378.193 135.878 cv
.811765 .717647 .584314 rgb
f
gsave
353.7 167.653 mo
353.701 167.653 353.703 167.653 353.704 167.653 cv
353.703 167.653 353.701 167.653 353.7 167.653 cv
358.704 167.37 mo
359.194 167.32 359.623 167.262 359.955 167.197 cv
360.278 167.133 360.599 167.063 360.918 166.987 cv
360.599 167.065 360.277 167.137 359.952 167.2 cv
359.62 167.264 359.192 167.321 358.704 167.37 cv
367.732 164.202 mo
367.767 164.181 367.802 164.16 367.837 164.139 cv
381.491 156.287 li
367.732 164.202 li
386.62 153.36 mo
386.774 153.276 386.927 153.189 387.077 153.097 cv
387.078 153.097 li
387.073 153.102 li
386.924 153.192 386.772 153.277 386.62 153.36 cv
387.75 152.646 mo
387.745 152.641 li
387.745 152.641 387.745 152.641 387.746 152.641 cv
387.75 152.646 li
398.593 131.672 mo
398.51 129.36 398.084 127.082 397.316 124.907 cv
397.167 124.482 397.005 124.064 396.83 123.651 cv
397.005 124.062 397.167 124.48 397.316 124.904 cv
398.084 127.081 398.511 129.359 398.593 131.672 cv
clp
353.7 123.651 mo
398.593 123.651 li
398.593 167.653 li
353.7 167.653 li
cp
.909635 .909635 .908835 rgb
f
grestore
367.837 164.139 mo
367.876 164.115 367.915 164.092 367.954 164.068 cv
367.963 164.063 li
373.519 160.622 377.255 155.513 378.768 149.286 cv
379.494 146.359 379.667 143.385 379.293 140.5 cv
386.046 133.159 390.701 124.843 391.61 116.164 cv
393.852 118.283 395.63 120.816 396.83 123.651 cv
397.005 124.064 397.167 124.482 397.316 124.907 cv
398.084 127.082 398.51 129.36 398.593 131.672 cv
398.671 133.874 398.436 136.108 397.886 138.318 cv
396.437 144.28 392.929 149.214 387.743 152.638 cv
387.746 152.641 li
387.745 152.641 387.745 152.641 387.745 152.641 cv
387.75 152.646 li
387.772 152.668 li
387.283 152.951 li
387.083 153.091 li
387.078 153.097 li
387.077 153.097 li
386.927 153.189 386.774 153.276 386.62 153.36 cv
386.418 153.47 386.214 153.576 386.014 153.685 cv
381.491 156.287 li
367.837 164.139 li
352.579 163.377 mo
352.275 163.377 352.033 163.373 351.862 163.369 cv
351.692 163.364 351.593 163.36 351.577 163.36 cv
351.576 163.36 351.575 163.36 351.575 163.36 cv
344.513 163.36 li
346.596 162.576 348.68 161.702 350.765 160.737 cv
351.886 161.016 353.032 161.191 354.184 161.261 cv
354.57 161.285 354.957 161.297 355.344 161.297 cv
356.511 161.297 357.677 161.188 358.823 160.966 cv
360.229 160.696 361.575 160.271 362.843 159.701 cv
365.167 158.658 367.23 157.131 368.932 155.178 cv
371.078 152.706 372.473 149.748 373.001 146.569 cv
373.758 145.917 374.495 145.264 375.212 144.592 cv
375.216 144.588 375.22 144.585 375.224 144.581 cv
375.152 145.794 374.965 147.024 374.659 148.257 cv
374.656 148.268 li
373.415 153.381 370.428 157.742 365.75 160.425 cv
361.078 163.105 354.956 163.377 352.579 163.377 cv
.909804 .807843 .658823 rgb
f
353.697 167.653 mo
328.045 167.653 li
333.222 166.988 338.838 165.508 344.504 163.363 cv
344.507 163.362 344.51 163.361 344.513 163.36 cv
351.575 163.36 li
351.575 163.36 351.576 163.36 351.577 163.36 cv
351.593 163.36 351.692 163.364 351.862 163.369 cv
352.033 163.373 352.275 163.377 352.579 163.377 cv
354.956 163.377 361.078 163.105 365.75 160.425 cv
370.428 157.742 373.415 153.381 374.656 148.268 cv
374.659 148.257 li
374.965 147.024 375.152 145.794 375.224 144.581 cv
376.649 143.265 378.013 141.899 379.289 140.503 cv
379.29 140.502 379.291 140.501 379.293 140.5 cv
379.667 143.385 379.494 146.359 378.768 149.286 cv
377.255 155.513 373.519 160.622 367.963 164.063 cv
367.954 164.068 li
367.915 164.092 367.876 164.115 367.837 164.139 cv
367.802 164.16 367.767 164.181 367.732 164.202 cv
367.037 164.602 li
366.998 164.602 li
365.608 165.367 364.17 165.992 362.681 166.485 cv
362.381 166.576 362.081 166.676 361.781 166.757 cv
361.496 166.838 361.208 166.915 360.918 166.987 cv
360.599 167.063 360.278 167.133 359.955 167.197 cv
359.623 167.262 359.194 167.32 358.704 167.37 cv
357.354 167.505 355.546 167.583 354.057 167.613 cv
353.939 167.632 353.822 167.653 353.704 167.653 cv
353.703 167.653 353.701 167.653 353.7 167.653 cv
353.699 167.653 353.698 167.653 353.697 167.653 cv
354.184 161.261 mo
353.032 161.191 351.886 161.016 350.765 160.737 cv
350.766 160.736 350.768 160.736 350.77 160.735 cv
351.889 161.013 353.034 161.19 354.184 161.261 cv
362.843 159.701 mo
365.164 158.658 367.227 157.13 368.926 155.176 cv
371.074 152.709 372.464 149.748 372.993 146.576 cv
372.996 146.574 372.998 146.572 373.001 146.569 cv
372.473 149.748 371.078 152.706 368.932 155.178 cv
367.23 157.131 365.167 158.658 362.843 159.701 cv
.741176 .654902 .537255 rgb
f
104.402 278.053 mo
103.843 278.053 103.287 277.819 102.891 277.364 cv
102.167 276.53 102.256 275.267 103.09 274.543 cv
106.775 271.344 111.49 269.505 116.366 269.366 cv
116.886 269.351 117.407 269.356 117.93 269.36 cv
119.257 269.376 120.515 269.385 121.576 269.036 cv
122.624 268.69 123.472 267.728 123.319 267.057 cv
123.215 266.596 122.692 266.06 122.138 265.492 cv
121.575 264.915 120.936 264.26 120.453 263.42 cv
119.615 261.961 119.433 260.192 119.939 258.442 cv
120.554 256.316 122.095 254.427 124.061 253.387 cv
127.083 251.788 130.506 251.927 133.755 252.311 cv
134.852 252.442 135.636 253.437 135.505 254.534 cv
135.375 255.631 134.38 256.406 133.283 256.284 cv
130.678 255.975 127.985 255.837 125.932 256.922 cv
124.936 257.449 124.091 258.482 123.781 259.554 cv
123.639 260.048 123.547 260.774 123.922 261.428 cv
124.152 261.829 124.564 262.251 125.001 262.698 cv
125.832 263.551 126.867 264.61 127.221 266.172 cv
127.909 269.211 125.527 271.946 122.826 272.835 cv
121.139 273.391 119.413 273.374 117.893 273.36 cv
117.419 273.356 116.947 273.353 116.479 273.364 cv
112.583 273.476 108.658 275.006 105.712 277.563 cv
105.334 277.892 104.867 278.053 104.402 278.053 cv
.819608 .27451 .0941176 rgb
f
132.554 276.966 mo
165.116 206.039 li
166.646 206.738 li
134.084 277.666 li
133.893 278.084 131.846 281.666 131.427 281.476 cv
131.412 281.468 li
130.994 281.277 132.362 277.385 132.554 276.966 cv
.615686 .615686 .611765 rgb
f
164.506 209.397 mo
163.103 208.757 162.485 207.099 163.126 205.695 cv
163.768 204.292 165.425 203.675 166.829 204.316 cv
168.232 204.957 168.85 206.615 168.208 208.019 cv
167.567 209.422 165.91 210.039 164.506 209.397 cv
cp
.976471 .698039 .2 rgb
f
169.185 248.26 mo
169.185 261.143 158.741 271.588 145.857 271.588 cv
132.974 271.588 122.529 261.143 122.529 248.26 cv
122.529 235.376 132.974 224.932 145.857 224.932 cv
158.741 224.932 169.185 235.376 169.185 248.26 cv
.913725 .305882 .105882 rgb
f
145.887 271.588 mo
146.508 271.587 147.121 271.555 147.73 271.506 cv
147.73 264.954 li
148.121 264.85 148.511 264.736 148.895 264.613 cv
148.895 271.385 li
150.343 271.196 151.749 270.876 153.101 270.436 cv
153.101 262.828 li
153.496 262.616 153.885 262.393 154.267 262.16 cv
154.267 270.019 li
155.748 269.446 157.155 268.727 158.473 267.878 cv
158.473 258.939 li
159.158 258.289 159.807 257.599 160.415 256.875 cv
165.052 261.512 li
165.878 260.317 166.595 259.042 167.189 257.7 cv
162.872 253.383 li
163.076 253.034 163.271 252.68 163.458 252.32 cv
167.67 256.532 li
168.24 255.031 168.663 253.458 168.914 251.828 cv
165.18 248.094 li
165.309 247.668 165.428 247.236 165.535 246.8 cv
169.087 250.353 li
169.148 249.662 169.185 248.966 169.185 248.26 cv
169.185 261.133 158.756 271.571 145.887 271.588 cv
159.639 257.882 mo
159.639 267.078 li
161.199 265.935 162.613 264.604 163.845 263.114 cv
163.845 262.088 li
159.639 257.882 li
.752941 .266667 .105882 rgb
f
145.813 271.588 mo
145.809 271.588 145.804 271.588 145.8 271.588 cv
145.804 271.588 145.809 271.588 145.813 271.588 cv
.822745 .822745 .821176 rgb
f
145.814 271.588 mo
145.814 271.588 145.814 271.588 145.813 271.588 cv
145.809 271.588 145.804 271.588 145.8 271.588 cv
145.799 271.588 145.798 271.588 145.798 271.588 cv
145.803 271.588 145.809 271.588 145.814 271.588 cv
.752941 .266667 .105882 rgb
f
145.768 271.588 mo
145.763 271.588 145.758 271.588 145.753 271.588 cv
145.758 271.588 145.763 271.588 145.768 271.588 cv
.822745 .822745 .821176 rgb
f
145.773 271.588 mo
145.771 271.588 145.769 271.588 145.768 271.588 cv
145.763 271.588 145.758 271.588 145.753 271.588 cv
145.752 271.588 145.751 271.588 145.75 271.588 cv
145.757 271.588 145.765 271.588 145.773 271.588 cv
.752941 .266667 .105882 rgb
f
145.717 271.587 mo
145.714 271.587 145.712 271.587 145.709 271.587 cv
145.712 271.587 145.715 271.587 145.717 271.587 cv
145.665 271.587 mo
145.661 271.587 145.657 271.587 145.654 271.587 cv
145.657 271.587 145.661 271.587 145.665 271.587 cv
145.62 271.587 mo
145.615 271.587 145.61 271.587 145.606 271.587 cv
145.611 271.587 145.615 271.587 145.62 271.587 cv
145.571 271.586 mo
145.568 271.586 145.565 271.586 145.562 271.586 cv
145.565 271.586 145.568 271.586 145.571 271.586 cv
145.516 271.585 mo
145.515 271.585 145.515 271.585 145.515 271.585 cv
145.515 271.585 145.515 271.585 145.516 271.585 cv
145.471 271.585 mo
145.467 271.585 145.464 271.585 145.46 271.585 cv
145.464 271.585 145.467 271.585 145.471 271.585 cv
145.423 271.584 mo
145.42 271.584 145.418 271.584 145.415 271.584 cv
145.418 271.584 145.42 271.584 145.423 271.584 cv
145.322 271.582 mo
145.321 271.582 145.318 271.582 145.317 271.582 cv
145.319 271.582 145.32 271.582 145.322 271.582 cv
145.276 271.581 mo
145.274 271.581 145.271 271.581 145.269 271.581 cv
145.271 271.581 145.273 271.581 145.276 271.581 cv
145.127 271.577 mo
145.126 271.577 145.126 271.577 145.125 271.577 cv
145.126 271.577 145.126 271.577 145.127 271.577 cv
.822745 .822745 .821176 rgb
f
145.738 271.588 mo
145.731 271.588 145.724 271.588 145.717 271.587 cv
145.715 271.587 145.712 271.587 145.709 271.587 cv
145.695 271.587 145.68 271.587 145.665 271.587 cv
145.661 271.587 145.657 271.587 145.654 271.587 cv
145.642 271.587 145.631 271.587 145.62 271.587 cv
145.615 271.587 145.611 271.587 145.606 271.587 cv
145.594 271.586 145.583 271.586 145.571 271.586 cv
145.568 271.586 145.565 271.586 145.562 271.586 cv
145.546 271.586 145.531 271.586 145.516 271.585 cv
145.515 271.585 145.515 271.585 145.515 271.585 cv
145.5 271.585 145.485 271.585 145.471 271.585 cv
145.467 271.585 145.464 271.585 145.46 271.585 cv
145.448 271.584 145.436 271.584 145.423 271.584 cv
145.42 271.584 145.418 271.584 145.415 271.584 cv
145.384 271.583 145.353 271.583 145.322 271.582 cv
145.32 271.582 145.319 271.582 145.317 271.582 cv
145.303 271.581 145.29 271.581 145.276 271.581 cv
145.273 271.581 145.271 271.581 145.269 271.581 cv
145.222 271.579 145.174 271.578 145.127 271.577 cv
145.126 271.577 145.126 271.577 145.125 271.577 cv
141.211 271.456 137.54 270.37 134.342 268.55 cv
135.192 269.032 136.075 269.462 136.986 269.837 cv
136.986 265.421 li
137.372 265.488 137.76 265.546 138.152 265.596 cv
138.152 270.279 li
139.502 270.751 140.907 271.107 142.358 271.325 cv
142.358 265.77 li
142.748 265.753 143.138 265.728 143.523 265.694 cv
143.523 271.471 li
144.252 271.544 144.991 271.584 145.738 271.588 cv
132.78 267.577 mo
130.143 265.787 127.892 263.471 126.177 260.78 cv
126.612 261.462 127.083 262.121 127.585 262.753 cv
128.223 262.093 li
128.563 262.302 128.908 262.504 129.259 262.698 cv
128.336 263.653 li
129.264 264.708 130.285 265.677 131.386 266.55 cv
133.363 264.503 li
133.809 264.653 134.261 264.79 134.719 264.915 cv
132.78 266.923 li
132.78 267.577 li
.752941 .266667 .105882 rgb
f
169.185 248.26 mo
169.185 248.26 li
169.185 248.249 169.185 248.239 169.185 248.228 cv
169.185 248.239 169.185 248.249 169.185 248.26 cv
169.185 248.218 mo
169.185 248.212 169.185 248.204 169.185 248.198 cv
169.185 248.196 169.185 248.195 169.185 248.193 cv
169.185 248.191 169.185 248.19 169.185 248.188 cv
169.185 248.198 169.185 248.208 169.185 248.218 cv
169.185 248.183 mo
169.185 248.172 169.185 248.162 169.185 248.15 cv
169.185 248.161 169.185 248.172 169.185 248.183 cv
169.185 248.141 mo
169.185 248.132 169.185 248.124 169.185 248.115 cv
169.185 248.124 169.185 248.132 169.185 248.141 cv
169.185 248.107 mo
169.184 248.096 169.184 248.085 169.184 248.074 cv
169.184 248.085 169.184 248.096 169.185 248.107 cv
169.184 248.066 mo
169.184 248.057 169.184 248.048 169.184 248.039 cv
169.184 248.048 169.184 248.057 169.184 248.066 cv
169.184 248.031 mo
169.184 248.02 169.184 248.009 169.184 247.998 cv
169.184 248.009 169.184 248.02 169.184 248.031 cv
169.183 247.989 mo
169.183 247.981 169.183 247.973 169.183 247.965 cv
169.183 247.973 169.183 247.981 169.183 247.989 cv
169.183 247.954 mo
169.183 247.944 169.183 247.933 169.183 247.923 cv
169.183 247.933 169.183 247.943 169.183 247.954 cv
169.182 247.913 mo
169.182 247.905 169.182 247.898 169.182 247.89 cv
169.182 247.897 169.182 247.905 169.182 247.913 cv
169.182 247.877 mo
169.182 247.869 169.182 247.858 169.181 247.849 cv
169.182 247.858 169.182 247.868 169.182 247.877 cv
169.181 247.841 mo
169.181 247.833 169.181 247.823 169.181 247.814 cv
169.181 247.823 169.181 247.832 169.181 247.841 cv
169.181 247.801 mo
169.18 247.794 169.18 247.786 169.18 247.779 cv
169.18 247.786 169.18 247.793 169.181 247.801 cv
169.18 247.766 mo
169.18 247.757 169.18 247.747 169.179 247.738 cv
169.18 247.747 169.18 247.757 169.18 247.766 cv
169.179 247.724 mo
169.179 247.718 169.179 247.711 169.179 247.705 cv
169.179 247.711 169.179 247.718 169.179 247.724 cv
169.178 247.692 mo
169.178 247.682 169.178 247.672 169.178 247.663 cv
169.178 247.672 169.178 247.682 169.178 247.692 cv
169.177 247.649 mo
169.177 247.642 169.177 247.635 169.177 247.629 cv
169.177 247.636 169.177 247.642 169.177 247.649 cv
169.176 247.616 mo
169.176 247.606 169.176 247.596 169.175 247.586 cv
169.176 247.596 169.176 247.606 169.176 247.616 cv
169.175 247.574 mo
169.175 247.567 169.175 247.56 169.175 247.554 cv
169.175 247.56 169.175 247.567 169.175 247.574 cv
169.174 247.539 mo
169.174 247.532 169.174 247.524 169.173 247.516 cv
169.174 247.524 169.174 247.532 169.174 247.539 cv
169.173 247.496 mo
169.173 247.491 169.172 247.484 169.172 247.479 cv
169.172 247.484 169.173 247.49 169.173 247.496 cv
169.172 247.463 mo
169.171 247.457 169.171 247.45 169.171 247.444 cv
169.171 247.45 169.171 247.457 169.172 247.463 cv
169.17 247.42 mo
169.17 247.415 169.17 247.409 169.17 247.404 cv
169.17 247.409 169.17 247.415 169.17 247.42 cv
169.169 247.385 mo
169.169 247.381 169.169 247.378 169.169 247.374 cv
169.169 247.378 169.169 247.382 169.169 247.385 cv
169.167 247.338 mo
169.167 247.335 169.167 247.331 169.167 247.329 cv
169.167 247.332 169.167 247.335 169.167 247.338 cv
169.166 247.308 mo
169.166 247.305 169.166 247.302 169.166 247.299 cv
169.166 247.302 169.166 247.305 169.166 247.308 cv
169.163 247.231 mo
169.163 247.229 169.163 247.226 169.162 247.224 cv
169.163 247.226 169.163 247.229 169.163 247.231 cv
169.159 247.151 mo
169.159 247.15 li
169.159 247.15 169.159 247.151 169.159 247.151 cv
.822745 .822745 .821176 rgb
f
169.185 248.224 mo
169.185 248.216 169.185 248.207 169.185 248.198 cv
169.185 248.204 169.185 248.212 169.185 248.218 cv
169.185 248.22 169.185 248.222 169.185 248.224 cv
169.185 248.193 mo
169.181 246.806 169.049 245.451 168.813 244.131 cv
166.242 241.559 li
166.249 241.318 166.252 241.077 166.252 240.835 cv
166.252 240.523 166.246 240.213 166.234 239.904 cv
168.328 241.997 li
167.753 239.93 166.9 237.977 165.812 236.184 cv
165.811 236.178 165.81 236.172 165.809 236.166 cv
167.771 239.396 168.971 243.141 169.159 247.15 cv
169.159 247.151 li
169.16 247.176 169.161 247.2 169.162 247.224 cv
169.163 247.226 169.163 247.229 169.163 247.231 cv
169.164 247.254 169.165 247.276 169.166 247.299 cv
169.166 247.302 169.166 247.305 169.166 247.308 cv
169.166 247.315 169.167 247.322 169.167 247.329 cv
169.167 247.331 169.167 247.335 169.167 247.338 cv
169.168 247.35 169.168 247.362 169.169 247.374 cv
169.169 247.378 169.169 247.381 169.169 247.385 cv
169.169 247.391 169.169 247.398 169.17 247.404 cv
169.17 247.409 169.17 247.415 169.17 247.42 cv
169.17 247.428 169.171 247.436 169.171 247.444 cv
169.171 247.45 169.171 247.457 169.172 247.463 cv
169.172 247.468 169.172 247.473 169.172 247.479 cv
169.172 247.484 169.173 247.491 169.173 247.496 cv
169.173 247.503 169.173 247.51 169.173 247.516 cv
169.174 247.524 169.174 247.532 169.174 247.539 cv
169.174 247.544 169.174 247.549 169.175 247.554 cv
169.175 247.56 169.175 247.567 169.175 247.574 cv
169.175 247.578 169.175 247.582 169.175 247.586 cv
169.176 247.596 169.176 247.606 169.176 247.616 cv
169.176 247.62 169.177 247.625 169.177 247.629 cv
169.177 247.635 169.177 247.642 169.177 247.649 cv
169.177 247.653 169.177 247.658 169.178 247.663 cv
169.178 247.672 169.178 247.682 169.178 247.692 cv
169.178 247.696 169.178 247.7 169.179 247.705 cv
169.179 247.711 169.179 247.718 169.179 247.724 cv
169.179 247.729 169.179 247.733 169.179 247.738 cv
169.18 247.747 169.18 247.757 169.18 247.766 cv
169.18 247.77 169.18 247.775 169.18 247.779 cv
169.18 247.786 169.18 247.794 169.181 247.801 cv
169.181 247.805 169.181 247.81 169.181 247.814 cv
169.181 247.823 169.181 247.833 169.181 247.841 cv
169.181 247.844 169.181 247.846 169.181 247.849 cv
169.182 247.858 169.182 247.869 169.182 247.877 cv
169.182 247.881 169.182 247.886 169.182 247.89 cv
169.182 247.898 169.182 247.905 169.182 247.913 cv
169.183 247.916 169.183 247.919 169.183 247.923 cv
169.183 247.933 169.183 247.944 169.183 247.954 cv
169.183 247.957 169.183 247.961 169.183 247.965 cv
169.183 247.973 169.183 247.981 169.183 247.989 cv
169.184 247.992 169.184 247.995 169.184 247.998 cv
169.184 248.009 169.184 248.02 169.184 248.031 cv
169.184 248.033 169.184 248.036 169.184 248.039 cv
169.184 248.048 169.184 248.057 169.184 248.066 cv
169.184 248.069 169.184 248.071 169.184 248.074 cv
169.184 248.085 169.184 248.096 169.185 248.107 cv
169.185 248.109 169.185 248.112 169.185 248.115 cv
169.185 248.124 169.185 248.132 169.185 248.141 cv
169.185 248.144 169.185 248.147 169.185 248.15 cv
169.185 248.162 169.185 248.172 169.185 248.183 cv
169.185 248.185 169.185 248.186 169.185 248.188 cv
169.185 248.19 169.185 248.191 169.185 248.193 cv
.752941 .266667 .105882 rgb
f
160.415 256.875 mo
132.605 229.064 li
133.8 228.238 135.075 227.522 136.417 226.928 cv
162.872 253.383 li
162.152 254.619 161.33 255.786 160.415 256.875 cv
f
165.052 261.512 mo
160.415 256.875 li
161.33 255.786 162.152 254.619 162.872 253.383 cv
167.189 257.7 li
166.595 259.042 165.878 260.317 165.052 261.512 cv
.623529 .235294 .105882 rgb
f
163.458 252.32 mo
137.584 226.447 li
139.085 225.877 140.659 225.454 142.289 225.203 cv
165.18 248.094 li
164.733 249.565 164.155 250.978 163.458 252.32 cv
.752941 .266667 .105882 rgb
f
167.67 256.532 mo
163.458 252.32 li
164.155 250.978 164.733 249.565 165.18 248.094 cv
168.914 251.828 li
168.663 253.458 168.24 255.031 167.67 256.532 cv
.623529 .235294 .105882 rgb
f
169.185 248.228 mo
169.185 248.227 169.185 248.227 169.185 248.226 cv
169.185 248.225 169.185 248.226 169.185 248.225 cv
169.185 248.226 169.185 248.227 169.185 248.228 cv
.822745 .822745 .821176 rgb
f
169.185 248.226 mo
169.185 248.225 169.185 248.225 169.185 248.224 cv
169.185 248.225 169.185 248.225 169.185 248.225 cv
169.185 248.226 169.185 248.225 169.185 248.226 cv
.752941 .266667 .105882 rgb
f
145.892 224.932 mo
145.88 224.932 145.869 224.932 145.857 224.932 cv
145.869 224.932 145.881 224.932 145.892 224.932 cv
.822745 .822745 .821176 rgb
f
165.535 246.8 mo
143.765 225.03 li
144.455 224.969 145.151 224.932 145.857 224.932 cv
145.857 224.932 li
145.869 224.932 145.88 224.932 145.892 224.932 cv
147.29 224.934 148.656 225.066 149.987 225.304 cv
166.242 241.559 li
166.19 243.36 165.948 245.114 165.535 246.8 cv
.752941 .266667 .105882 rgb
f
169.185 248.26 mo
169.185 248.249 169.185 248.237 169.185 248.226 cv
169.185 248.227 169.185 248.227 169.185 248.228 cv
169.185 248.239 169.185 248.249 169.185 248.26 cv
169.185 248.198 mo
169.185 248.197 169.185 248.195 169.185 248.193 cv
169.185 248.195 169.185 248.196 169.185 248.198 cv
.680246 .680246 .677416 rgb
f
169.087 250.353 mo
165.535 246.8 li
165.948 245.114 166.19 243.36 166.242 241.559 cv
168.813 244.131 li
169.049 245.451 169.181 246.806 169.185 248.193 cv
169.185 248.195 169.185 248.197 169.185 248.198 cv
169.185 248.207 169.185 248.216 169.185 248.224 cv
169.185 248.225 169.185 248.225 169.185 248.226 cv
169.185 248.237 169.185 248.249 169.185 248.26 cv
169.185 248.26 li
169.185 248.26 li
169.185 248.966 169.148 249.662 169.087 250.353 cv
.623529 .235294 .105882 rgb
f
166.234 239.904 mo
152.121 225.79 li
157.9 227.398 162.773 231.172 165.812 236.184 cv
166.041 237.396 166.186 238.637 166.234 239.904 cv
.752941 .266667 .105882 rgb
f
168.328 241.997 mo
166.234 239.904 li
166.186 238.637 166.041 237.396 165.812 236.184 cv
166.9 237.977 167.753 239.93 168.328 241.997 cv
.623529 .235294 .105882 rgb
f
133.363 264.503 mo
131.933 264.023 130.56 263.417 129.259 262.698 cv
146.575 244.765 li
149.549 247.739 li
133.363 264.503 li
.752941 .266667 .105882 rgb
f
131.386 266.55 mo
130.285 265.677 129.264 264.708 128.336 263.653 cv
129.259 262.698 li
130.56 263.417 131.933 264.023 133.363 264.503 cv
131.386 266.55 li
.623529 .235294 .105882 rgb
f
134.342 268.55 mo
133.808 268.247 133.287 267.923 132.78 267.579 cv
132.78 267.577 li
133.287 267.921 133.808 268.246 134.342 268.55 cv
136.986 265.421 mo
136.218 265.287 135.461 265.118 134.719 264.915 cv
136.986 262.566 li
136.986 265.421 li
.752941 .266667 .105882 rgb
f
136.986 269.837 mo
136.075 269.462 135.192 269.032 134.342 268.55 cv
133.808 268.246 133.287 267.921 132.78 267.577 cv
132.78 266.923 li
134.719 264.915 li
135.461 265.118 136.218 265.287 136.986 265.421 cv
136.986 269.837 li
.623529 .235294 .105882 rgb
f
141.294 265.792 mo
140.23 265.792 139.181 265.725 138.152 265.596 cv
138.152 261.359 li
142.358 257.004 li
142.358 265.77 li
142.005 265.785 141.651 265.792 141.294 265.792 cv
.752941 .266667 .105882 rgb
f
142.358 271.325 mo
140.907 271.107 139.502 270.751 138.152 270.279 cv
138.152 265.596 li
139.181 265.725 140.23 265.792 141.294 265.792 cv
141.651 265.792 142.005 265.785 142.358 265.77 cv
142.358 271.325 li
.623529 .235294 .105882 rgb
f
145.857 271.588 mo
145.845 271.588 145.833 271.588 145.82 271.588 cv
145.833 271.588 145.845 271.588 145.857 271.588 cv
145.857 271.588 li
145.868 271.588 145.877 271.588 145.887 271.588 cv
145.877 271.588 145.867 271.588 145.857 271.588 cv
.822745 .822745 .821176 rgb
f
145.857 271.588 mo
145.845 271.588 145.833 271.588 145.82 271.588 cv
145.818 271.588 145.816 271.588 145.814 271.588 cv
145.828 271.588 145.843 271.588 145.857 271.588 cv
145.798 271.588 mo
145.789 271.588 145.781 271.588 145.773 271.588 cv
145.781 271.588 145.789 271.588 145.798 271.588 cv
145.75 271.588 mo
145.746 271.588 145.742 271.588 145.738 271.588 cv
145.742 271.588 145.746 271.588 145.75 271.588 cv
143.523 265.694 mo
143.523 255.797 li
147.73 251.44 li
147.73 264.954 li
146.37 265.316 144.964 265.566 143.523 265.694 cv
.752941 .266667 .105882 rgb
f
145.857 271.588 mo
145.857 271.588 li
145.843 271.588 145.828 271.588 145.814 271.588 cv
145.809 271.588 145.803 271.588 145.798 271.588 cv
145.789 271.588 145.781 271.588 145.773 271.588 cv
145.765 271.588 145.757 271.588 145.75 271.588 cv
145.746 271.588 145.742 271.588 145.738 271.588 cv
144.991 271.584 144.252 271.544 143.523 271.471 cv
143.523 265.694 li
144.964 265.566 146.37 265.316 147.73 264.954 cv
147.73 271.506 li
147.121 271.555 146.508 271.587 145.887 271.588 cv
145.877 271.588 145.868 271.588 145.857 271.588 cv
.623529 .235294 .105882 rgb
f
148.895 264.613 mo
148.895 250.233 li
150.416 248.659 li
153.101 251.345 li
153.101 262.828 li
151.767 263.546 150.361 264.145 148.895 264.613 cv
.752941 .266667 .105882 rgb
f
148.895 271.385 mo
148.895 264.613 li
150.361 264.145 151.767 263.546 153.101 262.828 cv
153.101 270.436 li
151.749 270.876 150.343 271.196 148.895 271.385 cv
.623529 .235294 .105882 rgb
f
154.267 262.16 mo
154.267 252.51 li
158.473 256.716 li
158.473 258.939 li
157.192 260.155 155.783 261.236 154.267 262.16 cv
.752941 .266667 .105882 rgb
f
154.267 270.019 mo
154.267 262.16 li
155.783 261.236 157.192 260.155 158.473 258.939 cv
158.473 267.878 li
157.155 268.727 155.748 269.446 154.267 270.019 cv
.623529 .235294 .105882 rgb
f
159.639 267.078 mo
159.639 257.882 li
163.845 262.088 li
163.845 263.114 li
162.613 264.604 161.199 265.935 159.639 267.078 cv
f
128.223 262.093 mo
127.475 261.632 126.755 261.133 126.062 260.599 cv
126.1 260.659 126.138 260.72 126.177 260.78 cv
125.838 260.249 125.52 259.703 125.224 259.143 cv
142.776 240.966 li
145.75 243.94 li
128.223 262.093 li
.752941 .266667 .105882 rgb
f
127.585 262.753 mo
127.083 262.121 126.612 261.462 126.177 260.78 cv
126.138 260.72 126.1 260.659 126.062 260.599 cv
126.755 261.133 127.475 261.632 128.223 262.093 cv
127.585 262.753 li
.623529 .235294 .105882 rgb
f
124.676 258.033 mo
124.021 256.615 123.504 255.12 123.143 253.565 cv
138.977 237.167 li
141.952 240.142 li
124.676 258.033 li
.752941 .266667 .105882 rgb
f
122.529 248.324 mo
122.529 248.321 122.529 248.318 122.529 248.315 cv
122.529 248.318 122.529 248.321 122.529 248.324 cv
122.529 248.294 mo
122.529 248.282 122.529 248.271 122.529 248.26 cv
122.529 248.26 li
122.529 248.271 122.529 248.283 122.529 248.294 cv
.822745 .822745 .821176 rgb
f
122.863 252.177 mo
122.651 250.923 122.533 249.638 122.529 248.324 cv
122.529 248.321 122.529 248.318 122.529 248.315 cv
122.529 248.308 122.529 248.301 122.529 248.294 cv
122.529 248.283 122.529 248.271 122.529 248.26 cv
122.529 247.627 122.562 247.003 122.611 246.383 cv
135.178 233.368 li
138.153 236.343 li
122.863 252.177 li
.752941 .266667 .105882 rgb
f
122.841 244.467 mo
123.814 238.519 127.036 233.33 131.607 229.797 cv
134.354 232.544 li
122.841 244.467 li
f
144.06 263.868 mo
142.339 282.409 li
142.297 282.867 142.295 286.993 142.754 287.034 cv
142.771 287.036 li
143.229 287.078 143.973 283.02 144.015 282.562 cv
145.75 263.868 li
144.06 263.868 li
cp
.615686 .615686 .611765 rgb
f
148.743 231.619 mo
151.228 204.851 li
149.553 204.698 li
147.054 231.619 li
148.743 231.619 li
cp
f
150.09 208.069 mo
148.554 207.929 147.421 206.57 147.562 205.033 cv
147.701 203.497 149.061 202.365 150.597 202.505 cv
152.134 202.645 153.266 204.004 153.126 205.54 cv
152.986 207.077 151.627 208.209 150.09 208.069 cv
cp
.976471 .698039 .2 rgb
f
229.281 212.698 mo
226.01 212.698 li
226.01 208.031 li
229.281 208.031 li
229.281 212.698 li
cp
.698039 .698039 .698039 rgb
f
246.195 212.698 mo
242.924 212.698 li
242.924 208.031 li
246.195 208.031 li
246.195 212.698 li
cp
f
263.109 212.698 mo
259.838 212.698 li
259.838 208.031 li
263.109 208.031 li
263.109 212.698 li
cp
f
280.023 212.698 mo
276.752 212.698 li
276.752 208.031 li
280.023 208.031 li
280.023 212.698 li
cp
f
286.354 242.274 mo
219.703 242.274 li
219.703 238.453 li
286.354 238.453 li
286.354 242.274 li
cp
f
230.253 238.453 mo
224.99 238.453 li
224.99 211.527 li
230.253 211.527 li
230.253 238.453 li
.929412 .823529 .670588 rgb
f
234.345 235.171 mo
234.365 235.391 234.315 235.601 234.215 235.791 cv
234.025 236.19 233.615 236.471 233.135 236.471 cv
222.105 236.471 li
221.425 236.471 220.875 235.9 220.905 235.221 cv
220.905 235.171 li
220.985 234.161 li
221.035 233.4 li
221.115 232.331 li
221.175 231.581 li
221.255 230.511 li
221.315 229.751 li
221.396 228.69 li
221.445 227.94 li
221.525 226.86 li
221.585 226.11 li
221.665 225.041 li
221.725 224.291 li
221.805 223.211 li
221.855 222.461 li
221.935 221.391 li
221.995 220.641 li
222.075 219.571 li
222.135 218.811 li
222.215 217.751 li
222.265 217.001 li
222.345 215.921 li
222.405 215.171 li
222.445 214.631 li
222.455 214.44 222.515 214.251 222.615 214.101 cv
222.825 213.741 223.205 213.511 223.646 213.511 cv
231.595 213.511 li
232.195 213.511 232.705 213.951 232.785 214.541 cv
232.805 214.631 li
232.875 215.61 li
232.935 216.371 li
233.015 217.451 li
233.075 218.211 li
233.155 219.28 li
233.215 220.041 li
233.295 221.121 li
233.345 221.881 li
233.425 222.961 li
233.485 223.711 li
233.565 224.791 li
233.625 225.541 li
233.705 226.631 li
233.765 227.381 li
233.845 228.461 li
233.896 229.211 li
233.975 230.291 li
234.035 231.051 li
234.115 232.131 li
234.175 232.881 li
234.255 233.961 li
234.315 234.721 li
234.345 235.171 li
.976471 .698039 .2 rgb
f
247.19 238.453 mo
241.928 238.453 li
241.928 211.527 li
247.19 211.527 li
247.19 238.453 li
.929412 .823529 .670588 rgb
f
250.074 236.471 mo
239.044 236.471 li
238.342 236.471 237.788 235.873 237.84 235.173 cv
239.379 214.627 li
239.426 213.997 239.951 213.51 240.583 213.51 cv
248.535 213.51 li
249.168 213.51 249.692 213.997 249.739 214.627 cv
251.278 235.173 li
251.331 235.873 250.776 236.471 250.074 236.471 cv
.913725 .305882 .105882 rgb
f
264.129 238.453 mo
258.865 238.453 li
258.865 211.527 li
264.129 211.527 li
264.129 238.453 li
.929412 .823529 .670588 rgb
f
267.013 236.471 mo
255.982 236.471 li
255.279 236.471 254.726 235.873 254.778 235.173 cv
256.316 214.627 li
256.364 213.997 256.889 213.51 257.521 213.51 cv
265.474 213.51 li
266.105 213.51 266.631 213.997 266.678 214.627 cv
268.217 235.173 li
268.269 235.873 267.715 236.471 267.013 236.471 cv
.137255 .454902 .6 rgb
f
281.066 238.453 mo
275.804 238.453 li
275.804 211.527 li
281.066 211.527 li
281.066 238.453 li
.929412 .823529 .670588 rgb
f
283.95 236.471 mo
272.92 236.471 li
272.218 236.471 271.664 235.873 271.716 235.173 cv
273.255 214.627 li
273.302 213.997 273.827 213.51 274.459 213.51 cv
282.411 213.51 li
283.043 213.51 283.568 213.997 283.615 214.627 cv
285.154 235.173 li
285.207 235.873 284.652 236.471 283.95 236.471 cv
.584314 .756863 .121569 rgb
f
276.775 253.392 mo
276.775 284.523 li
229.281 284.523 li
229.281 253.392 li
276.775 253.392 li
cp
.976471 .698039 .2 rgb
f
276.778 258.948 mo
229.278 258.948 li
229.278 256.155 li
276.778 256.155 li
276.778 258.948 li
cp
.913725 .305882 .105882 rgb
f
276.778 263.139 mo
229.278 263.139 li
229.278 260.345 li
276.778 260.345 li
276.778 263.139 li
cp
.137255 .454902 .6 rgb
f
276.778 278.502 mo
229.278 278.502 li
229.278 275.708 li
276.778 275.708 li
276.778 278.502 li
cp
f
276.778 282.599 mo
229.278 282.599 li
229.278 279.806 li
276.778 279.806 li
276.778 282.599 li
cp
.584314 .756863 .121569 rgb
f
276.775 265.026 mo
276.775 267.507 li
271.345 270.151 li
265.237 267.172 li
259.129 270.151 li
253.021 267.172 li
246.912 270.151 li
240.805 267.172 li
234.704 270.151 li
229.281 267.507 li
229.281 265.026 li
234.704 267.671 li
240.805 264.691 li
246.912 267.671 li
253.021 264.691 li
259.129 267.671 li
265.237 264.691 li
271.345 267.671 li
276.775 265.026 li
cp
f
276.775 268.938 mo
276.775 271.418 li
271.345 274.063 li
265.237 271.083 li
259.129 274.063 li
253.021 271.083 li
246.912 274.063 li
240.805 271.083 li
234.704 274.063 li
229.281 271.418 li
229.281 268.938 li
234.704 271.582 li
240.805 268.603 li
246.912 271.582 li
253.021 268.603 li
259.129 271.582 li
265.237 268.603 li
271.345 271.582 li
276.775 268.938 li
cp
.913725 .305882 .105882 rgb
f
224.108 222.927 mo
229.281 253.502 li
230.615 253.973 li
225.444 223.396 li
224.108 222.927 li
.976471 .698039 .2 rgb
f
241.046 222.927 mo
247.235 257.17 li
248.449 256.949 li
242.26 222.706 li
241.046 222.927 li
.913725 .305882 .105882 rgb
f
258.099 261.16 mo
265.01 222.927 li
263.796 222.706 li
256.885 260.939 li
258.099 261.16 li
.137255 .454902 .6 rgb
f
280.732 222.705 mo
272.982 268.113 li
274.266 267.959 li
281.946 222.927 li
280.732 222.705 li
.584314 .756863 .121569 rgb
f
234.346 235.346 mo
234.349 235.309 234.35 235.272 234.349 235.234 cv
234.349 235.246 234.349 235.257 234.349 235.268 cv
234.349 235.294 234.348 235.32 234.346 235.346 cv
220.905 235.205 mo
220.905 235.171 li
220.943 234.7 li
220.907 235.173 li
220.906 235.183 220.906 235.194 220.905 235.205 cv
234.34 235.093 mo
234.312 234.721 li
234.315 234.721 li
234.34 235.093 li
.890196 .639216 .192157 rgb
f
234.255 233.961 mo
234.255 233.961 li
234.174 232.881 li
234.175 232.881 li
234.255 233.961 li
225.751 233.6 mo
221.035 233.4 li
221.115 232.331 li
225.732 232.525 li
225.907 233.558 li
225.855 233.573 225.803 233.587 225.751 233.6 cv
227.097 233.168 mo
226.997 232.579 li
228.307 232.634 li
227.912 232.832 227.508 233.01 227.097 233.168 cv
f
225.907 233.558 mo
225.732 232.525 li
226.997 232.579 li
227.097 233.168 li
226.707 233.317 226.31 233.448 225.907 233.558 cv
f
229.538 231.936 mo
226.869 231.823 li
226.686 230.74 li
230.946 230.92 li
230.493 231.289 230.023 231.628 229.538 231.936 cv
225.604 231.769 mo
221.175 231.581 li
221.255 230.511 li
225.421 230.687 li
225.604 231.769 li
f
226.869 231.823 mo
225.604 231.769 li
225.421 230.687 li
226.686 230.74 li
226.869 231.823 li
f
231.773 230.197 mo
226.557 229.975 li
226.375 228.898 li
232.782 229.165 li
232.458 229.526 232.122 229.87 231.773 230.197 cv
225.292 229.921 mo
221.315 229.751 li
221.396 228.69 li
225.11 228.845 li
225.292 229.921 li
f
226.557 229.975 mo
225.292 229.921 li
225.11 228.845 li
226.375 228.898 li
226.557 229.975 li
f
233.845 228.461 mo
233.843 228.461 li
233.802 227.913 li
233.669 228.093 233.533 228.269 233.394 228.442 cv
226.247 228.142 li
226.063 227.053 li
233.765 227.381 li
233.845 228.461 li
224.982 228.089 mo
221.445 227.94 li
221.525 226.86 li
224.797 226.999 li
224.982 228.089 li
f
226.247 228.142 mo
224.982 228.089 li
224.797 226.999 li
226.063 227.053 li
226.247 228.142 li
f
233.705 226.631 mo
225.935 226.297 li
225.751 225.212 li
233.625 225.541 li
233.705 226.631 li
224.669 226.243 mo
221.585 226.11 li
221.665 225.041 li
224.486 225.159 li
224.669 226.243 li
f
225.935 226.297 mo
224.669 226.243 li
224.486 225.159 li
225.751 225.212 li
225.935 226.297 li
f
233.565 224.791 mo
225.623 224.456 li
225.444 223.396 li
225.348 223.363 li
233.485 223.711 li
233.565 224.791 li
224.358 224.402 mo
221.725 224.291 li
221.805 223.211 li
224.174 223.312 li
224.358 224.402 li
f
225.623 224.456 mo
224.358 224.402 li
224.174 223.312 li
225.348 223.363 li
225.444 223.396 li
225.623 224.456 li
f
233.425 222.961 mo
221.855 222.461 li
221.935 221.391 li
233.345 221.881 li
233.425 222.961 li
f
233.295 221.121 mo
221.995 220.641 li
222.075 219.571 li
233.215 220.041 li
233.295 221.121 li
f
233.155 219.28 mo
222.135 218.811 li
222.215 217.751 li
233.075 218.211 li
233.155 219.28 li
f
233.015 217.451 mo
222.265 217.001 li
222.345 215.921 li
232.935 216.371 li
233.015 217.451 li
f
232.875 215.61 mo
222.405 215.171 li
222.445 214.631 li
222.455 214.44 222.515 214.251 222.615 214.101 cv
232.785 214.541 li
232.805 214.631 li
232.875 215.61 li
f
237.837 235.221 mo
237.837 235.221 li
237.837 235.171 li
237.893 234.469 li
237.84 235.173 li
237.839 235.189 237.838 235.205 237.837 235.221 cv
251.271 235.07 mo
251.244 234.721 li
251.247 234.721 li
251.271 235.07 li
.909635 .909635 .908835 rgb
f
251.271 235.07 mo
251.244 234.721 li
251.244 234.721 li
251.271 235.07 li
251.271 235.07 li
.831372 .286274 .105882 rgb
f
251.188 233.961 mo
251.188 233.961 li
251.107 232.881 li
251.107 232.881 li
251.188 233.961 li
.909635 .909635 .908835 rgb
f
251.188 233.961 mo
251.188 233.961 li
251.107 232.881 li
251.107 232.881 li
251.188 233.961 li
.831372 .286274 .105882 rgb
f
237.973 233.401 mo
237.967 233.4 li
238.047 232.331 li
238.053 232.331 li
237.973 233.401 li
.909635 .909635 .908835 rgb
f
242.681 233.6 mo
237.973 233.401 li
238.053 232.331 li
242.782 232.53 li
242.961 233.524 li
242.868 233.55 242.774 233.576 242.681 233.6 cv
244.143 233.123 mo
244.045 232.584 li
245.239 232.634 li
244.88 232.814 244.515 232.977 244.143 233.123 cv
.831372 .286274 .105882 rgb
f
242.961 233.524 mo
242.782 232.53 li
244.045 232.584 li
244.143 233.123 li
243.755 233.276 243.362 233.409 242.961 233.524 cv
f
238.109 231.581 mo
238.107 231.581 li
238.188 230.511 li
238.189 230.511 li
238.109 231.581 li
.909635 .909635 .908835 rgb
f
246.47 231.936 mo
243.908 231.828 li
243.713 230.744 li
247.878 230.92 li
247.425 231.289 246.955 231.628 246.47 231.936 cv
242.645 231.774 mo
238.109 231.581 li
238.189 230.511 li
242.449 230.691 li
242.645 231.774 li
.831372 .286274 .105882 rgb
f
243.908 231.828 mo
242.645 231.774 li
242.449 230.691 li
243.713 230.744 li
243.908 231.828 li
f
248.706 230.197 mo
243.574 229.978 li
243.379 228.901 li
249.715 229.165 li
249.391 229.526 249.054 229.87 248.706 230.197 cv
242.311 229.924 mo
238.247 229.751 li
238.327 228.69 li
242.116 228.848 li
242.311 229.924 li
f
243.574 229.978 mo
242.311 229.924 li
242.116 228.848 li
243.379 228.901 li
243.574 229.978 li
f
250.777 228.461 mo
250.776 228.461 li
250.695 227.381 li
250.697 227.381 li
250.777 228.461 li
238.382 227.941 mo
238.377 227.94 li
238.457 226.86 li
238.462 226.861 li
238.382 227.941 li
.909635 .909635 .908835 rgb
f
250.776 228.461 mo
250.775 228.461 li
250.734 227.913 li
250.601 228.093 250.465 228.269 250.327 228.442 cv
243.243 228.145 li
243.046 227.055 li
250.695 227.381 li
250.776 228.461 li
241.979 228.092 mo
238.382 227.941 li
238.462 226.861 li
241.782 227.002 li
241.979 228.092 li
.831372 .286274 .105882 rgb
f
243.243 228.145 mo
241.979 228.092 li
241.782 227.002 li
243.046 227.055 li
243.243 228.145 li
f
238.519 226.11 mo
238.518 226.11 li
238.598 225.041 li
238.599 225.041 li
238.519 226.11 li
250.582 225.884 mo
250.557 225.541 li
250.558 225.541 li
250.582 225.884 li
.909635 .909635 .908835 rgb
f
250.637 226.631 mo
242.909 226.299 li
242.713 225.213 li
250.557 225.541 li
250.582 225.884 li
250.637 226.631 li
241.646 226.245 mo
238.519 226.11 li
238.599 225.041 li
241.45 225.16 li
241.646 226.245 li
.831372 .286274 .105882 rgb
f
242.909 226.299 mo
241.646 226.245 li
241.45 225.16 li
242.713 225.213 li
242.909 226.299 li
f
250.497 224.791 mo
242.576 224.456 li
242.379 223.367 li
250.417 223.711 li
250.497 224.791 li
241.313 224.403 mo
238.657 224.291 li
238.737 223.211 li
241.116 223.313 li
241.313 224.403 li
f
242.576 224.456 mo
241.313 224.403 li
241.116 223.313 li
242.379 223.367 li
242.576 224.456 li
f
238.792 222.461 mo
238.787 222.461 li
238.867 221.391 li
238.872 221.391 li
238.792 222.461 li
.909635 .909635 .908835 rgb
f
250.357 222.961 mo
238.792 222.461 li
238.872 221.391 li
250.277 221.881 li
250.357 222.961 li
.831372 .286274 .105882 rgb
f
250.228 221.121 mo
250.226 221.121 li
250.145 220.041 li
250.147 220.041 li
250.228 221.121 li
238.928 220.641 mo
238.927 220.641 li
239.007 219.571 li
239.009 219.571 li
238.928 220.641 li
.909635 .909635 .908835 rgb
f
250.226 221.121 mo
238.928 220.641 li
239.009 219.571 li
250.145 220.041 li
250.226 221.121 li
.831372 .286274 .105882 rgb
f
250.087 219.28 mo
239.067 218.811 li
239.147 217.751 li
250.007 218.211 li
250.087 219.28 li
f
239.201 217.001 mo
239.197 217.001 li
239.277 215.921 li
239.282 215.921 li
239.201 217.001 li
.909635 .909635 .908835 rgb
f
249.947 217.451 mo
239.201 217.001 li
239.282 215.921 li
249.867 216.371 li
249.947 217.451 li
.831372 .286274 .105882 rgb
f
239.338 215.171 mo
239.337 215.171 li
239.377 214.631 li
239.386 214.457 239.437 214.284 239.522 214.141 cv
239.442 214.287 239.392 214.451 239.379 214.627 cv
239.338 215.171 li
.909635 .909635 .908835 rgb
f
249.808 215.61 mo
239.338 215.171 li
239.379 214.627 li
239.392 214.451 239.442 214.287 239.522 214.141 cv
239.53 214.127 239.538 214.114 239.547 214.101 cv
249.717 214.541 li
249.737 214.631 li
249.808 215.61 li
.831372 .286274 .105882 rgb
f
254.775 235.221 mo
254.775 235.221 li
254.775 235.171 li
254.831 234.476 li
254.778 235.173 li
254.777 235.189 254.776 235.205 254.776 235.221 cv
.909635 .909635 .908835 rgb
f
254.775 235.221 mo
254.775 235.221 li
254.776 235.205 254.777 235.189 254.778 235.173 cv
254.831 234.476 li
254.831 234.469 li
254.778 235.173 li
254.777 235.189 254.776 235.205 254.776 235.221 cv
.133333 .419608 .54902 rgb
f
268.202 234.98 mo
268.183 234.721 li
268.186 234.721 li
268.202 234.98 li
.909635 .909635 .908835 rgb
f
268.202 234.981 mo
268.183 234.721 li
268.183 234.721 li
268.202 234.98 li
268.202 234.981 li
.133333 .419608 .54902 rgb
f
254.911 233.401 mo
254.905 233.4 li
254.985 232.331 li
254.991 232.331 li
254.911 233.401 li
.909635 .909635 .908835 rgb
f
259.619 233.6 mo
254.911 233.401 li
254.991 232.331 li
262.003 232.626 li
261.984 232.728 li
261.224 233.094 260.434 233.387 259.619 233.6 cv
.133333 .419608 .54902 rgb
f
261.984 232.728 mo
262.003 232.626 li
262.177 232.634 li
262.113 232.666 262.049 232.697 261.984 232.728 cv
f
255.047 231.581 mo
255.045 231.581 li
255.125 230.511 li
255.127 230.511 li
255.047 231.581 li
.909635 .909635 .908835 rgb
f
263.407 231.936 mo
263.381 231.935 li
263.574 230.868 li
264.816 230.92 li
264.363 231.289 263.893 231.628 263.407 231.936 cv
262.137 231.882 mo
255.047 231.581 li
255.127 230.511 li
262.33 230.815 li
262.137 231.882 li
.133333 .419608 .54902 rgb
f
263.381 231.935 mo
262.137 231.882 li
262.33 230.815 li
263.574 230.868 li
263.381 231.935 li
f
265.644 230.197 mo
263.71 230.115 li
263.903 229.05 li
266.653 229.165 li
266.329 229.526 265.992 229.871 265.644 230.197 cv
262.466 230.062 mo
255.186 229.751 li
255.266 228.69 li
262.658 228.998 li
262.466 230.062 li
f
263.71 230.115 mo
262.466 230.062 li
262.658 228.998 li
263.903 229.05 li
263.71 230.115 li
f
267.715 228.461 mo
267.714 228.461 li
267.633 227.381 li
267.635 227.381 li
267.715 228.461 li
255.32 227.941 mo
255.315 227.94 li
255.395 226.86 li
255.401 226.861 li
255.32 227.941 li
.909635 .909635 .908835 rgb
f
267.714 228.461 mo
267.714 228.461 li
267.673 227.913 li
267.54 228.093 267.404 228.269 267.265 228.442 cv
264.037 228.307 li
264.231 227.236 li
267.633 227.381 li
267.714 228.461 li
262.793 228.254 mo
255.32 227.941 li
255.401 226.861 li
262.987 227.183 li
262.793 228.254 li
.133333 .419608 .54902 rgb
f
264.037 228.307 mo
262.793 228.254 li
262.987 227.183 li
264.231 227.236 li
264.037 228.307 li
f
255.457 226.11 mo
255.455 226.11 li
255.535 225.041 li
255.537 225.041 li
255.457 226.11 li
.909635 .909635 .908835 rgb
f
267.575 226.631 mo
264.365 226.493 li
264.559 225.418 li
267.495 225.541 li
267.575 226.631 li
263.121 226.44 mo
255.457 226.11 li
255.537 225.041 li
263.315 225.366 li
263.121 226.44 li
.133333 .419608 .54902 rgb
f
264.365 226.493 mo
263.121 226.44 li
263.315 225.366 li
264.559 225.418 li
264.365 226.493 li
f
267.436 224.791 mo
264.694 224.675 li
264.887 223.605 li
267.355 223.711 li
267.436 224.791 li
263.449 224.623 mo
255.595 224.291 li
255.675 223.211 li
263.643 223.552 li
263.449 224.623 li
f
264.694 224.675 mo
263.449 224.623 li
263.643 223.552 li
264.887 223.605 li
264.694 224.675 li
f
255.73 222.461 mo
255.725 222.461 li
255.805 221.391 li
255.81 221.391 li
255.73 222.461 li
.909635 .909635 .908835 rgb
f
267.295 222.961 mo
264.544 222.842 li
263.796 222.706 li
263.777 222.809 li
255.73 222.461 li
255.81 221.391 li
267.215 221.881 li
267.295 222.961 li
.133333 .419608 .54902 rgb
f
264.544 222.842 mo
263.777 222.809 li
263.796 222.706 li
264.544 222.842 li
f
267.165 221.121 mo
267.164 221.121 li
267.083 220.041 li
267.085 220.041 li
267.165 221.121 li
255.866 220.641 mo
255.865 220.641 li
255.945 219.571 li
255.946 219.571 li
255.866 220.641 li
.909635 .909635 .908835 rgb
f
267.164 221.121 mo
255.866 220.641 li
255.946 219.571 li
267.083 220.041 li
267.164 221.121 li
.133333 .419608 .54902 rgb
f
267.025 219.28 mo
256.005 218.811 li
256.085 217.751 li
266.945 218.211 li
267.025 219.28 li
f
256.139 217.001 mo
256.135 217.001 li
256.215 215.921 li
256.22 215.921 li
256.139 217.001 li
.909635 .909635 .908835 rgb
f
266.885 217.451 mo
256.139 217.001 li
256.22 215.921 li
266.805 216.371 li
266.885 217.451 li
.133333 .419608 .54902 rgb
f
256.276 215.171 mo
256.275 215.171 li
256.315 214.631 li
256.324 214.46 256.373 214.29 256.455 214.149 cv
256.378 214.293 256.33 214.454 256.316 214.627 cv
256.276 215.171 li
.909635 .909635 .908835 rgb
f
266.745 215.61 mo
256.276 215.171 li
256.316 214.627 li
256.33 214.454 256.378 214.293 256.455 214.149 cv
256.465 214.132 256.475 214.116 256.485 214.101 cv
266.655 214.541 li
266.675 214.631 li
266.745 215.61 li
.133333 .419608 .54902 rgb
f
271.713 235.221 mo
271.713 235.221 li
271.713 235.171 li
271.768 234.469 li
271.716 235.173 li
271.715 235.189 271.714 235.205 271.713 235.221 cv
285.147 235.07 mo
285.12 234.721 li
285.123 234.721 li
285.147 235.07 li
.909635 .909635 .908835 rgb
f
285.147 235.07 mo
285.12 234.721 li
285.147 235.07 li
285.147 235.07 li
.537255 .690196 .121569 rgb
f
285.063 233.961 mo
285.063 233.961 li
284.983 232.881 li
284.983 232.881 li
285.063 233.961 li
.909635 .909635 .908835 rgb
f
285.063 233.961 mo
285.063 233.961 li
284.983 232.881 li
284.983 232.881 li
285.063 233.961 li
.537255 .690196 .121569 rgb
f
271.849 233.401 mo
271.843 233.4 li
271.923 232.331 li
271.929 232.331 li
271.849 233.401 li
.909635 .909635 .908835 rgb
f
276.557 233.6 mo
271.849 233.401 li
271.929 232.331 li
279.038 232.631 li
279.031 232.676 li
278.238 233.066 277.41 233.377 276.557 233.6 cv
.537255 .690196 .121569 rgb
f
279.031 232.676 mo
279.038 232.631 li
279.115 232.634 li
279.087 232.648 279.059 232.662 279.031 232.676 cv
f
271.985 231.581 mo
271.983 231.581 li
272.063 230.511 li
272.065 230.511 li
271.985 231.581 li
.909635 .909635 .908835 rgb
f
280.417 231.89 mo
280.591 230.871 li
281.754 230.92 li
281.323 231.271 280.878 231.594 280.417 231.89 cv
279.165 231.886 mo
271.985 231.581 li
272.065 230.511 li
279.348 230.819 li
279.165 231.886 li
.537255 .690196 .121569 rgb
f
280.346 231.936 mo
279.165 231.886 li
279.348 230.819 li
280.591 230.871 li
280.417 231.89 li
280.394 231.906 280.37 231.921 280.346 231.936 cv
f
282.582 230.197 mo
280.72 230.118 li
280.901 229.053 li
283.591 229.165 li
283.267 229.526 282.93 229.871 282.582 230.197 cv
279.476 230.065 mo
272.123 229.751 li
272.203 228.69 li
279.658 229.001 li
279.476 230.065 li
f
280.72 230.118 mo
279.476 230.065 li
279.658 229.001 li
280.901 229.053 li
280.72 230.118 li
f
284.653 228.461 mo
284.651 228.461 li
284.571 227.381 li
284.573 227.381 li
284.653 228.461 li
272.258 227.941 mo
272.253 227.94 li
272.333 226.86 li
272.338 226.861 li
272.258 227.941 li
.909635 .909635 .908835 rgb
f
284.651 228.461 mo
284.651 228.461 li
284.61 227.913 li
284.477 228.093 284.341 228.269 284.203 228.442 cv
281.028 228.309 li
281.211 227.238 li
284.571 227.381 li
284.651 228.461 li
279.785 228.257 mo
272.258 227.941 li
272.338 226.861 li
279.968 227.185 li
279.785 228.257 li
.537255 .690196 .121569 rgb
f
281.028 228.309 mo
279.785 228.257 li
279.968 227.185 li
281.211 227.238 li
281.028 228.309 li
f
272.395 226.11 mo
272.394 226.11 li
272.473 225.041 li
272.475 225.041 li
272.395 226.11 li
284.458 225.884 mo
284.433 225.541 li
284.434 225.541 li
284.458 225.884 li
.909635 .909635 .908835 rgb
f
284.513 226.631 mo
281.338 226.494 li
281.521 225.419 li
284.433 225.541 li
284.458 225.884 li
284.513 226.631 li
280.095 226.441 mo
272.395 226.11 li
272.475 225.041 li
280.278 225.367 li
280.095 226.441 li
.537255 .690196 .121569 rgb
f
281.338 226.494 mo
280.095 226.441 li
280.278 225.367 li
281.521 225.419 li
281.338 226.494 li
f
284.373 224.791 mo
281.648 224.676 li
281.831 223.605 li
284.293 223.711 li
284.373 224.791 li
280.405 224.623 mo
272.533 224.291 li
272.613 223.211 li
280.588 223.552 li
280.405 224.623 li
f
281.648 224.676 mo
280.405 224.623 li
280.588 223.552 li
281.831 223.605 li
281.648 224.676 li
f
272.668 222.461 mo
272.663 222.461 li
272.743 221.391 li
272.748 221.391 li
272.668 222.461 li
.909635 .909635 .908835 rgb
f
284.233 222.961 mo
281.482 222.842 li
280.732 222.705 li
280.715 222.809 li
272.668 222.461 li
272.748 221.391 li
284.153 221.881 li
284.233 222.961 li
.537255 .690196 .121569 rgb
f
281.482 222.842 mo
280.715 222.809 li
280.732 222.705 li
281.482 222.842 li
f
284.103 221.121 mo
284.102 221.121 li
284.021 220.041 li
284.023 220.041 li
284.103 221.121 li
272.804 220.641 mo
272.803 220.641 li
272.883 219.571 li
272.884 219.571 li
272.804 220.641 li
.909635 .909635 .908835 rgb
f
284.102 221.121 mo
272.804 220.641 li
272.884 219.571 li
284.021 220.041 li
284.102 221.121 li
.537255 .690196 .121569 rgb
f
283.963 219.28 mo
272.943 218.811 li
273.023 217.751 li
283.883 218.211 li
283.963 219.28 li
f
273.077 217.001 mo
273.073 217.001 li
273.153 215.921 li
273.158 215.921 li
273.077 217.001 li
.909635 .909635 .908835 rgb
f
283.823 217.451 mo
273.077 217.001 li
273.158 215.921 li
283.743 216.371 li
283.823 217.451 li
.537255 .690196 .121569 rgb
f
273.214 215.171 mo
273.213 215.171 li
273.253 214.631 li
273.262 214.458 273.313 214.286 273.397 214.143 cv
273.318 214.288 273.268 214.452 273.255 214.627 cv
273.214 215.171 li
.909635 .909635 .908835 rgb
f
283.684 215.61 mo
273.214 215.171 li
273.255 214.627 li
273.268 214.452 273.318 214.288 273.397 214.143 cv
273.405 214.128 273.414 214.114 273.423 214.101 cv
283.593 214.541 li
283.613 214.631 li
283.684 215.61 li
.537255 .690196 .121569 rgb
f
233.142 236.471 mo
230.253 236.471 li
233.135 236.471 li
233.615 236.471 234.025 236.19 234.215 235.791 cv
234.215 235.791 li
234.288 235.652 234.335 235.502 234.346 235.346 cv
234.305 235.969 233.785 236.471 233.142 236.471 cv
220.904 235.295 mo
220.903 235.265 220.904 235.235 220.905 235.205 cv
220.905 235.221 li
220.904 235.246 220.904 235.271 220.904 235.295 cv
234.349 235.234 mo
234.348 235.213 234.347 235.192 234.345 235.171 cv
234.34 235.093 li
234.346 235.173 li
234.347 235.193 234.348 235.214 234.349 235.234 cv
220.943 234.7 mo
221.002 233.91 li
220.985 234.161 li
220.943 234.7 li
234.159 232.684 mo
234.115 232.131 li
234.035 231.051 li
233.975 230.291 li
233.896 229.211 li
233.863 228.732 li
234.159 232.684 li
.909635 .909635 .908835 rgb
f
233.135 236.471 mo
230.253 236.471 li
227.655 236.471 li
227.492 235.503 li
234.215 235.791 li
234.025 236.19 233.615 236.471 233.135 236.471 cv
226.4 236.471 mo
222.111 236.471 li
221.451 236.471 220.921 235.941 220.904 235.295 cv
220.904 235.271 220.904 235.246 220.905 235.221 cv
220.905 235.205 li
220.905 235.205 li
220.905 235.221 li
226.227 235.449 li
226.4 236.471 li
234.312 234.721 mo
227.31 234.427 li
227.18 233.661 li
234.255 233.961 li
234.312 234.721 li
220.943 234.7 mo
220.943 234.7 li
220.985 234.161 li
221.002 233.91 li
221.002 233.908 li
221.52 233.974 222.045 234.009 222.576 234.009 cv
223.666 234.009 224.728 233.868 225.751 233.6 cv
225.915 233.607 li
226.045 234.373 li
220.985 234.161 li
220.943 234.7 li
234.174 232.881 mo
228.307 232.634 li
228.727 232.423 229.138 232.19 229.538 231.936 cv
234.115 232.131 li
234.035 231.051 li
230.946 230.92 li
231.228 230.69 231.504 230.449 231.773 230.197 cv
233.975 230.291 li
233.896 229.211 li
232.782 229.165 li
232.991 228.931 233.196 228.69 233.394 228.442 cv
233.843 228.461 li
233.863 228.732 li
233.896 229.211 li
233.975 230.291 li
234.035 231.051 li
234.115 232.131 li
234.159 232.684 li
234.174 232.881 li
.890196 .639216 .192157 rgb
f
227.655 236.471 mo
226.4 236.471 li
226.227 235.449 li
227.492 235.503 li
227.655 236.471 li
227.31 234.427 mo
226.045 234.373 li
225.915 233.607 li
227.18 233.661 li
227.31 234.427 li
f
234.215 235.791 mo
227.492 235.503 li
227.31 234.427 li
234.312 234.721 li
234.34 235.093 li
234.345 235.171 li
234.347 235.192 234.348 235.213 234.349 235.234 cv
234.35 235.272 234.349 235.309 234.346 235.346 cv
234.335 235.502 234.288 235.652 234.215 235.791 cv
234.215 235.791 li
226.227 235.449 mo
220.905 235.221 li
220.905 235.205 li
220.906 235.194 220.906 235.183 220.907 235.173 cv
220.943 234.7 li
220.985 234.161 li
226.045 234.373 li
226.227 235.449 li
.811765 .584314 .184314 rgb
f
227.492 235.503 mo
226.227 235.449 li
226.045 234.373 li
227.31 234.427 li
227.492 235.503 li
f
234.255 233.961 mo
227.18 233.661 li
227.097 233.168 li
227.508 233.01 227.912 232.832 228.307 232.634 cv
234.174 232.881 li
234.255 233.961 li
225.915 233.607 mo
225.751 233.6 li
225.803 233.587 225.855 233.573 225.907 233.558 cv
225.915 233.607 li
f
227.18 233.661 mo
225.915 233.607 li
225.907 233.558 li
226.31 233.448 226.707 233.317 227.097 233.168 cv
227.18 233.661 li
f
234.115 232.131 mo
229.538 231.936 li
230.023 231.628 230.493 231.289 230.946 230.92 cv
234.035 231.051 li
234.115 232.131 li
f
233.975 230.291 mo
231.773 230.197 li
232.122 229.87 232.458 229.526 232.782 229.165 cv
233.896 229.211 li
233.975 230.291 li
f
233.843 228.461 mo
233.394 228.442 li
233.533 228.269 233.669 228.093 233.802 227.913 cv
233.843 228.461 li
f
250.074 236.471 mo
244.748 236.471 li
244.574 235.509 li
251.147 235.791 li
251.247 235.601 251.297 235.391 251.277 235.171 cv
251.271 235.07 li
251.278 235.173 li
251.281 235.203 251.282 235.233 251.282 235.262 cv
251.283 235.923 250.746 236.471 250.074 236.471 cv
243.494 236.471 mo
239.044 236.471 li
238.372 236.471 237.836 235.923 237.836 235.262 cv
237.836 235.249 237.837 235.235 237.837 235.221 cv
243.31 235.455 li
243.494 236.471 li
.831372 .286274 .105882 rgb
f
244.748 236.471 mo
243.494 236.471 li
243.31 235.455 li
244.574 235.509 li
244.748 236.471 li
f
237.893 234.469 mo
237.935 233.908 li
237.935 233.908 li
237.893 234.468 li
237.893 234.469 li
.909635 .909635 .908835 rgb
f
251.244 234.721 mo
244.379 234.432 li
244.241 233.666 li
251.188 233.961 li
251.244 234.721 li
237.893 234.468 mo
237.935 233.908 li
238.452 233.974 238.977 234.008 239.509 234.008 cv
240.598 234.008 241.658 233.867 242.681 233.6 cv
242.977 233.613 li
243.116 234.379 li
237.917 234.161 li
237.893 234.468 li
.831372 .286274 .105882 rgb
f
244.379 234.432 mo
243.116 234.379 li
242.977 233.613 li
244.241 233.666 li
244.379 234.432 li
f
251.107 232.881 mo
245.239 232.634 li
245.659 232.423 246.07 232.19 246.47 231.936 cv
251.047 232.131 li
250.967 231.051 li
247.878 230.92 li
248.161 230.69 248.437 230.449 248.706 230.197 cv
250.907 230.291 li
250.827 229.211 li
249.715 229.165 li
249.924 228.931 250.128 228.69 250.327 228.442 cv
250.775 228.461 li
251.107 232.881 li
f
237.84 235.173 mo
237.893 234.469 li
237.893 234.468 li
237.84 235.173 li
.829696 .829696 .828189 rgb
f
251.147 235.791 mo
244.574 235.509 li
244.379 234.432 li
251.244 234.721 li
251.271 235.07 li
251.277 235.171 li
251.297 235.391 251.247 235.601 251.147 235.791 cv
243.31 235.455 mo
237.837 235.221 li
237.838 235.205 237.839 235.189 237.84 235.173 cv
237.84 235.173 li
237.893 234.468 li
237.917 234.161 li
243.116 234.379 li
243.31 235.455 li
.756863 .270588 .105882 rgb
f
244.574 235.509 mo
243.31 235.455 li
243.116 234.379 li
244.379 234.432 li
244.574 235.509 li
f
251.188 233.961 mo
244.241 233.666 li
244.143 233.123 li
244.515 232.977 244.88 232.814 245.239 232.634 cv
251.107 232.881 li
251.188 233.961 li
242.977 233.613 mo
242.681 233.6 li
242.774 233.576 242.868 233.55 242.961 233.524 cv
242.977 233.613 li
f
244.241 233.666 mo
242.977 233.613 li
242.961 233.524 li
243.362 233.409 243.755 233.276 244.143 233.123 cv
244.241 233.666 li
f
251.047 232.131 mo
246.47 231.936 li
246.955 231.628 247.425 231.289 247.878 230.92 cv
250.967 231.051 li
251.047 232.131 li
f
250.907 230.291 mo
248.706 230.197 li
249.054 229.87 249.391 229.526 249.715 229.165 cv
250.827 229.211 li
250.907 230.291 li
f
250.775 228.461 mo
250.327 228.442 li
250.465 228.269 250.601 228.093 250.734 227.913 cv
250.775 228.461 li
f
267.013 236.471 mo
262.562 236.471 li
262.726 235.561 li
268.085 235.791 li
268.186 235.601 268.235 235.391 268.215 235.171 cv
268.202 234.981 li
268.217 235.173 li
268.219 235.203 268.22 235.233 268.22 235.262 cv
268.221 235.923 267.685 236.471 267.013 236.471 cv
261.308 236.471 mo
255.982 236.471 li
255.31 236.471 254.773 235.923 254.775 235.262 cv
254.775 235.249 254.775 235.235 254.776 235.221 cv
261.482 235.508 li
261.308 236.471 li
.133333 .419608 .54902 rgb
f
262.562 236.471 mo
261.308 236.471 li
261.482 235.508 li
262.726 235.561 li
262.562 236.471 li
f
268.183 234.721 mo
262.918 234.5 li
263.054 233.746 li
268.125 233.961 li
268.045 232.881 li
263.247 232.679 li
263.378 231.955 li
263.388 231.949 263.397 231.943 263.407 231.936 cv
267.985 232.131 li
267.905 231.051 li
264.816 230.92 li
265.099 230.69 265.375 230.449 265.644 230.197 cv
267.845 230.291 li
267.766 229.211 li
266.653 229.165 li
266.862 228.931 267.067 228.69 267.265 228.442 cv
267.714 228.461 li
268.183 234.721 li
254.831 234.469 mo
254.873 233.908 li
255.391 233.974 255.915 234.008 256.447 234.008 cv
257.536 234.008 258.596 233.867 259.619 233.6 cv
261.81 233.693 li
261.674 234.447 li
254.855 234.161 li
254.831 234.469 li
f
262.918 234.5 mo
261.674 234.447 li
261.81 233.693 li
263.054 233.746 li
262.918 234.5 li
263.247 232.679 mo
262.177 232.634 li
262.586 232.429 262.987 232.202 263.378 231.955 cv
263.247 232.679 li
f
268.085 235.791 mo
262.726 235.561 li
262.918 234.5 li
268.183 234.721 li
268.202 234.981 li
268.215 235.171 li
268.235 235.391 268.186 235.601 268.085 235.791 cv
261.482 235.508 mo
254.775 235.221 li
254.776 235.205 254.777 235.189 254.778 235.173 cv
254.831 234.469 li
254.855 234.161 li
261.674 234.447 li
261.482 235.508 li
.129412 .388235 .501961 rgb
f
262.726 235.561 mo
261.482 235.508 li
261.674 234.447 li
262.918 234.5 li
262.726 235.561 li
f
268.125 233.961 mo
263.054 233.746 li
263.247 232.679 li
268.045 232.881 li
268.125 233.961 li
261.81 233.693 mo
259.619 233.6 li
260.434 233.387 261.224 233.094 261.984 232.728 cv
261.81 233.693 li
f
263.054 233.746 mo
261.81 233.693 li
261.984 232.728 li
262.049 232.697 262.113 232.666 262.177 232.634 cv
263.247 232.679 li
263.054 233.746 li
f
267.985 232.131 mo
263.407 231.936 li
263.893 231.628 264.363 231.289 264.816 230.92 cv
267.905 231.051 li
267.985 232.131 li
f
267.845 230.291 mo
265.644 230.197 li
265.992 229.871 266.329 229.526 266.653 229.165 cv
267.766 229.211 li
267.845 230.291 li
f
267.714 228.461 mo
267.265 228.442 li
267.404 228.269 267.54 228.093 267.673 227.913 cv
267.714 228.461 li
f
283.95 236.471 mo
279.636 236.471 li
279.79 235.567 li
285.023 235.791 li
285.123 235.601 285.173 235.391 285.153 235.171 cv
285.147 235.07 li
285.154 235.173 li
285.156 235.203 285.158 235.233 285.158 235.262 cv
285.159 235.923 284.622 236.471 283.95 236.471 cv
278.383 236.471 mo
272.92 236.471 li
272.248 236.471 271.712 235.923 271.712 235.262 cv
271.712 235.249 271.713 235.235 271.713 235.221 cv
278.546 235.514 li
278.383 236.471 li
.537255 .690196 .121569 rgb
f
279.636 236.471 mo
278.383 236.471 li
278.546 235.514 li
279.79 235.567 li
279.636 236.471 li
f
271.768 234.469 mo
271.81 233.908 li
271.81 233.908 li
271.769 234.468 li
271.768 234.469 li
.909635 .909635 .908835 rgb
f
285.12 234.721 mo
279.972 234.504 li
280.1 233.751 li
285.063 233.961 li
285.12 234.721 li
271.769 234.468 mo
271.811 233.908 li
272.328 233.974 272.854 234.008 273.385 234.008 cv
274.474 234.008 275.534 233.867 276.557 233.6 cv
278.856 233.698 li
278.727 234.452 li
271.793 234.161 li
271.769 234.468 li
.537255 .690196 .121569 rgb
f
279.972 234.504 mo
278.727 234.452 li
278.856 233.698 li
280.1 233.751 li
279.972 234.504 li
f
284.983 232.881 mo
280.282 232.683 li
280.409 231.939 li
284.923 232.131 li
284.843 231.051 li
281.754 230.92 li
282.037 230.69 282.313 230.449 282.582 230.197 cv
284.783 230.291 li
284.703 229.211 li
283.591 229.165 li
283.8 228.931 284.004 228.69 284.203 228.442 cv
284.651 228.461 li
284.983 232.881 li
f
280.282 232.683 mo
279.115 232.634 li
279.535 232.423 279.946 232.19 280.346 231.936 cv
280.409 231.939 li
280.282 232.683 li
f
271.716 235.173 mo
271.768 234.469 li
271.769 234.468 li
271.716 235.173 li
.829696 .829696 .828189 rgb
f
285.023 235.791 mo
279.79 235.567 li
279.972 234.504 li
285.12 234.721 li
285.147 235.07 li
285.153 235.171 li
285.173 235.391 285.123 235.601 285.023 235.791 cv
278.546 235.514 mo
271.713 235.221 li
271.714 235.205 271.715 235.189 271.716 235.173 cv
271.716 235.173 li
271.769 234.468 li
271.793 234.161 li
278.727 234.452 li
278.546 235.514 li
.494118 .631373 .121569 rgb
f
279.79 235.567 mo
278.546 235.514 li
278.727 234.452 li
279.972 234.504 li
279.79 235.567 li
f
285.063 233.961 mo
280.1 233.751 li
280.282 232.683 li
284.983 232.881 li
285.063 233.961 li
278.856 233.698 mo
276.557 233.6 li
277.41 233.377 278.238 233.066 279.031 232.676 cv
278.856 233.698 li
f
280.1 233.751 mo
278.856 233.698 li
279.031 232.676 li
279.059 232.662 279.087 232.648 279.115 232.634 cv
280.282 232.683 li
280.1 233.751 li
f
284.923 232.131 mo
280.409 231.939 li
280.417 231.89 li
280.878 231.594 281.323 231.271 281.754 230.92 cv
284.843 231.051 li
284.923 232.131 li
f
280.409 231.939 mo
280.346 231.936 li
280.37 231.921 280.394 231.906 280.417 231.89 cv
280.409 231.939 li
f
284.783 230.291 mo
282.582 230.197 li
282.93 229.871 283.267 229.526 283.591 229.165 cv
284.703 229.211 li
284.783 230.291 li
f
284.651 228.461 mo
284.203 228.442 li
284.341 228.269 284.477 228.093 284.61 227.913 cv
284.651 228.461 li
f
374.467 202.022 mo
372.298 202.022 li
372.298 217.974 li
374.467 217.974 li
374.467 202.022 li
cp
.439216 .435294 .435294 rgb
f
398.606 257.539 mo
398.606 274.943 li
368.5 274.943 li
368.5 244.228 li
368.5 239.728 364.855 236.082 360.355 236.082 cv
351.486 236.082 li
349.704 236.082 348.053 236.717 346.767 237.791 cv
345.465 238.873 344.537 240.402 344.228 242.177 cv
344.212 242.266 li
343.984 243.568 342.853 244.52 341.526 244.52 cv
328.378 244.52 li
326.864 244.52 325.644 243.3 325.644 241.794 cv
325.644 229.784 li
325.644 223.755 330.534 218.873 336.563 218.873 cv
392.162 218.873 li
394.221 218.873 395.897 220.541 395.897 222.6 cv
395.897 235.846 li
395.922 236.31 li
398.606 257.539 li
.929412 .929412 .929412 rgb
f
398.606 274.942 mo
325.646 274.942 li
325.646 261.736 li
325.646 259.42 327.524 257.542 329.841 257.542 cv
398.606 257.542 li
398.606 274.942 li
.854902 .854902 .854902 rgb
f
386.718 230.814 mo
386.718 233.349 384.664 235.403 382.13 235.403 cv
379.596 235.403 377.541 233.349 377.541 230.814 cv
377.541 228.28 379.596 226.226 382.13 226.226 cv
384.664 226.226 386.718 228.28 386.718 230.814 cv
cp
.137255 .454902 .6 rgb
f
389.159 247.595 mo
389.159 251.478 386.012 254.625 382.13 254.625 cv
378.247 254.625 375.1 251.478 375.1 247.595 cv
375.1 243.713 378.247 240.565 382.13 240.565 cv
386.012 240.565 389.159 243.713 389.159 247.595 cv
cp
.854902 .854902 .854902 rgb
f
386.832 247.595 mo
386.832 250.191 384.727 252.297 382.13 252.297 cv
379.532 252.297 377.428 250.191 377.428 247.595 cv
377.428 244.998 379.532 242.893 382.13 242.893 cv
384.727 242.893 386.832 244.998 386.832 247.595 cv
cp
.964706 .964706 .964706 rgb
f
347.073 232.434 mo
347.073 232.846 346.739 233.18 346.327 233.18 cv
345.915 233.18 345.581 232.846 345.581 232.434 cv
345.581 222.737 li
345.581 222.325 345.915 221.992 346.327 221.992 cv
346.739 221.992 347.073 222.325 347.073 222.737 cv
347.073 232.434 li
cp
.439216 .435294 .435294 rgb
f
398.606 274.942 mo
398.606 274.942 li
398.606 257.542 li
398.606 257.539 li
397.511 248.878 li
397.512 248.877 397.512 248.877 397.512 248.877 cv
398.606 257.537 li
398.606 274.942 li
.909635 .909635 .908835 rgb
f
398.606 274.942 mo
368.5 274.942 li
398.606 274.942 li
398.606 257.542 mo
390.458 257.542 li
393.235 254.944 395.613 252.033 397.512 248.877 cv
398.606 257.539 li
398.606 257.542 li
.847059 .847059 .847059 rgb
f
398.606 274.942 mo
398.606 274.942 li
368.5 274.942 li
368.5 274.94 li
351.716 274.94 li
351.683 274.941 351.651 274.941 351.619 274.941 cv
347.299 274.941 347.9 269.944 347.9 269.944 cv
350.514 270.332 353.199 270.54 355.943 270.54 cv
369.623 270.54 381.922 265.526 390.458 257.542 cv
398.606 257.542 li
398.606 274.942 li
.780392 .780392 .780392 rgb
f
347.796 226.226 mo
344.724 226.226 li
344.074 226.226 343.547 225.699 343.547 225.05 cv
343.547 224.748 li
343.547 224.099 344.074 223.572 344.724 223.572 cv
347.796 223.572 li
348.445 223.572 348.972 224.099 348.972 224.748 cv
348.972 225.05 li
348.972 225.699 348.445 226.226 347.796 226.226 cv
cp
.698039 .698039 .698039 rgb
f
346.767 237.791 mo
345.465 238.873 344.537 240.402 344.229 242.177 cv
344.212 242.266 li
343.984 243.568 342.853 244.52 341.526 244.52 cv
328.378 244.52 li
326.864 244.52 325.644 243.3 325.644 241.794 cv
325.644 237.791 li
346.767 237.791 li
cp
.854902 .854902 .854902 rgb
f
336.222 226.48 mo
336.222 244.52 li
335.335 244.52 li
335.335 226.48 li
335.335 226.05 335.538 225.699 335.782 225.699 cv
336.026 225.699 336.222 226.05 336.222 226.48 cv
cp
.439216 .435294 .435294 rgb
f
376.502 217.334 mo
370.082 217.334 li
370.082 218.873 li
376.502 218.873 li
376.502 217.334 li
cp
.854902 .854902 .854902 rgb
f
377.996 217.334 mo
368.667 217.334 li
368.294 217.334 367.992 217.032 367.992 216.659 cv
367.992 216.299 li
367.992 215.926 368.294 215.624 368.667 215.624 cv
377.996 215.624 li
378.369 215.624 378.672 215.926 378.672 216.299 cv
378.672 216.659 li
378.672 217.032 378.369 217.334 377.996 217.334 cv
cp
1 .886275 .721569 rgb
f
377.996 206.417 mo
368.667 206.417 li
368.294 206.417 367.992 206.115 367.992 205.742 cv
367.992 205.382 li
367.992 205.009 368.294 204.707 368.667 204.707 cv
377.996 204.707 li
378.369 204.707 378.672 205.009 378.672 205.382 cv
378.672 205.742 li
378.672 206.115 378.369 206.417 377.996 206.417 cv
cp
f
377.541 215.624 mo
369.28 215.624 li
369.28 206.417 li
377.541 206.417 li
377.541 215.624 li
cp
.137255 .454902 .6 rgb
f
318.96 258.495 mo
322.606 258.719 326.299 259.134 328.914 261.935 cv
331.885 265.117 331.021 272.538 331.376 276.541 cv
332.118 284.903 336.44 294.768 346.404 293.383 cv
350.516 292.812 354.612 291.764 358.67 290.91 cv
360.652 290.493 362.636 290.074 364.612 289.629 cv
363.952 289.777 366.976 289.152 365.6 289.344 cv
355.195 290.79 351.865 278.846 351.162 270.922 cv
350.784 266.671 351.265 261.506 348.831 257.801 cv
346.863 254.803 342.042 254.556 338.877 254.361 cv
335.806 254.173 331.871 255.712 328.897 256.329 cv
326.551 256.816 324.204 257.309 321.861 257.819 cv
321.256 257.952 319.672 258.539 318.96 258.495 cv
cp
.913725 .305882 .105882 rgb
f
340.637 256.294 mo
334.433 254.636 li
334.154 244.53 li
335.746 235.047 li
339.718 216.635 li
339.964 216.589 li
372.23 210.651 li
372.365 211.39 li
340.345 217.281 li
336.482 235.188 li
334.899 244.582 li
335.167 254.056 li
340.83 255.569 li
340.637 256.294 li
cp
.137255 .454902 .6 rgb
f
342.733 219.044 mo
339.75 219.044 li
339.75 215.624 li
342.733 215.624 li
342.733 219.044 li
cp
.854902 .854902 .854902 rgb
f
343.547 219.121 mo
338.937 219.121 li
338.937 217.159 li
343.547 217.159 li
343.547 219.121 li
cp
.439216 .435294 .435294 rgb
f
337.479 249.61 mo
334.021 249.61 li
334.021 244.52 li
337.479 244.52 li
337.479 249.61 li
cp
.698039 .698039 .698039 rgb
f
336.222 238.672 mo
334.8 238.672 li
334.8 233.18 li
336.222 233.18 li
336.222 238.672 li
cp
f
336.117 255.932 mo
335.778 258.845 li
335.439 255.932 li
335.439 249.61 li
336.117 249.61 li
336.117 255.932 li
cp
.854902 .854902 .854902 rgb
f
382.782 241.711 mo
382.782 242.018 382.534 242.266 382.228 242.266 cv
381.921 242.266 381.672 242.018 381.672 241.711 cv
381.672 241.404 381.921 241.155 382.228 241.155 cv
382.534 241.155 382.782 241.404 382.782 241.711 cv
cp
.137255 .454902 .6 rgb
f
378.651 243.448 mo
378.651 243.755 378.403 244.004 378.096 244.004 cv
377.789 244.004 377.541 243.755 377.541 243.448 cv
377.541 243.142 377.789 242.893 378.096 242.893 cv
378.403 242.893 378.651 243.142 378.651 243.448 cv
cp
f
386.718 243.448 mo
386.718 243.755 386.47 244.004 386.163 244.004 cv
385.856 244.004 385.607 243.755 385.607 243.448 cv
385.607 243.142 385.856 242.893 386.163 242.893 cv
386.47 242.893 386.718 243.142 386.718 243.448 cv
cp
.913725 .305882 .105882 rgb
f
376.837 247.595 mo
376.837 247.901 376.588 248.15 376.281 248.15 cv
375.975 248.15 375.726 247.901 375.726 247.595 cv
375.726 247.288 375.975 247.04 376.281 247.04 cv
376.588 247.04 376.837 247.288 376.837 247.595 cv
cp
.137255 .454902 .6 rgb
f
388.482 247.595 mo
388.482 247.901 388.233 248.15 387.927 248.15 cv
387.62 248.15 387.372 247.901 387.372 247.595 cv
387.372 247.288 387.62 247.04 387.927 247.04 cv
388.233 247.04 388.482 247.288 388.482 247.595 cv
cp
.913725 .305882 .105882 rgb
f
382.554 246.144 mo
382.554 246.324 382.407 246.47 382.228 246.47 cv
382.047 246.47 381.9 246.324 381.9 246.144 cv
381.9 244.017 li
381.9 243.836 382.047 243.69 382.228 243.69 cv
382.407 243.69 382.554 243.836 382.554 244.017 cv
382.554 246.144 li
cp
.976471 .698039 .2 rgb
f
384.633 230.814 mo
384.633 232.197 383.513 233.317 382.13 233.317 cv
380.747 233.317 379.626 232.197 379.626 230.814 cv
379.626 229.432 380.747 228.311 382.13 228.311 cv
383.513 228.311 384.633 229.432 384.633 230.814 cv
cp
1 .886275 .721569 rgb
f
383.757 218.869 mo
381.672 218.869 li
381.672 211.021 li
383.757 211.021 li
383.757 218.869 li
cp
.439216 .435294 .435294 rgb
f
364.692 231.88 mo
356.47 231.88 li
356.47 229.748 li
364.692 229.748 li
364.692 231.88 li
cp
.913725 .305882 .105882 rgb
f
398.895 235.926 mo
395.897 235.926 li
395.897 223.572 li
398.895 223.572 li
399.859 223.572 400.641 224.354 400.641 225.318 cv
400.641 234.18 li
400.641 235.145 399.859 235.926 398.895 235.926 cv
cp
.854902 .854902 .854902 rgb
f
26.9287 358.542 mo
26.0366 357.931 25.4922 356.934 25.3956 355.732 cv
25.2749 354.235 25.8575 352.68 26.9155 351.671 cv
28.4317 350.226 30.6787 349.533 33.795 349.598 cv
34.4419 349.608 35.0914 349.643 35.7403 349.677 cv
37.4497 349.769 39.0635 349.854 40.6495 349.518 cv
42.5943 349.104 44.8189 347.682 45.1074 345.534 cv
45.2964 344.128 44.5976 343.076 43.9781 342.441 cv
42.6362 341.066 40.393 340.293 38.3999 340.509 cv
36.2696 340.741 34.3286 341.627 32.2739 342.564 cv
31.0903 343.104 29.8667 343.662 28.6089 344.08 cv
24.9634 345.29 20.3447 344.815 18.566 341.567 cv
16.5952 337.968 19.3526 333.441 23.1567 331.146 cv
31.2652 326.251 42.5318 327.976 48.8047 335.071 cv
50.0157 336.44 51.0405 337.978 52.0317 339.464 cv
53.1831 341.19 54.3735 342.976 55.8374 344.455 cv
58.7983 347.446 62.8608 348.935 66.4326 348.353 cv
70.3682 347.706 73.6176 344.233 73.6768 340.61 cv
73.708 338.713 72.7095 336.726 71.0723 335.423 cv
69.6089 334.259 67.8647 333.816 66.2852 334.206 cv
64.8833 334.554 63.7012 335.417 62.4502 336.33 cv
61.6368 336.924 60.7959 337.538 59.8784 338.009 cv
58.2749 338.83 56.1294 338.901 54.6577 338.181 cv
53.6699 337.696 53.0483 336.91 52.8603 335.907 cv
52.457 333.75 54.2998 331.734 57.7905 330.516 cv
60.9546 329.411 62.4873 328.02 62.3472 326.378 cv
62.2715 325.495 61.6861 324.945 61.2085 324.639 cv
60.2603 324.032 58.9233 323.875 57.8823 324.25 cv
56.0263 324.919 54.7393 326.582 53.3677 328.525 cv
52.5502 327.949 li
54.022 325.864 55.4131 324.077 57.5435 323.309 cv
58.8824 322.826 60.5322 323.018 61.7481 323.797 cv
62.6909 324.401 63.2573 325.287 63.3433 326.292 cv
63.5278 328.447 61.7705 330.186 58.1201 331.459 cv
57.0029 331.85 53.3921 333.311 53.8437 335.724 cv
53.9727 336.413 54.3945 336.938 55.0981 337.283 cv
56.2837 337.865 58.102 337.796 59.4219 337.118 cv
60.2695 336.684 61.0781 336.094 61.8604 335.522 cv
63.1348 334.593 64.4521 333.631 66.0444 333.235 cv
67.9267 332.768 69.9859 333.28 71.6948 334.64 cv
73.5699 336.132 74.7124 338.426 74.6767 340.626 cv
74.6088 344.779 71.0591 348.606 66.5947 349.339 cv
62.7041 349.978 58.311 348.376 55.1265 345.158 cv
53.5952 343.61 52.3775 341.784 51.1997 340.019 cv
50.2271 338.561 49.2212 337.052 48.0557 335.733 cv
42.1914 329.101 31.253 327.426 23.6733 332.001 cv
20.2724 334.054 17.7602 338.014 19.4428 341.087 cv
20.958 343.855 25.0435 344.211 28.2935 343.131 cv
29.5005 342.73 30.6992 342.184 31.8589 341.654 cv
33.8951 340.726 36.001 339.765 38.291 339.515 cv
40.5757 339.259 43.1485 340.159 44.6939 341.743 cv
45.8047 342.882 46.2905 344.238 46.0986 345.667 cv
45.7432 348.309 43.2099 349.996 40.8574 350.496 cv
39.1421 350.86 37.3858 350.768 35.687 350.676 cv
35.0503 350.642 34.4136 350.607 33.7793 350.598 cv
30.941 350.536 28.9218 351.141 27.605 352.395 cv
26.773 353.188 26.2969 354.467 26.392 355.652 cv
26.4643 356.547 26.8555 357.28 27.4941 357.718 cv
26.9287 358.542 li
.913725 .305882 .105882 rgb
f
22.6967 371.518 mo
22.8931 371.525 23.083 371.532 23.2793 371.533 cv
23.3808 371.537 23.4761 371.54 23.5777 371.537 cv
24.1738 371.554 24.7637 371.549 25.3477 371.53 cv
26.1821 371.521 27.0039 371.478 27.8072 371.407 cv
28.5142 371.353 29.2084 371.278 29.8901 371.183 cv
31.0693 371.023 32.2026 370.816 33.2842 370.56 cv
33.9614 370.396 34.626 370.218 35.2641 370.024 cv
35.71 369.886 36.1425 369.739 36.5621 369.586 cv
37.0914 369.403 37.5942 369.198 38.0772 368.979 cv
38.2974 368.894 38.5044 368.793 38.712 368.692 cv
38.7188 368.692 li
39.1396 368.498 39.5342 368.29 39.9224 368.067 cv
41.0654 367.426 42.0625 366.712 42.872 365.936 cv
43.5259 365.323 44.0596 364.673 44.4722 363.989 cv
45.0659 363.002 45.4043 361.95 45.4463 360.853 cv
45.521 358.897 44.6436 357.02 43.0395 355.345 cv
42.8116 355.105 42.5694 354.872 42.314 354.639 cv
41.8745 354.249 41.3945 353.864 40.8725 353.505 cv
40.6416 353.341 li
39.4453 352.521 38.0566 351.784 36.5146 351.148 cv
36.2945 351.059 li
36.2876 351.059 li
35.6733 350.805 35.0449 350.57 34.3887 350.355 cv
34.3755 350.348 li
34.3687 350.348 li
33.4048 350.026 32.3984 349.743 31.3501 349.5 cv
30.6983 349.347 30.0254 349.212 29.3452 349.091 cv
28.8198 348.996 28.2871 348.915 27.7407 348.847 cv
27.5455 348.812 27.3428 348.784 27.1407 348.763 cv
26.6279 348.695 26.1006 348.642 25.5737 348.602 cv
25.3711 348.58 25.1611 348.565 24.9585 348.551 cv
24.4986 348.52 24.0386 348.495 23.5781 348.478 cv
23.0634 348.458 22.5489 348.444 22.04 348.445 cv
21.2739 348.443 20.5137 348.462 19.7661 348.508 cv
19.3657 348.52 18.9717 348.545 18.5835 348.585 cv
17.897 348.633 17.23 348.702 16.5684 348.792 cv
15.9488 348.87 15.3345 348.969 14.7408 349.075 cv
14.0581 349.198 13.3876 349.342 12.7446 349.501 cv
12.4091 349.583 12.0738 349.672 11.7515 349.761 cv
11.0523 349.958 10.3799 350.17 9.7334 350.409 cv
9.53421 350.477 9.3345 350.55 9.14161 350.631 cv
7.86868 351.118 6.70754 351.69 5.69337 352.329 cv
5.26266 352.591 4.85207 352.874 4.47512 353.157 cv
3.87448 353.609 3.34762 354.091 2.88774 354.596 cv
1.62843 355.964 .898418 357.503 .835407 359.147 cv
.799328 360.089 .980942 361.012 1.36084 361.9 cv
1.68413 362.666 2.15722 363.409 2.74709 364.116 cv
3.8696 365.448 5.44336 366.667 7.36967 367.711 cv
8.1133 368.119 8.90572 368.502 9.75393 368.846 cv
9.94043 368.928 li
10.5947 369.196 11.2701 369.446 11.98 369.677 cv
12.2744 369.776 12.5757 369.869 12.8843 369.956 cv
13.521 370.149 14.1792 370.324 14.8579 370.479 cv
15.3755 370.6 15.9068 370.715 16.4453 370.817 cv
16.6675 370.859 16.896 370.902 17.1318 370.945 cv
17.6035 371.024 18.082 371.097 18.5679 371.163 cv
18.7632 371.19 18.959 371.212 19.1548 371.232 cv
19.8901 371.329 20.6469 371.398 21.4048 371.447 cv
21.8305 371.477 22.2637 371.501 22.6967 371.518 cv
f
38.7559 358.719 mo
39.2977 356.899 39.928 355.103 40.6416 353.341 cv
40.8725 353.505 li
41.3945 353.864 41.8745 354.249 42.314 354.639 cv
42.314 354.639 li
41.8745 354.249 41.3945 353.864 40.8725 353.505 cv
40.9487 354.861 41.0715 356.212 41.2414 357.558 cv
41.1273 357.607 41.0138 357.655 40.9009 357.704 cv
40.8936 357.705 li
40.8828 357.683 li
40.8789 357.715 li
40.1538 358.024 39.4624 358.354 38.7891 358.705 cv
38.7813 358.706 li
38.7559 358.719 li
.831372 .286274 .105882 rgb
f
35.911 360.373 mo
35.4857 358.294 35.1265 356.201 34.8354 354.102 cv
35.2949 353.075 35.7744 352.063 36.2876 351.059 cv
35.6733 350.805 35.0449 350.57 34.3887 350.355 cv
34.3887 350.355 li
35.0449 350.57 35.6733 350.805 36.2876 351.059 cv
36.2945 351.059 li
36.5146 351.148 li
36.8171 353.863 37.2338 356.565 37.7618 359.248 cv
37.1138 359.608 36.496 359.984 35.911 360.373 cv
f
30.31 366.095 mo
30.0677 366.066 29.826 366.039 29.5859 366.015 cv
29.3206 365.986 29.0551 365.959 28.7898 365.935 cv
29.088 364.602 29.4277 363.279 29.8086 361.965 cv
29.8086 361.965 li
30.1841 362.986 30.5717 364.002 30.9714 365.012 cv
30.7253 365.369 30.5044 365.731 30.31 366.095 cv
f
34.3887 350.355 mo
34.3755 350.348 li
34.3828 350.328 li
34.3887 350.355 li
f
31.9473 361.891 mo
31.5606 360.845 31.1865 359.8 30.8198 358.749 cv
30.8198 358.749 li
30.8198 358.749 li
31.8115 355.871 32.9965 353.068 34.3687 350.348 cv
34.3755 350.348 li
34.3887 350.355 li
34.3887 350.355 li
34.5102 351.607 34.6592 352.855 34.8354 354.102 cv
34.8354 354.102 li
34.8354 354.102 li
33.7081 356.635 32.7407 359.235 31.9473 361.891 cv
31.9473 361.891 li
f
34.8354 354.102 mo
34.8354 354.102 li
34.6592 352.855 34.5102 351.607 34.3887 350.355 cv
35.0449 350.57 35.6733 350.805 36.2876 351.059 cv
35.7744 352.063 35.2949 353.075 34.8354 354.102 cv
.756863 .270588 .105882 rgb
f
31.1591 364.747 mo
31.3967 363.788 31.6595 362.839 31.9473 361.891 cv
31.9473 361.891 li
32.113 362.332 32.2808 362.773 32.4505 363.213 cv
32.3964 363.269 32.3429 363.325 32.29 363.381 cv
32.0229 363.672 31.771 363.961 31.5352 364.256 cv
31.4045 364.419 31.2792 364.583 31.1591 364.747 cv
29.8086 361.965 mo
29.3662 360.768 28.9443 359.572 28.5292 358.369 cv
28.8579 357.223 29.1929 356.083 29.5483 354.943 cv
29.5483 354.943 li
29.9541 356.221 30.373 357.491 30.8198 358.749 cv
30.4541 359.812 30.1148 360.885 29.8086 361.965 cv
29.8086 361.965 li
.831372 .286274 .105882 rgb
f
30.9714 365.012 mo
30.5717 364.002 30.1841 362.986 29.8086 361.965 cv
29.8086 361.965 li
29.8086 361.965 li
30.1148 360.885 30.4541 359.812 30.8198 358.749 cv
30.8198 358.749 li
31.1865 359.8 31.5606 360.845 31.9473 361.891 cv
31.6595 362.839 31.3967 363.788 31.1591 364.747 cv
31.095 364.836 31.0324 364.924 30.9714 365.012 cv
.756863 .270588 .105882 rgb
f
27.4184 354.964 mo
27.4184 354.964 li
27.4189 354.957 li
26.9711 353.536 26.5444 352.11 26.145 350.678 cv
26.4615 350.032 26.7911 349.394 27.1407 348.763 cv
26.6279 348.695 26.1006 348.642 25.5737 348.602 cv
25.5737 348.602 li
26.1006 348.642 26.6279 348.695 27.1407 348.763 cv
27.3428 348.784 27.5455 348.812 27.7407 348.847 cv
27.9844 349.744 28.2417 350.643 28.5122 351.541 cv
28.5122 351.548 li
28.5122 351.548 li
28.1298 352.679 27.7676 353.817 27.4189 354.957 cv
27.4184 354.964 li
.831372 .286274 .105882 rgb
f
26.5916 365.789 mo
26.5071 365.785 26.4226 365.781 26.3379 365.778 cv
25.7788 365.757 25.226 365.744 24.6797 365.741 cv
24.6244 365.742 24.5694 365.742 24.5147 365.743 cv
25.357 362.118 26.3251 358.523 27.4184 354.964 cv
27.4184 354.964 li
27.7749 356.103 28.1455 357.236 28.5292 358.369 cv
28.5292 358.369 li
28.5292 358.369 li
27.8248 360.826 27.1785 363.301 26.5916 365.789 cv
29.5483 354.943 mo
29.5483 354.943 li
29.1846 353.817 28.8414 352.686 28.5122 351.548 cv
28.5122 351.541 li
28.7808 350.724 29.0566 349.9 29.3452 349.091 cv
30.0254 349.212 30.6983 349.347 31.3501 349.5 cv
30.7183 351.3 30.1201 353.114 29.5483 354.943 cv
f
28.5292 358.369 mo
28.5292 358.369 li
28.1455 357.236 27.7749 356.103 27.4184 354.964 cv
27.4189 354.957 li
27.7676 353.817 28.1298 352.679 28.5122 351.548 cv
28.5122 351.548 li
28.8414 352.686 29.1846 353.817 29.5483 354.943 cv
29.5483 354.943 li
29.5483 354.943 li
29.1929 356.083 28.8579 357.223 28.5292 358.369 cv
.756863 .270588 .105882 rgb
f
20.684 365.916 mo
20.8833 365.225 21.0823 364.54 21.2812 363.855 cv
21.2812 363.855 li
21.4503 364.516 21.6261 365.175 21.8087 365.832 cv
21.4292 365.854 21.0544 365.882 20.684 365.916 cv
.831372 .286274 .105882 rgb
f
19.1806 363.816 mo
19.1806 363.816 li
18.727 362.036 18.3276 360.244 17.9761 358.44 cv
18.4048 357.155 18.8672 355.878 19.3632 354.615 cv
19.3632 354.615 li
19.6475 356.402 19.9799 358.171 20.3598 359.936 cv
20.3598 359.936 li
20.3598 359.936 li
19.9444 361.227 19.5556 362.521 19.1806 363.816 cv
17.2701 354.386 mo
17.2701 354.386 li
16.9819 352.53 16.7481 350.664 16.5684 348.792 cv
17.23 348.702 17.897 348.633 18.5835 348.585 cv
18.6523 349.266 18.7211 349.946 18.8106 350.628 cv
18.8106 350.628 li
18.8106 350.628 li
18.2613 351.868 17.7524 353.123 17.2701 354.386 cv
f
13.4085 367.348 mo
13.8254 365.424 14.3062 363.514 14.8506 361.623 cv
14.8506 361.623 li
15.6895 366.47 li
15.6693 366.557 15.6493 366.643 15.6294 366.73 cv
14.8583 366.908 14.1187 367.117 13.4085 367.348 cv
16.9346 361.736 mo
16.1787 357.389 li
16.1787 357.389 li
16.5225 356.378 16.8862 355.382 17.2701 354.386 cv
17.2701 354.386 li
17.4756 355.743 17.709 357.095 17.9761 358.44 cv
17.9761 358.44 li
17.9761 358.44 li
17.6089 359.531 17.2617 360.631 16.9346 361.736 cv
16.9346 361.736 li
19.3632 354.615 mo
19.3632 354.615 li
19.1494 353.292 18.9629 351.962 18.8106 350.628 cv
19.1157 349.914 19.4346 349.207 19.7661 348.508 cv
20.4788 348.464 21.2029 348.445 21.9328 348.445 cv
21.9685 348.445 22.0043 348.445 22.04 348.445 cv
21.0679 350.463 20.1753 352.524 19.3632 354.615 cv
f
17.9761 358.44 mo
17.9761 358.44 li
17.709 357.095 17.4756 355.743 17.2701 354.386 cv
17.7524 353.123 18.2613 351.868 18.8106 350.628 cv
18.8106 350.628 li
18.9629 351.962 19.1494 353.292 19.3632 354.615 cv
19.3632 354.615 li
19.3632 354.615 li
18.8672 355.878 18.4048 357.155 17.9761 358.44 cv
.756863 .270588 .105882 rgb
f
9.93871 368.774 mo
9.7334 350.409 li
10.3799 350.17 11.0523 349.958 11.7515 349.761 cv
11.9592 367.864 li
11.2462 368.142 10.5714 368.446 9.93871 368.774 cv
.831372 .286274 .105882 rgb
f
18.4969 366.177 mo
18.721 365.393 18.9465 364.606 19.1806 363.816 cv
19.1806 363.816 li
19.3615 364.552 19.5518 365.284 19.7525 366.015 cv
19.7372 366.017 19.7219 366.019 19.7066 366.021 cv
19.3423 366.058 18.9849 366.103 18.6337 366.157 cv
18.588 366.164 18.5424 366.17 18.4969 366.177 cv
21.2812 363.855 mo
21.2812 363.855 li
20.9448 362.555 20.6353 361.247 20.3598 359.936 cv
21.6079 356.023 23.0503 352.166 24.9585 348.551 cv
25.1611 348.565 25.3711 348.58 25.5737 348.602 cv
25.5737 348.602 li
25.7574 349.293 25.9477 349.985 26.145 350.678 cv
26.145 350.678 li
26.145 350.678 li
24.1094 354.797 22.645 359.23 21.2812 363.855 cv
f
26.145 350.678 mo
26.145 350.678 li
25.9477 349.985 25.7574 349.293 25.5737 348.602 cv
26.1006 348.642 26.6279 348.695 27.1407 348.763 cv
26.7911 349.394 26.4615 350.032 26.145 350.678 cv
.756863 .270588 .105882 rgb
f
19.7525 366.015 mo
19.5518 365.284 19.3615 364.552 19.1806 363.816 cv
19.5556 362.521 19.9444 361.227 20.3598 359.936 cv
20.3598 359.936 li
20.6353 361.247 20.9448 362.555 21.2812 363.855 cv
21.2812 363.855 li
21.2812 363.855 li
21.0823 364.54 20.8833 365.225 20.684 365.916 cv
20.3703 365.944 20.0597 365.978 19.7525 366.015 cv
f
9.75393 368.846 mo
8.90572 368.502 8.1133 368.119 7.36967 367.711 cv
7.36967 367.711 li
6.61374 364.779 5.7075 361.891 4.66314 359.05 cv
5.02931 358.169 5.4214 357.303 5.84084 356.444 cv
5.84084 356.444 li
7.42923 360.485 8.73539 364.623 9.75393 368.846 cv
3.62691 356.359 mo
3.62691 356.359 li
3.38523 355.768 3.13623 355.182 2.88774 354.596 cv
3.34762 354.091 3.87448 353.609 4.47512 353.157 cv
4.59423 353.413 4.70602 353.675 4.81792 353.936 cv
4.81792 353.936 li
4.81792 353.936 li
4.39452 354.734 3.99755 355.54 3.62691 356.359 cv
.831372 .286274 .105882 rgb
f
2.74709 364.116 mo
2.74709 364.116 li
2.15722 363.409 1.68413 362.666 1.36084 361.9 cv
2.03618 360.021 2.78469 358.172 3.62691 356.359 cv
3.62691 356.359 li
3.97946 357.247 4.33151 358.149 4.66314 359.05 cv
4.66314 359.05 li
4.66314 359.05 li
3.95558 360.712 3.32811 362.403 2.74709 364.116 cv
5.84084 356.444 mo
5.84084 356.444 li
5.51369 355.604 5.17281 354.77 4.81792 353.936 cv
5.09619 353.398 5.38817 352.86 5.69337 352.329 cv
6.70754 351.69 7.86868 351.118 9.14161 350.631 cv
7.89795 352.481 6.80613 354.434 5.84084 356.444 cv
f
4.66314 359.05 mo
4.66314 359.05 li
4.33151 358.149 3.97946 357.247 3.62691 356.359 cv
3.99755 355.54 4.39452 354.734 4.81792 353.936 cv
4.81792 353.936 li
5.17281 354.77 5.51369 355.604 5.84084 356.444 cv
5.84084 356.444 li
5.84084 356.444 li
5.4214 357.303 5.02931 358.169 4.66314 359.05 cv
.756863 .270588 .105882 rgb
f
41.2571 357.552 mo
41.5833 356.573 41.9353 355.602 42.314 354.639 cv
42.314 354.639 li
42.5694 354.872 42.8116 355.105 43.0395 355.345 cv
43.0832 355.831 43.133 356.316 43.1888 356.801 cv
42.5273 357.038 41.8835 357.288 41.2571 357.552 cv
.831372 .286274 .105882 rgb
f
41.2414 357.558 mo
41.0715 356.212 40.9487 354.861 40.8725 353.505 cv
41.3945 353.864 41.8745 354.249 42.314 354.639 cv
41.9353 355.602 41.5833 356.573 41.2571 357.552 cv
41.2519 357.554 41.2467 357.556 41.2414 357.558 cv
.756863 .270588 .105882 rgb
f
15.7308 366.707 mo
15.6895 366.47 li
15.6895 366.47 li
16.062 364.883 16.4751 363.299 16.9346 361.736 cv
16.9346 361.736 li
17.7241 366.3 li
17.2027 366.389 16.6933 366.489 16.1919 366.6 cv
15.9658 366.655 li
15.8871 366.672 15.8088 366.69 15.7308 366.707 cv
14.8506 361.623 mo
12.7446 349.501 li
13.3876 349.342 14.0581 349.198 14.7408 349.075 cv
16.1787 357.389 li
15.705 358.788 15.2578 360.201 14.8506 361.623 cv
14.8506 361.623 li
.831372 .286274 .105882 rgb
f
15.6895 366.47 mo
14.8506 361.623 li
14.8506 361.623 li
15.2578 360.201 15.705 358.788 16.1787 357.389 cv
16.1787 357.389 li
16.9346 361.736 li
16.4751 363.299 16.062 364.883 15.6895 366.47 cv
15.6895 366.47 li
.756863 .270588 .105882 rgb
f
56.2979 380.624 mo
56.0752 380.651 55.8604 380.679 55.6367 380.699 cv
55.5215 380.714 55.4141 380.728 55.2978 380.734 cv
54.6211 380.813 53.9492 380.866 53.2832 380.903 cv
52.333 380.978 51.3936 381.01 50.4727 381.01 cv
49.6626 381.018 48.8652 381.003 48.0801 380.962 cv
46.7226 380.899 45.4121 380.776 44.1562 380.592 cv
43.3691 380.474 42.5952 380.337 41.8501 380.182 cv
41.3287 380.068 40.8218 379.945 40.3291 379.812 cv
39.709 379.657 39.1162 379.475 38.5449 379.274 cv
38.2856 379.197 38.0396 379.103 37.7939 379.011 cv
37.7861 379.012 li
37.2876 378.833 36.8179 378.635 36.354 378.42 cv
34.9892 377.805 33.7837 377.092 32.7846 376.29 cv
31.9795 375.659 31.3076 374.972 30.77 374.236 cv
29.9956 373.172 29.5054 372.009 29.3477 370.766 cv
29.0669 368.547 29.8779 366.322 31.5352 364.256 cv
31.771 363.961 32.0229 363.672 32.29 363.381 cv
32.751 362.894 33.2593 362.407 33.8169 361.947 cv
34.0635 361.736 li
35.3423 360.685 36.8487 359.707 38.5396 358.83 cv
38.7813 358.706 li
38.7891 358.705 li
39.4624 358.354 40.1538 358.024 40.8789 357.715 cv
40.8936 357.705 li
40.9009 357.704 li
41.9658 357.242 43.0825 356.819 44.251 356.438 cv
44.9775 356.197 45.7295 355.978 46.4912 355.772 cv
47.0795 355.612 47.6772 355.466 48.2925 355.333 cv
48.5112 355.274 48.7383 355.223 48.9668 355.178 cv
49.5435 355.051 50.1377 354.937 50.7334 354.837 cv
50.962 354.793 51.1988 354.755 51.4282 354.718 cv
51.9483 354.637 52.4697 354.563 52.9917 354.497 cv
53.5752 354.423 54.1597 354.357 54.7383 354.308 cv
55.6098 354.228 56.4766 354.173 57.3316 354.15 cv
57.7886 354.124 58.2392 354.113 58.6851 354.12 cv
59.4712 354.106 60.2368 354.118 60.9985 354.154 cv
61.7115 354.182 62.4199 354.232 63.1065 354.294 cv
63.8955 354.365 64.6724 354.462 65.4199 354.578 cv
65.81 354.638 66.2007 354.705 66.5761 354.774 cv
67.3911 354.929 68.1777 355.102 68.937 355.311 cv
69.1704 355.367 69.4048 355.431 69.6323 355.504 cv
71.1294 355.931 72.5078 356.466 73.7256 357.092 cv
74.2417 357.347 74.7373 357.627 75.1948 357.912 cv
75.9228 358.366 76.5708 358.861 77.1445 359.39 cv
78.7143 360.821 79.6987 362.498 79.9346 364.364 cv
80.0698 365.431 79.955 366.499 79.6123 367.548 cv
79.3208 368.451 78.8569 369.345 78.2564 370.208 cv
77.1128 371.835 75.4438 373.38 73.3564 374.76 cv
72.5508 375.298 71.688 375.813 70.7573 376.29 cv
70.5533 376.401 li
69.8359 376.772 69.0923 377.124 68.3076 377.458 cv
67.9824 377.601 67.6489 377.736 67.3061 377.865 cv
66.601 378.149 65.8701 378.414 65.1133 378.658 cv
64.5366 378.848 63.9434 379.032 63.3413 379.202 cv
63.0927 379.272 62.8364 379.344 62.5723 379.416 cv
62.0439 379.553 61.5064 379.684 60.9604 379.808 cv
60.7407 379.858 60.52 379.902 60.2993 379.945 cv
59.4721 380.128 58.6181 380.283 57.7613 380.415 cv
57.2797 380.491 56.7891 380.561 56.2979 380.624 cv
.976471 .698039 .2 rgb
f
36.5852 367.263 mo
35.7577 367.047 34.9072 366.855 34.0391 366.694 cv
33.9626 366.679 33.8861 366.663 33.8094 366.648 cv
33.8066 366.641 33.804 366.635 33.8013 366.629 cv
33.8613 365.069 33.8662 363.509 33.8169 361.947 cv
33.2593 362.407 32.751 362.894 32.29 363.381 cv
32.29 363.381 li
32.751 362.894 33.2593 362.407 33.8169 361.947 cv
34.0635 361.736 li
34.9854 363.541 35.8277 365.386 36.5852 367.263 cv
.890196 .639216 .192157 rgb
f
40.2483 368.365 mo
39.8653 368.232 39.4765 368.103 39.082 367.979 cv
38.7209 367.862 38.3556 367.75 37.986 367.643 cv
38.2857 364.712 38.4712 361.773 38.5396 358.83 cv
38.7813 358.706 li
38.7891 358.705 li
39.4624 358.354 40.1538 358.024 40.8789 357.715 cv
40.8789 357.715 li
40.1538 358.024 39.4624 358.354 38.7891 358.705 cv
39.4732 359.796 40.1202 360.899 40.7456 362.021 cv
40.6394 364.139 40.4732 366.255 40.2483 368.365 cv
f
47.8455 372.052 mo
47.5624 371.859 47.2712 371.671 46.9704 371.488 cv
47.0651 371.147 47.1586 370.807 47.251 370.466 cv
47.251 370.466 li
47.4552 370.992 47.6533 371.521 47.8455 372.052 cv
f
40.8789 357.715 mo
40.8828 357.683 li
40.8936 357.705 li
40.8789 357.715 li
.756863 .270588 .105882 rgb
f
44.8833 370.326 mo
44.8084 370.289 44.7331 370.251 44.6574 370.214 cv
43.5241 367.407 42.2153 364.672 40.7456 362.021 cv
40.7456 362.021 li
40.7456 362.021 li
40.8208 360.585 40.8657 359.151 40.8789 357.715 cv
40.8789 357.715 li
40.8936 357.705 li
40.9009 357.704 li
42.7344 360.662 44.3627 363.732 45.7788 366.907 cv
45.7788 366.907 li
45.7788 366.907 li
45.4895 368.051 45.1928 369.188 44.8833 370.326 cv
.890196 .639216 .192157 rgb
f
40.7456 362.021 mo
40.1202 360.899 39.4732 359.796 38.7891 358.705 cv
39.4624 358.354 40.1538 358.024 40.8789 357.715 cv
40.8657 359.151 40.8208 360.585 40.7456 362.021 cv
40.7456 362.021 li
.811765 .584314 .184314 rgb
f
47.251 370.466 mo
47.251 370.466 li
46.7949 369.268 46.3018 368.082 45.7788 366.907 cv
46.1616 365.432 46.5112 363.944 46.8452 362.451 cv
46.8452 362.451 li
47.3633 363.712 47.8589 364.976 48.3472 366.247 cv
47.9951 367.657 47.6348 369.06 47.251 370.466 cv
.890196 .639216 .192157 rgb
f
46.9704 371.488 mo
46.7445 371.35 46.5131 371.215 46.2758 371.083 cv
45.834 370.828 45.3755 370.579 44.9009 370.335 cv
44.895 370.332 44.8892 370.329 44.8833 370.326 cv
45.1928 369.188 45.4895 368.051 45.7788 366.907 cv
45.7788 366.907 li
46.3018 368.082 46.7949 369.268 47.251 370.466 cv
47.251 370.466 li
47.251 370.466 li
47.1586 370.807 47.0651 371.147 46.9704 371.488 cv
.811765 .584314 .184314 rgb
f
49.2705 362.262 mo
49.2695 362.254 li
48.7588 360.992 48.233 359.732 47.6846 358.483 cv
47.6846 358.483 li
47.6846 358.483 li
47.6836 358.476 li
47.9018 357.427 48.105 356.379 48.2925 355.333 cv
48.5112 355.274 48.7383 355.223 48.9668 355.178 cv
49.5435 355.051 50.1377 354.937 50.7334 354.837 cv
50.7334 354.837 li
50.1377 354.937 49.5435 355.051 48.9668 355.178 cv
49.4277 355.86 49.8667 356.554 50.291 357.257 cv
49.9795 358.927 49.6367 360.593 49.2695 362.254 cv
49.2705 362.262 li
49.2705 362.262 li
.890196 .639216 .192157 rgb
f
54.5617 380.81 mo
54.4808 380.181 54.3177 379.554 54.0777 378.933 cv
53.747 378.084 53.2749 377.246 52.6592 376.429 cv
52.3078 375.951 51.9087 375.48 51.4662 375.019 cv
50.5008 372.069 49.4603 369.143 48.3472 366.247 cv
48.3472 366.247 li
48.3472 366.247 li
48.6709 364.919 48.979 363.593 49.2705 362.262 cv
49.2705 362.262 li
51.6387 368.093 53.7021 374.041 55.457 380.082 cv
55.457 380.082 li
55.457 380.082 li
55.4068 380.3 55.356 380.517 55.2978 380.734 cv
55.2978 380.734 li
55.0518 380.763 54.8064 380.788 54.5617 380.81 cv
46.8452 362.451 mo
46.0117 360.427 45.1494 358.423 44.251 356.438 cv
44.9775 356.197 45.7295 355.978 46.4912 355.772 cv
46.9009 356.664 47.2964 357.573 47.6836 358.476 cv
47.6846 358.483 li
47.4239 359.811 47.1465 361.134 46.8452 362.451 cv
46.8452 362.451 li
f
48.3472 366.247 mo
47.8589 364.976 47.3633 363.712 46.8452 362.451 cv
46.8452 362.451 li
46.8452 362.451 li
47.1465 361.134 47.4239 359.811 47.6846 358.483 cv
47.6846 358.483 li
48.233 359.732 48.7588 360.992 49.2695 362.254 cv
49.2705 362.262 li
48.979 363.593 48.6709 364.919 48.3472 366.247 cv
48.3472 366.247 li
.811765 .584314 .184314 rgb
f
55.6367 380.699 mo
55.5796 380.496 55.5224 380.293 55.457 380.082 cv
56.1231 377.33 56.6841 374.553 57.1425 371.765 cv
57.1425 371.765 li
57.6743 373.133 58.2075 374.508 58.7431 375.907 cv
58.4497 377.41 58.1255 378.918 57.7613 380.415 cv
57.7613 380.415 li
57.2797 380.491 56.7891 380.561 56.2979 380.624 cv
56.0752 380.651 55.8604 380.679 55.6367 380.699 cv
55.6367 380.699 li
.890196 .639216 .192157 rgb
f
55.2978 380.734 mo
55.356 380.517 55.4068 380.3 55.457 380.082 cv
55.457 380.082 li
55.5224 380.293 55.5796 380.496 55.6367 380.699 cv
55.5215 380.714 55.4141 380.728 55.2978 380.734 cv
.811765 .584314 .184314 rgb
f
59.5283 371.51 mo
58.9722 370.074 58.4008 368.642 57.7989 367.212 cv
57.7989 367.212 li
57.7989 367.212 li
58.0547 365.167 58.2558 363.121 58.4008 361.059 cv
58.4008 361.059 li
59.0913 362.446 59.7451 363.854 60.3618 365.272 cv
60.1421 367.36 59.8667 369.438 59.5283 371.51 cv
59.5283 371.51 li
60.7593 360.589 mo
60.0845 359.2 59.3798 357.823 58.6308 356.467 cv
58.6308 356.467 li
58.6308 356.467 li
58.6641 355.683 58.6748 354.901 58.6851 354.12 cv
58.8978 354.116 59.1092 354.115 59.3193 354.115 cv
59.8854 354.115 60.4429 354.128 60.9985 354.154 cv
60.9814 356.302 60.9024 358.449 60.7593 360.589 cv
60.7593 360.589 li
.890196 .639216 .192157 rgb
f
65.1133 378.658 mo
64.6963 377.15 64.2505 375.662 63.7661 374.179 cv
64.2359 368.581 li
65.4087 371.623 66.4326 374.723 67.3061 377.865 cv
66.601 378.149 65.8701 378.414 65.1133 378.658 cv
65.1133 378.658 li
61.876 368.919 mo
61.876 368.919 li
61.3931 367.693 60.8882 366.478 60.3618 365.272 cv
60.3618 365.272 li
60.3618 365.272 li
60.5307 363.715 60.6611 362.153 60.7593 360.589 cv
60.7593 360.589 li
61.2959 361.684 61.809 362.78 62.3012 363.896 cv
62.3012 363.896 li
61.876 368.919 li
58.4008 361.059 mo
57.2675 358.761 56.0459 356.505 54.7383 354.308 cv
55.6098 354.228 56.4766 354.173 57.3316 354.15 cv
57.7793 354.913 58.2124 355.685 58.6308 356.467 cv
58.5908 358.001 58.5117 359.532 58.4008 361.059 cv
58.4008 361.059 li
f
60.3618 365.272 mo
59.7451 363.854 59.0913 362.446 58.4008 361.059 cv
58.4008 361.059 li
58.4008 361.059 li
58.5117 359.532 58.5908 358.001 58.6308 356.467 cv
58.6308 356.467 li
59.3798 357.823 60.0845 359.2 60.7593 360.589 cv
60.6611 362.153 60.5307 363.715 60.3618 365.272 cv
60.3618 365.272 li
.811765 .584314 .184314 rgb
f
68.3076 377.458 mo
66.5761 354.774 li
67.3911 354.929 68.1777 355.102 68.937 355.311 cv
70.5533 376.401 li
69.8359 376.772 69.0923 377.124 68.3076 377.458 cv
68.3076 377.458 li
.890196 .639216 .192157 rgb
f
60.2993 379.945 mo
59.8262 378.733 59.3696 377.528 58.9057 376.331 cv
58.8491 376.189 58.7998 376.048 58.7431 375.907 cv
58.7431 375.907 li
58.7431 375.907 li
59.0415 374.441 59.3013 372.981 59.5283 371.51 cv
59.5283 371.51 li
60.0562 372.847 60.5606 374.179 61.0713 375.503 cv
61.1406 375.682 61.2099 375.86 61.2793 376.038 cv
61.2793 376.038 li
60.9604 379.808 li
60.9604 379.808 li
60.7407 379.858 60.52 379.902 60.2993 379.945 cv
60.2993 379.945 li
57.1425 371.765 mo
55.1284 366.637 53.0191 361.74 50.291 357.257 cv
50.291 357.257 li
50.291 357.257 li
50.4463 356.449 50.5937 355.643 50.7334 354.837 cv
50.7334 354.837 li
50.962 354.793 51.1988 354.755 51.4282 354.718 cv
53.9605 358.642 55.9878 362.886 57.7989 367.212 cv
57.6166 368.732 57.3955 370.25 57.1425 371.765 cv
57.1425 371.765 li
f
50.291 357.257 mo
49.8667 356.554 49.4277 355.86 48.9668 355.178 cv
49.5435 355.051 50.1377 354.937 50.7334 354.837 cv
50.5937 355.643 50.4463 356.449 50.291 357.257 cv
50.291 357.257 li
.811765 .584314 .184314 rgb
f
58.7431 375.907 mo
58.2075 374.508 57.6743 373.133 57.1425 371.765 cv
57.1425 371.765 li
57.1425 371.765 li
57.3955 370.25 57.6166 368.732 57.7989 367.212 cv
57.7989 367.212 li
58.4008 368.642 58.9722 370.074 59.5283 371.51 cv
59.3013 372.981 59.0415 374.441 58.7431 375.907 cv
58.7431 375.907 li
f
70.7573 376.29 mo
71.4937 371.384 72.5664 366.544 73.9693 361.788 cv
73.9693 361.788 li
74.5322 362.723 75.0655 363.67 75.5699 364.636 cv
74.6661 367.972 73.9233 371.35 73.3564 374.76 cv
73.3564 374.76 li
72.5508 375.298 71.688 375.813 70.7573 376.29 cv
76.4795 361.471 mo
75.9761 360.574 75.4444 359.698 74.8823 358.833 cv
74.8823 358.833 li
74.8823 358.833 li
74.9834 358.523 75.085 358.215 75.1948 357.912 cv
75.9228 358.366 76.5708 358.861 77.1445 359.39 cv
76.9199 360.081 76.6953 360.772 76.4795 361.471 cv
76.4795 361.471 li
.890196 .639216 .192157 rgb
f
78.2564 370.208 mo
77.4243 368.316 76.5411 366.455 75.5699 364.636 cv
75.5699 364.636 li
75.5699 364.636 li
75.857 363.577 76.1675 362.516 76.4795 361.471 cv
76.4795 361.471 li
77.6192 363.448 78.6558 365.477 79.6123 367.548 cv
79.3208 368.451 78.8569 369.345 78.2564 370.208 cv
78.2564 370.208 li
73.9693 361.788 mo
72.6699 359.597 71.2329 357.485 69.6323 355.504 cv
71.1294 355.931 72.5078 356.466 73.7256 357.092 cv
74.126 357.665 74.5117 358.248 74.8823 358.833 cv
74.562 359.817 74.2573 360.8 73.9693 361.788 cv
73.9693 361.788 li
f
75.5699 364.636 mo
75.0655 363.67 74.5322 362.723 73.9693 361.788 cv
73.9693 361.788 li
73.9693 361.788 li
74.2573 360.8 74.562 359.817 74.8823 358.833 cv
74.8823 358.833 li
75.4444 359.698 75.9761 360.574 76.4795 361.471 cv
76.1675 362.516 75.857 363.577 75.5699 364.636 cv
75.5699 364.636 li
.811765 .584314 .184314 rgb
f
33.8007 366.646 mo
33.2246 366.53 32.6408 366.426 32.0488 366.34 cv
31.9346 366.316 31.8277 366.302 31.7124 366.286 cv
31.6417 366.274 31.5715 366.263 31.5016 366.252 cv
31.5227 365.587 31.5339 364.921 31.5352 364.256 cv
31.771 363.961 32.0229 363.672 32.29 363.381 cv
32.29 363.381 li
32.8238 364.452 33.3271 365.535 33.8013 366.629 cv
33.8013 366.629 li
33.8013 366.629 li
33.8011 366.635 33.8009 366.64 33.8007 366.646 cv
.890196 .639216 .192157 rgb
f
33.8013 366.629 mo
33.8013 366.629 li
33.3271 365.535 32.8238 364.452 32.29 363.381 cv
32.751 362.894 33.2593 362.407 33.8169 361.947 cv
33.8662 363.509 33.8613 365.069 33.8013 366.629 cv
.811765 .584314 .184314 rgb
f
62.5723 379.416 mo
62.1333 378.286 61.7021 377.163 61.2793 376.038 cv
61.876 368.919 li
62.5552 370.65 63.1841 372.412 63.7661 374.179 cv
63.7661 374.179 li
63.3413 379.202 li
63.3413 379.202 li
63.0927 379.272 62.8364 379.344 62.5723 379.416 cv
62.5723 379.416 li
64.2359 368.581 mo
64.2359 368.581 li
63.6304 367.004 62.9804 365.44 62.3012 363.896 cv
63.1065 354.294 li
63.8955 354.365 64.6724 354.462 65.4199 354.578 cv
64.2359 368.581 li
.890196 .639216 .192157 rgb
f
63.7661 374.179 mo
63.7661 374.179 li
63.1841 372.412 62.5552 370.65 61.876 368.919 cv
62.3012 363.896 li
62.9804 365.44 63.6304 367.004 64.2359 368.581 cv
64.2359 368.581 li
63.7661 374.179 li
.811765 .584314 .184314 rgb
f
60.9604 379.808 mo
61.2793 376.038 li
61.7021 377.163 62.1333 378.286 62.5723 379.416 cv
62.0439 379.553 61.5064 379.684 60.9604 379.808 cv
f
31.0538 366.189 mo
31.2763 366.22 31.4912 366.248 31.7124 366.286 cv
31.8277 366.302 31.9346 366.316 32.0488 366.34 cv
32.7226 366.438 33.3858 366.56 34.0391 366.694 cv
34.9761 366.868 35.8926 367.078 36.7818 367.315 cv
37.5669 367.516 38.3335 367.736 39.082 367.979 cv
40.3775 368.388 41.6118 368.844 42.7783 369.345 cv
43.5083 369.662 44.2212 369.993 44.9009 370.335 cv
45.3755 370.579 45.834 370.828 46.2758 371.083 cv
46.8349 371.394 47.3609 371.722 47.8613 372.062 cv
48.0923 372.203 48.3056 372.357 48.519 372.511 cv
48.5269 372.513 li
48.9624 372.813 49.3652 373.125 49.7583 373.452 cv
50.919 374.397 51.9004 375.397 52.6592 376.429 cv
53.2749 377.246 53.747 378.084 54.0777 378.933 cv
54.5518 380.16 54.7261 381.41 54.5581 382.652 cv
54.2583 384.869 52.9028 386.81 50.7691 388.379 cv
50.4653 388.604 50.1475 388.818 49.8139 389.031 cv
49.2432 389.384 48.6275 389.722 47.9697 390.023 cv
47.8696 390.072 47.7768 390.122 47.6772 390.163 cv
46.1709 390.85 44.4634 391.407 42.604 391.819 cv
42.3384 391.878 li
42.3305 391.876 li
41.5898 392.042 40.8369 392.182 40.0561 392.295 cv
40.0401 392.301 li
40.0322 392.3 li
38.8842 392.473 37.6968 392.593 36.4693 392.661 cv
35.7056 392.706 34.9218 392.725 34.1328 392.728 cv
33.5234 392.731 32.9082 392.718 32.2797 392.687 cv
32.0532 392.688 31.8203 392.681 31.5879 392.664 cv
30.9981 392.64 30.3945 392.597 29.7929 392.539 cv
29.561 392.523 29.3223 392.499 29.0913 392.476 cv
28.5674 392.42 28.0449 392.357 27.5234 392.286 cv
26.941 392.208 26.3589 392.121 25.7871 392.02 cv
24.9243 391.872 24.0727 391.702 23.2407 391.504 cv
22.7925 391.412 22.354 391.306 21.9248 391.186 cv
21.1616 390.996 20.4248 390.787 19.6987 390.557 cv
19.0161 390.347 18.3447 390.115 17.6973 389.88 cv
16.9532 389.607 16.2275 389.313 15.5347 389.009 cv
15.1733 388.851 14.813 388.686 14.4683 388.522 cv
13.7202 388.162 13.0049 387.792 12.3247 387.396 cv
12.1138 387.281 11.9038 387.159 11.7026 387.03 cv
10.3658 386.232 9.17189 385.36 8.15579 384.442 cv
7.72264 384.063 7.31591 383.665 6.9478 383.271 cv
6.36088 382.646 5.86228 382 5.44386 381.342 cv
4.29543 379.555 3.7759 377.681 4.02784 375.817 cv
4.17236 374.751 4.55764 373.749 5.1592 372.823 cv
5.67335 372.025 6.35153 371.282 7.15431 370.602 cv
8.67827 369.324 10.6884 368.261 13.0605 367.465 cv
13.9775 367.151 14.9443 366.876 15.9658 366.655 cv
16.1919 366.6 li
16.9809 366.426 17.79 366.277 18.6337 366.157 cv
18.9849 366.103 19.3423 366.058 19.7066 366.021 cv
20.461 365.928 21.2354 365.86 22.0293 365.82 cv
22.6358 365.784 23.2558 365.759 23.8819 365.75 cv
24.1401 365.746 24.4063 365.743 24.6797 365.741 cv
25.226 365.744 25.7788 365.757 26.3379 365.778 cv
26.5635 365.785 26.7881 365.8 27.0127 365.814 cv
27.8589 365.851 28.7241 365.921 29.5859 366.015 cv
30.0713 366.064 30.563 366.123 31.0538 366.189 cv
1 .886275 .721569 rgb
f
47.6772 390.163 mo
47.0303 387.155 46.584 384.104 46.3496 381.042 cv
47.017 379.398 47.7211 377.776 48.4531 376.173 cv
48.4531 376.173 li
48.4844 379.293 48.7251 382.418 49.1904 385.503 cv
49.1904 385.503 li
49.1904 385.503 li
48.7309 386.995 48.3237 388.501 47.9697 390.023 cv
47.9697 390.023 li
47.8696 390.072 47.7768 390.122 47.6772 390.163 cv
47.6772 390.163 li
46.1313 375.671 mo
46.1313 375.671 li
46.128 374.14 46.1787 372.608 46.2758 371.083 cv
46.8349 371.394 47.3609 371.722 47.8613 372.062 cv
48.0923 372.203 48.3056 372.357 48.519 372.511 cv
48.5269 372.513 li
48.5269 372.513 li
48.519 372.511 li
48.3056 372.357 48.0923 372.203 47.8613 372.062 cv
47.2627 373.255 46.686 374.458 46.1313 375.671 cv
.909804 .807843 .658823 rgb
f
42.3384 391.878 mo
42.3305 391.876 li
42.3305 391.876 li
41.9506 390.646 41.6099 389.413 41.2939 388.167 cv
41.2939 388.167 li
41.2939 388.167 li
42.6577 383.916 44.2774 379.738 46.1313 375.671 cv
46.1313 375.671 li
46.1318 377.459 46.2006 379.257 46.3496 381.042 cv
46.3496 381.042 li
46.3496 381.042 li
44.9195 384.573 43.668 388.168 42.604 391.819 cv
42.604 391.819 li
42.3384 391.878 li
48.4531 376.173 mo
48.4531 376.173 li
48.4463 374.953 48.4634 373.73 48.5269 372.513 cv
48.5269 372.513 li
48.9624 372.813 49.3652 373.125 49.7583 373.452 cv
49.3164 374.353 48.8809 375.262 48.4531 376.173 cv
f
46.3496 381.042 mo
46.3496 381.042 li
46.2006 379.257 46.1318 377.459 46.1313 375.671 cv
46.686 374.458 47.2627 373.255 47.8613 372.062 cv
48.0923 372.203 48.3056 372.357 48.519 372.511 cv
48.5269 372.513 li
48.4634 373.73 48.4463 374.953 48.4531 376.173 cv
48.4531 376.173 li
48.4531 376.173 li
47.7211 377.776 47.017 379.398 46.3496 381.042 cv
.827451 .737255 .603922 rgb
f
40.0444 392.325 mo
40.0401 392.301 li
40.0322 392.3 li
40.0322 392.3 li
40.0322 392.3 li
40.0401 392.301 li
40.0561 392.295 li
40.0561 392.295 li
40.0561 392.295 li
40.8369 392.182 41.5898 392.042 42.3305 391.876 cv
42.3305 391.876 li
41.5898 392.042 40.8369 392.182 40.0561 392.295 cv
40.0444 392.325 li
.909635 .909635 .908835 rgb
f
40.0401 392.301 mo
40.0322 392.3 li
40.0322 392.3 li
39.0224 388.969 38.2388 385.583 37.688 382.15 cv
38.3067 381.04 38.9321 379.937 39.5733 378.837 cv
39.5733 378.837 li
39.9443 381.98 40.5224 385.096 41.2939 388.167 cv
40.8511 389.536 40.439 390.91 40.0561 392.295 cv
40.0561 392.295 li
40.0401 392.301 li
.909804 .807843 .658823 rgb
f
40.0561 392.295 mo
40.439 390.91 40.8511 389.536 41.2939 388.167 cv
41.2939 388.167 li
41.6099 389.413 41.9506 390.646 42.3305 391.876 cv
41.5898 392.042 40.8369 392.182 40.0561 392.295 cv
.827451 .737255 .603922 rgb
f
37.1812 378.334 mo
37.1812 378.334 li
36.7783 374.672 36.6441 370.99 36.7818 367.315 cv
37.5669 367.516 38.3335 367.736 39.082 367.979 cv
39.0181 370.297 39.0562 372.613 39.2114 374.931 cv
39.2114 374.931 li
39.2114 374.931 li
38.5205 376.055 37.8437 377.189 37.1812 378.334 cv
.909804 .807843 .658823 rgb
f
32.2406 392.688 mo
32.0264 392.688 31.8069 392.68 31.5879 392.664 cv
31.5879 392.664 li
31.3184 391.886 31.0728 391.104 30.8438 390.314 cv
30.8438 390.314 li
30.8438 390.314 li
31.5742 388.781 32.3345 387.26 33.1167 385.749 cv
33.1177 385.741 li
33.1177 385.741 li
33.1167 385.749 li
33.2857 387.1 33.4697 388.452 33.6778 389.8 cv
33.6768 389.808 li
33.1958 390.766 32.73 391.726 32.2797 392.687 cv
32.2797 392.687 li
32.2667 392.688 32.2537 392.688 32.2406 392.688 cv
35.5103 386.183 mo
35.334 384.831 35.1807 383.482 35.0357 382.128 cv
35.0357 382.128 li
35.0357 382.128 li
35.7387 380.856 36.4487 379.594 37.1812 378.334 cv
37.1812 378.334 li
37.3135 379.609 37.4849 380.882 37.688 382.15 cv
37.688 382.15 li
37.688 382.15 li
36.938 383.478 36.2173 384.825 35.5103 386.183 cv
35.5103 386.183 li
39.5733 378.837 mo
39.5733 378.837 li
39.4136 377.534 39.292 376.237 39.2114 374.931 cv
40.3652 373.04 41.5463 371.178 42.7783 369.345 cv
43.5083 369.662 44.2212 369.993 44.9009 370.335 cv
43.0405 373.121 41.2666 375.958 39.5733 378.837 cv
f
37.688 382.15 mo
37.688 382.15 li
37.4849 380.882 37.3135 379.609 37.1812 378.334 cv
37.8437 377.189 38.5205 376.055 39.2114 374.931 cv
39.2114 374.931 li
39.292 376.237 39.4136 377.534 39.5733 378.837 cv
39.5733 378.837 li
39.5733 378.837 li
38.9321 379.937 38.3067 381.04 37.688 382.15 cv
.827451 .737255 .603922 rgb
f
34.1328 392.728 mo
33.9673 391.761 33.8183 390.779 33.6768 389.808 cv
33.6778 389.8 li
33.6778 389.8 li
34.272 388.584 34.8799 387.378 35.5103 386.183 cv
35.5103 386.183 li
35.7944 388.353 36.1118 390.512 36.4693 392.661 cv
35.7056 392.706 34.9218 392.725 34.1328 392.728 cv
34.1328 392.728 li
33.1177 385.741 mo
32.3306 379.497 31.8677 373.219 31.7271 366.929 cv
31.8315 366.731 31.9365 366.535 32.0488 366.34 cv
31.9346 366.316 31.8277 366.302 31.7124 366.286 cv
31.7124 366.286 li
31.8277 366.302 31.9346 366.316 32.0488 366.34 cv
32.7226 366.438 33.3858 366.56 34.0391 366.694 cv
34.1538 371.849 34.4878 377.001 35.0357 382.128 cv
34.3814 383.328 33.7427 384.53 33.1177 385.741 cv
33.1177 385.741 li
.909804 .807843 .658823 rgb
f
33.6778 389.8 mo
33.4697 388.452 33.2857 387.1 33.1167 385.749 cv
33.1177 385.741 li
33.1177 385.741 li
33.7427 384.53 34.3814 383.328 35.0357 382.128 cv
35.0357 382.128 li
35.1807 383.482 35.334 384.831 35.5103 386.183 cv
34.8799 387.378 34.272 388.584 33.6778 389.8 cv
33.6778 389.8 li
.827451 .737255 .603922 rgb
f
21.9248 391.186 mo
21.9248 391.186 li
21.1616 390.996 20.4248 390.787 19.6987 390.557 cv
20.2676 388.485 20.897 386.432 21.5854 384.4 cv
21.5854 384.4 li
21.8803 385.916 22.2066 387.429 22.5815 388.932 cv
22.3471 389.681 22.1362 390.434 21.9248 391.186 cv
23.9858 384.554 mo
23.6758 383.035 23.4057 381.507 23.1757 379.977 cv
23.1757 379.977 li
23.1757 379.977 li
23.9249 378.017 24.7261 376.079 25.5864 374.165 cv
25.5864 374.165 li
25.7539 375.694 25.9375 377.227 26.1514 378.763 cv
25.3775 380.673 24.6563 382.598 23.9858 384.554 cv
23.9858 384.554 li
27.9575 374.532 mo
27.7954 373.073 27.6348 371.607 27.4766 370.118 cv
27.4766 370.118 li
27.4766 370.118 li
28.1474 368.74 28.8487 367.367 29.5859 366.015 cv
30.0713 366.064 30.563 366.123 31.0538 366.189 cv
31.2763 366.22 31.4912 366.248 31.7124 366.286 cv
31.7124 366.286 li
31.7149 366.497 31.7178 366.709 31.7271 366.929 cv
31.7271 366.929 li
31.7271 366.929 li
30.375 369.416 29.1182 371.956 27.9575 374.532 cv
27.9575 374.532 li
.909804 .807843 .658823 rgb
f
31.7271 366.929 mo
31.7271 366.929 li
31.7178 366.709 31.7149 366.497 31.7124 366.286 cv
31.8277 366.302 31.9346 366.316 32.0488 366.34 cv
31.9365 366.535 31.8315 366.731 31.7271 366.929 cv
.827451 .737255 .603922 rgb
f
25.7871 392.02 mo
24.9243 391.872 24.0727 391.702 23.2407 391.504 cv
23.2407 391.504 li
23.0044 390.652 22.7847 389.795 22.5815 388.932 cv
22.5815 388.932 li
22.5815 388.932 li
23.0146 387.46 23.4854 386 23.9858 384.554 cv
23.9858 384.554 li
24.4892 387.065 25.0888 389.56 25.7871 392.02 cv
21.5854 384.4 mo
21.3491 383.205 21.1353 382.013 20.9468 380.808 cv
22.6509 376.063 li
22.8017 377.372 22.9765 378.677 23.1757 379.977 cv
22.6109 381.438 22.0835 382.914 21.5854 384.4 cv
21.5854 384.4 li
20.2837 375.782 mo
20.2837 375.782 li
19.9331 372.541 19.7417 369.282 19.7066 366.021 cv
20.461 365.928 21.2354 365.86 22.0293 365.82 cv
22.0445 367.384 22.0922 368.936 22.1782 370.494 cv
22.1782 370.494 li
20.2837 375.782 li
.909804 .807843 .658823 rgb
f
22.5815 388.932 mo
22.2066 387.429 21.8803 385.916 21.5854 384.4 cv
21.5854 384.4 li
21.5854 384.4 li
22.0835 382.914 22.6109 381.438 23.1757 379.977 cv
23.1757 379.977 li
23.4057 381.507 23.6758 383.035 23.9858 384.554 cv
23.4854 386 23.0146 387.46 22.5815 388.932 cv
22.5815 388.932 li
.827451 .737255 .603922 rgb
f
14.4683 388.522 mo
14.4683 388.522 li
13.7202 388.162 13.0049 387.792 12.3247 387.396 cv
16.1919 366.6 li
16.9809 366.426 17.79 366.277 18.6337 366.157 cv
14.4683 388.522 li
.909804 .807843 .658823 rgb
f
29.7929 392.539 mo
29.7929 392.539 li
29.561 392.523 29.3223 392.499 29.0913 392.476 cv
29.0913 392.476 li
27.6538 388.032 26.7876 383.409 26.1514 378.763 cv
26.1514 378.763 li
26.1514 378.763 li
26.7183 377.34 27.3232 375.931 27.9575 374.532 cv
27.9575 374.532 li
28.5835 380.006 29.3618 385.28 30.8438 390.314 cv
30.4858 391.055 30.1357 391.797 29.7929 392.539 cv
f
31.5879 392.664 mo
30.9981 392.64 30.3945 392.597 29.7929 392.539 cv
30.1357 391.797 30.4858 391.055 30.8438 390.314 cv
30.8438 390.314 li
31.0728 391.104 31.3184 391.886 31.5879 392.664 cv
.827451 .737255 .603922 rgb
f
25.5864 374.165 mo
25.4205 372.736 25.2758 371.319 25.1235 369.909 cv
25.102 369.719 25.081 369.528 25.0601 369.338 cv
26.3379 365.778 li
25.7788 365.757 25.226 365.744 24.6797 365.741 cv
24.6797 365.741 li
25.226 365.744 25.7788 365.757 26.3379 365.778 cv
26.5635 365.785 26.7881 365.8 27.0127 365.814 cv
27.1577 367.107 27.289 368.39 27.4287 369.666 cv
27.4473 369.817 27.4581 369.967 27.4766 370.118 cv
26.8115 371.457 26.1846 372.801 25.5864 374.165 cv
25.5864 374.165 li
.909804 .807843 .658823 rgb
f
26.1514 378.763 mo
25.9375 377.227 25.7539 375.694 25.5864 374.165 cv
25.5864 374.165 li
25.5864 374.165 li
26.1846 372.801 26.8115 371.457 27.4766 370.118 cv
27.4766 370.118 li
27.6348 371.607 27.7954 373.073 27.9575 374.532 cv
27.3232 375.931 26.7183 377.34 26.1514 378.763 cv
26.1514 378.763 li
.827451 .737255 .603922 rgb
f
6.9478 383.271 mo
6.9478 383.271 li
6.36088 382.646 5.86228 382 5.44386 381.342 cv
5.8384 380.731 6.23344 380.121 6.62207 379.502 cv
6.62207 379.502 li
6.87798 380.497 7.16651 381.481 7.48685 382.462 cv
7.3091 382.734 7.13185 383.008 6.9478 383.271 cv
9.12941 379.842 mo
8.82614 378.793 8.55469 377.741 8.31596 376.678 cv
8.31596 376.678 li
8.31596 376.678 li
10.0479 373.687 11.6352 370.614 13.0605 367.465 cv
13.9775 367.151 14.9443 366.876 15.9658 366.655 cv
13.9917 371.206 11.7095 375.606 9.12941 379.842 cv
9.12941 379.842 li
.909804 .807843 .658823 rgb
f
11.7026 387.03 mo
10.3658 386.232 9.17189 385.36 8.15579 384.442 cv
8.15579 384.442 li
7.91655 383.785 7.69387 383.122 7.48685 382.462 cv
7.48685 382.462 li
7.48685 382.462 li
8.04928 381.593 8.59666 380.722 9.12941 379.842 cv
9.12941 379.842 li
9.82081 382.294 10.6665 384.704 11.7026 387.03 cv
6.62207 379.502 mo
6.02977 377.298 5.55027 375.07 5.1592 372.823 cv
5.67335 372.025 6.35153 371.282 7.15431 370.602 cv
7.47171 372.643 7.84571 374.67 8.31596 376.678 cv
7.76563 377.627 7.19283 378.572 6.62207 379.502 cv
6.62207 379.502 li
f
7.48685 382.462 mo
7.16651 381.481 6.87798 380.497 6.62207 379.502 cv
6.62207 379.502 li
6.62207 379.502 li
7.19283 378.572 7.76563 377.627 8.31596 376.678 cv
8.31596 376.678 li
8.55469 377.741 8.82614 378.793 9.12941 379.842 cv
8.59666 380.722 8.04928 381.593 7.48685 382.462 cv
7.48685 382.462 li
.827451 .737255 .603922 rgb
f
49.8139 389.031 mo
49.5747 387.858 49.3666 386.683 49.1904 385.503 cv
50.1338 382.397 51.293 379.368 52.6592 376.429 cv
53.2749 377.246 53.747 378.084 54.0777 378.933 cv
52.7422 381.993 51.6348 385.154 50.7691 388.379 cv
50.7691 388.379 li
50.4653 388.604 50.1475 388.818 49.8139 389.031 cv
49.8139 389.031 li
.909804 .807843 .658823 rgb
f
47.9697 390.023 mo
48.3237 388.501 48.7309 386.995 49.1904 385.503 cv
49.1904 385.503 li
49.3666 386.683 49.5747 387.858 49.8139 389.031 cv
49.2432 389.384 48.6275 389.722 47.9697 390.023 cv
.827451 .737255 .603922 rgb
f
17.6973 389.88 mo
17.6973 389.88 li
16.9532 389.607 16.2275 389.313 15.5347 389.009 cv
20.2837 375.782 li
20.4624 377.462 20.6885 379.141 20.9468 380.808 cv
20.9468 380.808 li
17.6973 389.88 li
22.6509 376.063 mo
22.6509 376.063 li
22.4399 374.216 22.2862 372.352 22.1782 370.494 cv
23.8819 365.75 li
24.1401 365.746 24.4063 365.743 24.6797 365.741 cv
24.6797 365.741 li
24.8135 366.946 24.9405 368.143 25.0601 369.338 cv
25.0601 369.338 li
22.6509 376.063 li
.909804 .807843 .658823 rgb
f
20.9468 380.808 mo
20.9468 380.808 li
20.6885 379.141 20.4624 377.462 20.2837 375.782 cv
22.1782 370.494 li
22.2862 372.352 22.4399 374.216 22.6509 376.063 cv
22.6509 376.063 li
20.9468 380.808 li
.827451 .737255 .603922 rgb
f
25.0601 369.338 mo
25.0601 369.338 li
24.9405 368.143 24.8135 366.946 24.6797 365.741 cv
25.226 365.744 25.7788 365.757 26.3379 365.778 cv
25.0601 369.338 li
f
184.585 342.164 mo
184.585 383.749 li
177.355 379.829 170.115 379.489 162.885 380.539 cv
162.645 380.579 162.425 380.619 162.205 380.649 cv
159.395 381.089 156.585 381.73 153.765 382.459 cv
151.915 378.869 150.675 374.219 150.225 369.319 cv
150.225 369.279 li
150.135 367.679 150.075 366.419 150.045 365.869 cv
150.035 365.769 150.035 365.669 150.035 365.569 cv
146.765 364.649 li
146.765 384.329 li
135.575 387.319 124.395 389.809 113.205 383.749 cv
113.205 342.164 li
125.1 348.609 136.995 345.386 148.891 342.164 cv
160.788 338.942 172.685 335.719 184.585 342.164 cv
.584314 .756863 .121569 rgb
f
146.191 390.001 mo
146.975 384.607 li
146.973 384.607 li
152.725 347.619 li
147.394 353.992 143.479 378.79 142.835 384.14 cv
142.701 385.256 143.303 385.936 144.438 386.223 cv
144.906 386.341 145.027 386.396 145.264 386.426 cv
144.891 389.713 li
146.191 390.001 li
cp
.854902 .854902 .854902 rgb
f
154.608 397.381 mo
153.975 395.71 152.499 394.504 150.736 394.217 cv
148.973 393.929 147.19 394.604 146.06 395.987 cv
144.93 397.371 144.624 399.252 145.256 400.923 cv
145.889 402.593 147.364 403.799 149.128 404.086 cv
150.891 404.374 152.673 403.698 153.804 402.315 cv
154.934 400.933 155.24 399.051 154.608 397.381 cv
cp
154.989 403.284 mo
153.513 405.091 151.184 405.973 148.881 405.598 cv
146.579 405.223 144.65 403.646 143.824 401.465 cv
142.998 399.282 143.398 396.825 144.875 395.019 cv
146.351 393.212 148.679 392.33 150.982 392.705 cv
153.285 393.081 155.213 394.656 156.04 396.838 cv
156.866 399.021 156.466 401.478 154.989 403.284 cv
cp
.913725 .305882 .105882 rgb
f
147.131 387.42 mo
144.981 387.189 li
144.702 387.16 144.452 387.364 144.425 387.645 cv
143.398 398.67 li
146.396 395.608 li
147.576 387.999 li
147.62 387.714 147.417 387.45 147.131 387.42 cv
cp
f
139.828 387.564 mo
142.848 383.027 li
142.849 383.028 li
163.194 351.801 li
162.905 360.104 149.102 381.261 146.061 385.709 cv
145.544 386.463 144.613 386.467 143.767 386.123 cv
143.368 385.961 143.102 385.659 142.906 385.522 cv
140.988 388.219 li
139.828 387.564 li
cp
.776471 .776471 .776471 rgb
f
125.938 391.644 mo
125.854 393.428 126.73 395.121 128.234 396.085 cv
129.738 397.049 131.642 397.137 133.229 396.316 cv
134.815 395.496 135.844 393.892 135.927 392.106 cv
136.009 390.322 135.134 388.629 133.63 387.665 cv
132.126 386.701 130.222 386.613 128.635 387.434 cv
127.049 388.254 126.02 389.859 125.938 391.644 cv
cp
127.932 386.073 mo
130.005 385.002 132.492 385.117 134.456 386.376 cv
136.421 387.636 137.564 389.847 137.456 392.178 cv
137.348 394.509 136.005 396.604 133.932 397.677 cv
131.859 398.748 129.373 398.633 127.408 397.374 cv
125.443 396.115 124.3 393.903 124.408 391.572 cv
124.516 389.241 125.859 387.146 127.932 386.073 cv
cp
.913725 .305882 .105882 rgb
f
140.853 385.016 mo
142.606 386.28 li
142.834 386.444 142.884 386.764 142.716 386.989 cv
136.116 395.881 li
135.931 391.601 li
140.135 385.149 li
140.292 384.908 140.619 384.847 140.853 385.016 cv
cp
f
145.179 383.412 mo
144.476 385.249 li
144.934 385.318 145.394 385.063 145.566 384.613 cv
145.739 384.163 145.566 383.667 145.179 383.412 cv
cp
.529412 .529412 .529412 rgb
f
144.806 383.262 mo
144.337 383.176 143.859 383.431 143.682 383.892 cv
143.505 384.354 143.691 384.862 144.098 385.111 cv
144.806 383.262 li
cp
f
163.465 349.069 mo
162.885 380.539 li
162.645 380.579 162.425 380.619 162.205 380.649 cv
158.925 381.199 157.585 381.539 154.285 383.409 cv
154.105 383.099 153.935 382.789 153.765 382.459 cv
151.915 378.869 150.675 374.219 150.225 369.319 cv
150.225 369.319 149.938 365.642 149.938 365.542 cv
163.465 349.069 li
.584314 .756863 .121569 rgb
f
184.585 383.749 mo
184.553 383.732 184.521 383.714 184.489 383.697 cv
184.521 383.714 184.553 383.732 184.585 383.749 cv
184.585 356.24 li
184.585 356.24 li
184.585 383.749 li
162.205 380.649 mo
162.205 380.649 li
162.425 380.619 162.645 380.579 162.885 380.539 cv
162.885 380.539 li
162.913 380.535 162.939 380.531 162.967 380.527 cv
162.939 380.531 162.913 380.535 162.885 380.539 cv
162.645 380.579 162.425 380.619 162.205 380.649 cv
162.205 380.649 li
162.997 380.523 mo
165.161 380.213 167.327 380.029 169.492 380.028 cv
167.327 380.029 165.161 380.213 162.997 380.523 cv
169.499 380.028 mo
169.497 380.028 169.496 380.028 169.494 380.028 cv
169.494 380.028 li
169.496 380.028 169.497 380.028 169.499 380.028 cv
.937439 .937439 .936886 rgb
f
184.585 383.749 mo
184.553 383.732 184.521 383.714 184.489 383.697 cv
179.494 381.011 174.496 380.029 169.499 380.028 cv
169.497 380.028 169.496 380.028 169.494 380.028 cv
169.494 380.028 li
169.494 380.028 li
169.493 380.028 169.493 380.028 169.492 380.028 cv
167.327 380.029 165.161 380.213 162.997 380.523 cv
162.987 380.524 162.977 380.526 162.967 380.527 cv
162.939 380.531 162.913 380.535 162.885 380.539 cv
162.904 379.5 li
174.144 374.443 182.235 365.9 184.585 356.24 cv
184.585 383.749 li
.552941 .709804 .121569 rgb
f
157.713 381.509 mo
159.507 380.921 161.24 380.248 162.904 379.5 cv
162.885 380.539 li
162.645 380.579 162.425 380.619 162.205 380.649 cv
162.205 380.649 li
160.708 380.884 159.211 381.178 157.713 381.509 cv
f
228.351 350.565 mo
228.351 339.107 li
248.041 339.107 li
240.599 341.594 234.055 345.402 228.351 350.565 cv
223.361 334.119 mo
223.361 363.786 li
238.313 342.533 260.355 338.459 285.325 341.518 cv
289.108 341.977 292.426 339 292.426 335.191 cv
292.426 334.119 li
223.361 334.119 li
1 .886275 .721569 rgb
f
226.577 337.087 mo
225.698 337.087 li
225.698 334.119 li
226.577 334.119 li
226.577 337.087 li
.556863 .498039 .411765 rgb
f
229.871 335.565 mo
228.992 335.565 li
228.992 334.119 li
229.871 334.119 li
229.871 335.565 li
f
233.235 337.087 mo
232.357 337.087 li
232.357 334.119 li
233.235 334.119 li
233.235 337.087 li
f
236.53 335.565 mo
235.651 335.565 li
235.651 334.119 li
236.53 334.119 li
236.53 335.565 li
f
239.903 337.087 mo
239.024 337.087 li
239.024 334.119 li
239.903 334.119 li
239.903 337.087 li
f
243.197 335.565 mo
242.319 335.565 li
242.319 334.119 li
243.197 334.119 li
243.197 335.565 li
f
246.563 337.087 mo
245.684 337.087 li
245.684 334.119 li
246.563 334.119 li
246.563 337.087 li
f
249.856 335.565 mo
248.978 335.565 li
248.978 334.119 li
249.856 334.119 li
249.856 335.565 li
f
253.221 337.087 mo
252.343 337.087 li
252.343 334.119 li
253.221 334.119 li
253.221 337.087 li
f
256.516 335.565 mo
255.637 335.565 li
255.637 334.119 li
256.516 334.119 li
256.516 335.565 li
f
259.889 337.087 mo
259.011 337.087 li
259.011 334.119 li
259.889 334.119 li
259.889 337.087 li
f
263.184 335.565 mo
262.305 335.565 li
262.305 334.119 li
263.184 334.119 li
263.184 335.565 li
f
266.548 337.087 mo
265.669 337.087 li
265.669 334.119 li
266.548 334.119 li
266.548 337.087 li
f
269.842 335.565 mo
268.964 335.565 li
268.964 334.119 li
269.842 334.119 li
269.842 335.565 li
f
273.206 337.087 mo
272.328 337.087 li
272.328 334.119 li
273.206 334.119 li
273.206 337.087 li
f
276.501 335.565 mo
275.622 335.565 li
275.622 334.119 li
276.501 334.119 li
276.501 335.565 li
f
279.874 337.087 mo
278.996 337.087 li
278.996 334.119 li
279.874 334.119 li
279.874 337.087 li
f
283.169 335.565 mo
282.29 335.565 li
282.29 334.119 li
283.169 334.119 li
283.169 335.565 li
f
286.533 337.087 mo
285.654 337.087 li
285.654 334.119 li
286.533 334.119 li
286.533 337.087 li
f
289.827 335.565 mo
288.949 335.565 li
288.949 334.119 li
289.827 334.119 li
289.827 335.565 li
f
242.165 391.593 mo
223.361 391.593 li
223.361 380.374 li
223.361 370.093 231.696 361.759 241.978 361.759 cv
242.165 361.759 li
242.165 391.593 li
cp
.913725 .305882 .105882 rgb
f
246.271 391.593 mo
265.074 391.593 li
265.074 380.374 li
265.074 370.093 256.74 361.759 246.459 361.759 cv
246.271 361.759 li
246.271 391.593 li
cp
f
235.194 358.366 mo
291.876 358.366 li
291.876 346.158 li
253.821 346.158 li
235.194 358.366 li
cp
f
278.66 391.593 mo
268.787 391.593 li
268.787 376.676 li
268.787 366.881 260.369 361.759 260.369 361.759 cv
278.66 361.759 li
278.66 391.593 li
cp
f
291.292 391.593 mo
282.334 391.593 li
282.334 361.759 li
291.292 361.759 li
291.292 391.593 li
cp
f
334.799 348.587 mo
334.786 348.589 li
334.589 348.689 334.362 348.657 334.205 348.521 cv
334.085 348.366 li
330.457 341.434 li
330.345 341.22 330.397 340.963 330.571 340.807 cv
330.689 340.723 li
330.866 340.629 li
330.962 340.58 331.065 340.56 331.165 340.574 cv
331.17 340.575 li
331.339 340.601 331.495 340.7 331.581 340.868 cv
335.029 347.883 li
335.122 348.065 335.096 348.275 334.979 348.427 cv
334.799 348.587 li
cp
348.412 374.275 mo
331.798 340.055 li
331.51 339.462 330.79 339.221 330.206 339.517 cv
330.184 339.528 li
330.129 339.565 li
329.591 339.87 329.384 340.54 329.654 341.092 cv
329.673 341.129 li
333.73 348.799 li
347.478 374.75 li
347.503 374.801 348.231 376.136 349.077 377.631 cv
349.096 377.668 li
350.21 379.646 351.514 381.889 351.652 381.818 cv
351.659 381.814 li
351.902 381.687 348.468 374.385 348.412 374.275 cv
cp
.776471 .776471 .776471 rgb
f
354.812 380.604 mo
354.327 339.37 li
355.429 339.356 li
355.914 380.591 li
355.917 380.892 355.705 383.585 355.403 383.589 cv
355.393 383.589 li
355.092 383.593 354.815 380.905 354.812 380.604 cv
cp
.615686 .615686 .611765 rgb
f
354.92 342.91 mo
353.146 342.931 351.693 341.511 351.672 339.738 cv
351.651 337.966 353.071 336.512 354.844 336.49 cv
356.617 336.47 358.07 337.89 358.092 339.662 cv
358.112 341.436 356.692 342.89 354.92 342.91 cv
cp
.584314 .756863 .121569 rgb
f
365.748 379.371 mo
373.099 338.795 li
374.183 338.991 li
366.832 379.567 li
366.778 379.864 366.059 382.468 365.763 382.414 cv
365.751 382.412 li
365.455 382.358 365.694 379.668 365.748 379.371 cv
cp
.615686 .615686 .611765 rgb
f
373.009 342.384 mo
371.264 342.067 370.106 340.396 370.422 338.652 cv
370.738 336.908 372.408 335.75 374.153 336.066 cv
375.897 336.382 377.056 338.053 376.739 339.797 cv
376.424 341.541 374.753 342.699 373.009 342.384 cv
cp
.913725 .305882 .105882 rgb
f
361.409 363.823 mo
346.953 363.823 335.233 373.606 335.233 385.681 cv
335.233 391.581 li
336.206 391.581 li
386.612 391.581 li
387.586 391.581 li
387.586 385.681 li
387.586 373.606 375.866 363.823 361.409 363.823 cv
.976471 .698039 .2 rgb
f
387.586 385.681 mo
387.586 385.67 387.586 385.659 387.586 385.649 cv
387.586 385.66 387.586 385.67 387.586 385.681 cv
387.586 385.64 mo
387.586 385.632 387.586 385.624 387.586 385.616 cv
387.586 385.624 387.586 385.632 387.586 385.64 cv
387.586 385.607 mo
387.586 385.597 387.586 385.587 387.586 385.577 cv
387.586 385.587 387.586 385.597 387.586 385.607 cv
387.586 385.567 mo
387.586 385.561 387.585 385.554 387.585 385.547 cv
387.585 385.554 387.586 385.561 387.586 385.567 cv
387.585 385.533 mo
387.585 385.527 387.585 385.522 387.585 385.516 cv
387.585 385.522 387.585 385.527 387.585 385.533 cv
387.585 385.488 mo
387.585 385.483 387.585 385.481 387.585 385.476 cv
387.585 385.48 387.585 385.484 387.585 385.488 cv
387.585 385.455 mo
387.585 385.453 387.584 385.452 387.584 385.45 cv
387.584 385.452 387.585 385.453 387.585 385.455 cv
.909635 .909635 .908835 rgb
f
387.586 391.581 mo
386.612 391.581 li
336.206 391.581 li
335.233 391.581 li
335.233 385.681 li
335.233 385.441 335.246 385.206 335.255 384.97 cv
339.274 385.787 343.543 386.229 347.968 386.229 cv
362.688 386.229 375.681 381.356 383.472 373.923 cv
386.026 377.258 387.532 381.207 387.584 385.45 cv
387.584 385.452 387.585 385.453 387.585 385.455 cv
387.585 385.462 387.585 385.469 387.585 385.476 cv
387.585 385.481 387.585 385.483 387.585 385.488 cv
387.585 385.497 387.585 385.507 387.585 385.516 cv
387.585 385.522 387.585 385.527 387.585 385.533 cv
387.585 385.537 387.585 385.542 387.585 385.547 cv
387.585 385.554 387.586 385.561 387.586 385.567 cv
387.586 385.571 387.586 385.574 387.586 385.577 cv
387.586 385.587 387.586 385.597 387.586 385.607 cv
387.586 385.61 387.586 385.613 387.586 385.616 cv
387.586 385.624 387.586 385.632 387.586 385.64 cv
387.586 385.643 387.586 385.646 387.586 385.649 cv
387.586 385.659 387.586 385.67 387.586 385.681 cv
387.586 385.681 li
387.586 391.581 li
.890196 .639216 .192157 rgb
f
388.252 337.7 mo
387.074 337.456 385.813 337.937 385.092 338.899 cv
383.996 340.363 384.333 342.274 385.597 343.319 cv
385.728 343.428 385.779 343.604 385.708 343.759 cv
372.781 371.854 li
373.818 372.347 li
386.77 344.097 li
387.046 343.496 386.904 343.038 386.436 342.657 cv
385.424 341.981 385.114 340.556 385.941 339.493 cv
386.417 338.884 387.226 338.569 387.986 338.704 cv
389.466 338.967 390.199 340.499 389.618 341.764 cv
389.363 342.319 388.902 342.713 388.369 342.903 cv
388.111 343.025 388.001 343.333 388.123 343.592 cv
388.245 343.85 388.554 343.96 388.812 343.838 cv
389.558 343.547 390.197 342.981 390.559 342.196 cv
391.402 340.359 390.366 338.139 388.252 337.7 cv
cp
.615686 .615686 .611765 rgb
f
364.569 330.682 mo
364.58 330.44 364.757 330.246 364.986 330.199 cv
365.13 330.188 li
365.331 330.197 li
365.438 330.204 365.537 330.239 365.615 330.302 cv
365.619 330.306 li
365.752 330.413 365.836 330.578 365.824 330.767 cv
365.223 338.56 li
365.21 338.765 365.08 338.933 364.903 339.003 cv
364.666 339.05 li
364.654 339.045 li
364.434 339.03 364.254 338.888 364.188 338.69 cv
364.164 338.496 li
364.569 330.682 li
cp
363.4 366.854 mo
366.424 330.177 li
366.479 329.52 365.982 328.946 365.328 328.903 cv
365.304 328.902 li
365.237 328.906 li
364.618 328.896 364.1 329.366 364.052 329.979 cv
364.049 330.021 li
363.639 338.688 li
362.328 366.702 li
363.4 366.854 li
cp
.776471 .776471 .776471 rgb
f
352.866 371.703 mo
343.358 337.848 li
342.298 338.146 li
351.884 372.044 li
352.866 371.703 li
cp
.615686 .615686 .611765 rgb
f
343.787 341.411 mo
342.081 341.891 340.309 340.896 339.829 339.188 cv
339.35 337.482 340.345 335.71 342.052 335.23 cv
343.759 334.751 345.531 335.746 346.01 337.453 cv
346.489 339.16 345.494 340.933 343.787 341.411 cv
cp
.137255 .454902 .6 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (kot) ()
%%Title: (1510.i105.051.P.m007.c23.textile industry.eps)
%%CreationDate: 10/31/2015 2:01 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2Oede<S6>hAlYB."!F]e>HNK/"Mm#m%=b`7P8VG`.oVanbH(p:!XeWOcs,AgTOH)4ro\m'9fp\lGa[Q.46a>8urqX'0G4
%DRBFIbrK3M`H1#Yr`O62hu7]_f$jJEXd:N%&&[&=P#:)FS/hOofs,cI+5*oWcP>3"6*o/-mrdBM>-GEgDR@$he_K;JE\$mYHj[WQ
%F!#.V7f1Ne7\a3KLM$rUr_]ZOW0Q)mB"=NAns1E08)iJd4a7;`^s@TR*pke8FAV;tJMjAFMr37GhV_*0<W'>uBtngpn+F<SI_FS6
%EYjWLFokh>6*4(O5<re\3?.s%Jff'Qg.?S:kfYl*VA+FEhp#REpN*N!8Eku/!bfXjs&nVOq9=qUT`86$nc,K=n0e/#jP67QgY(=3
%@N1=Y&6Ls=LS#U[J3DD4K0fqm&])@gZdU>sCU+$_5OW)piBR6u/e!.N$Ef%W4p[g:<s$^oa$J!p'Z#h"]..a1](SY-p?-2YBrtXB
%F]FJ<])@9XJ"c$f+.9POH%42>Fl0RkI=P'n'[+dHdB;%=+KB_"e0p7CAWhqc<JeV6pU&KV/T!ENfGCU!aO7i:*&Ml_5AI-B[VFl'
%Vq*nF^D2]ZfG4`,ppo%>s4RI-*Ca'^[TqX,;4+[1Qh@8Z*NR&7F;#g@eK3r8X)@mChHF3ATU,c$<pI9PX]LLjH;L*-rYFMS6f3_`
%HfTr1%(pPt#:1$+eF2!m>"IC.g3g`VKp@.-J?3UqWgiB&G#]'fDSV'A_-gua:XuZ2Mtda](j)"DJoL@f%1grm=Rg>0Gq"6$NqO@n
%pi3q#*cuR/-gfgjZW*m3O));8[7\3iL!Hma?60%U?gd'B5.cjHfaY%/Xp9FX>Q4.E8b3%W_sb<l^ZXYg?Dr=Wc%@'dpOVbU11:H2
%;g\=\]lSB!F+@E&QBT)#Zf3M5H\290GohnHfI9b8B@h/L5KHo>);]`["n@fgn8I7%BD<-d3Eas7l]55Eh8/gXa'?/Tc+PWO4'?g]
%CQr&bDGL-!%p?FQ%g1+NX#c#Y<Z't0BAaSR89>@7eobYO\,HVO;[*]Q`&<RC%eQ068<b80-5KuRASS7#56FDSCK5`]*$@>-%gl_6
%?XK-I$tN:>3'6o_4Dm+C]r'`2<kND<"UgpLpV9XYa!.*d<U`ioPoL_j[U`)pj5UYnc3u^1X!:91OIi3B(,/+7A]2&blaC--,gb@5
%mjr\8DE%PTfT'_uJ3ZINTLM4\-#0)k);%:''Atqt6iRW&W:3UEhH#q$FHctjP!Mt(JpYK8B"?<fT6ADKZ[1`r$K*UbX)5#_4K,0&
%f/Cb%p@pu5`pfJ>?rb-98P<c5%;1u"Hk3'lkY\.og>I50?7AF0mglgGE[2!*MM@S4;N**SPM<+g+at<h$83rOn7T:=3Qpg@O1XLk
%]f*^sTMhE3>7dRm%L2TT9nm5&&f+8)G6Niq*ZicqV1kU9ia]qR<j?)N5D&BfLQ<r9'*Cn^P!:##h1fWP+(l8uk]:VV^:f$$q\#b6
%icDA2_<AYhrA!9/[G92;bsi(i>QIO1p#A?Q#!p'\'J+@<j`Hp5=hR]"elnf$PC'O_lC/mcYPo%@gu-4!gTk_Qbrn%:8mA486@Y4=
%"'+X4HF85\VHBnSPbim2<Gm)ZKfQ3a:XAkTUsT@D,u.Z<5Zf4?Z>:mTdDR"^K7Jg,duq#@F&ZgpcH8ZNAF\s8$rUN-BaKtls*eL?
%iQ#bm0MW:l#_16W8USgP:$`D%`rh\;<GI_[OAARRK.<LN5cs`G^CJP4Z8b!E%^TkPlpmfB["NKI9@Xq;?WHsa5;EPa$VtUJjt2(g
%=NBN0XjjJ$++UA'0e00ndh3.Gf4<jO[GIR=`CoNK)3)m#T'_G\T'UZ:LQdZ$j8!0FVp[#]&"FnU]2S$]+d10u.Al=9[-XGKkZ2HQ
%Ek7V]Z5=s=,-kn,qP^C&`gO`?*7!'Sb@\B>C%oP>0#MZ(79kZDG;972MRAZ'g0uNjF2BK*EjIcko+k98`Dg^jCuS$q%'b3?A\6f'
%9]kJF17,grbi*(b6Y:*gQWq\q(3@%*>])9_>Kl2JqVtkX\QgIik%64NZ^d$/+19,)=h38co1CQ<XZ0Bi[ZaFAX$,@&Sl/8!YCN7h
%0H96KX2Wd7Fg8tMdj0\bT9`a&NPRSM29/ScG'VI#e]Y(Sn^>[*gmg[dW`dP9orjc)1=[q!]K/JKSo&_r]_-$3SFgRp$V&#RO7cR@
%[^dC>)&CeMKC2=A;ELhA)d2`_al:cI[g#=@\4a(N?6]:<D#AZ3iBMg&P>RWMR"Tr7#/:*,C+sP\r'PfbV00?X3X/Im)WgD<?_)A@
%f#f2fn0:jF0Y;_%m8gDt^6F$-OZAtO^n_A;2]8CjAcUr-;k,r'fu09N.BoF9MOus8r`(\m?G#(Zmq,3"/cRji%b+>2<W7+nK:XU&
%,`p]Cc?r<)act%]ec]TsBBF'VF1G;2=gJ)Ggqrls=GM))(7O2alo`Jd31o4"a<H8+70[s^11\e/EJ^WI%,UVe.!P"UZY$>3AO1UE
%4QBFG/AHk9T6]>HW;"8&'+=!uO2.AFhg1\amq'Mn1ct=uXa=5=,j-r:aZe(SAq0_V/f)'HITA"506[/MP@iO\I/Z!ACi$Q7NK%hX
%p>6:Z7C0ak.?bCiHknYn$s.ctPF^%h>'IG\XUh]G2-k0)*EoT*6'bSmSp=>ERUqRhDUr@)oZ&6dq,F-GG.2OI#CL,;feYSs=dZI^
%2e,q*Gl=@<Y\$n$L%5!]`R7gr0BlIRhAOn'k%B)AjS*5_3Pag&([Mla0g:e5c2(PWdVnkmfQo]9DtdlMn`TQ3ro5Q9Qaq)u)2+Co
%a"ul`'TCf(_Q@%nG;#ijd`%L@3LN@Vlu0$dcCe50A$%Kl1\7Y%Ka^U/RqLh`X4B8/28i3K=]T-h*gr=Aq\b]6/hc,O,?+:o`Hn`:
%-s(/.$e(#SB.dIbZOGAq=Mp\fR?"g5/N<=L:4/Q_YkXS3f[^4=g*4hTX3H`)Ri`aFPE1!ZVN$f6pg%DUB%t%2lAJde*Eh7,SBLLf
%1*f'GB@LQ*k%BbO=W;3*)>?dpe/OB`>JV6,ld0ND7!Fik.9EQm]Y#qN7&K1TUrm'n\7iJDQU6MMng2IT9?:/GQ)3@fPsKJ1_:j<(
%10/X'@Q!GQ=ujK,qF\:q_7OnILh2IhY]Dnj[[UFDKd\jeaiCp5!mc)B:,<%mWnasLnM>u!c#T2:/2]"6b)JX/5;J#rO[Hn=bnss3
%P#L\7$o@R"Q?de'atnrrX5;'2GaEmp#?Thk[ZtO2'4iL;BU,X*'.&Pjo9-gilpR8<r+m_)Re<q7V0AYE3OW`6\"[-d>6?BWBeN'o
%@HPQ%bkYS0%&)dQlp\Gt?744CR/O]HQ)h8.-&XI8]dSfP./sZnZe10k@rn1I)c3^"?Be,!ETUQo<SE@o7@8@WW98R^8uB=ip!IbZ
%pS(WidU&.h_T^3%s-]oEo=1\F;dWkJC.trekPOb]9KTm&4Y_GA;p8$-r),/Eaha6'^Taq`<"ru^*<"q,d6.9///c4A8O$-<Yj@\r
%N'11YHFZsd(3](#FtHhK[1!Ttm+T=Z/aV1rfX7h6:_r$DeI'oCfVo7Z[]jNHDQC2OeuhuV[]jKSX7ia*C4&J6BF=([ZN`u*#la(O
%ls)+B/r%d8LJbPu7N!=N%&:cq9'D4PjnoN+pnZ:6RJ--TZI=]Nr\\m^mFD6:2>.sM+%K7SkAf'p\Q`jX`u\\FDhkgO>LhG!]f#fK
%c,@&n:9E;)Aie:hQ(=4S=7][c8LAIt.*X0^B&HLS?3cOfR4Quq*D1C,%Wen]aKdeMAL^uLZe$0IBD_2-Q%M;:n/;42K-,-Kk-^<8
%bs3n&ileEW7T\nN^]2,<G<5VB1L2h$2k0TKM=YZ@`]p:;`>)Tuaf&RQDTsfIF>WkJag[b1Fq:IQY6O%Re3C<Qdkh2s>.V8O!Z@/L
%kMpSS]JHe=eABK>11V7Jk>N?F=_&AYPpml/42jd'"rYF_m3Q<4VDp*lf)'+)>!Ir0SLa/R3?pX6?8D*\B!-OB004LN8iXq<>_on#
%hp0JYTZ*CLMtPuHqX87's%_P2_-,7K`VT%4rHEQc/_5E:E:^O;HR1<k=fhX`P%:isq[9,g>QK#L[>^7/@a0*d1F=oLs&lH!0%PCd
%CVH//SJaP&rT%M9X)5:Li(R<WFDU/tBdqet>,0LEF0^U]qWV-)$ER4r!6tucVB;1/k`aOP*+V1R5#HW@;*tOd53STR'JZXjal5*o
%qe"[5Wo8A[S5NsU()\mMALoTIM[\97:UFYO_i$A),#,L:PPq%SEH171XJX,#4D!oe>H>0_+A/`;Ja]V2[b(MW[i;aS>.7O<CNmt(
%Z0U,%r7NoegrYZ&X>Sp?`dAFM4#IrhAWWnhhg0@j+*TkY_Cb#8;bkdUlQQqGMt+bcpSJYd6t9:%3ch:o@#V7/7V.^0R-E[!Y>_Je
%T\KEVD[t!oeg\_Mrp%9%,#]\/plVN^R),t>DD.,d*e%X^GZc:u(5\AN9!q4&/.sUo`60@pnuk^!W&0E+]VmB?aM08=0/G]m>pN`/
%PB`L%6udACq92M6ks.sfjuS-:jUR`h<)R2f;_2#;:"isG17G(ORd\-@Z5dm=l\A2F3TOT!&"CWa_r@nWs1oE8WZF(g$a7=4nK!7g
%miNMAra*-!2W)5fN\bLuB&,I":1@Bda+\U4Ba/hErSf,9_K4`V(FLnBXV7'SdBAJWQPQJP9hS4\2<PYoS<^/B58T[9>d_'31RpM6
%GUn8U6@uatSNXkZOk"G01pPBdYN`#e()\m_[OMX/p@+Gpld\0Zl.,Vi)S3=k7[#rQA,_aTn_Z;2pcH092(&L4eh^D#ZL#O=mE3]#
%CsT[M=[W4j=#96u;WXe;mqaq@0P@e0gRtM'eD0f5D"ddjO8,9'1b6#,5m=U5^JbPjZO)b*,4a>0O"h;(JRFV\R%l[dgugDd/!.fm
%,/YUc0s`[lGoQ@54N8S+0l&qYaC?dl(itk\q"N!tqrLL5aKGA#o1?Drl'E>Bg\!,PR,rB&nY#0F,#[MMn)g%d+U&,LHG;3f>F:ds
%@_'C&,L]l;M:0ic0$>t'X[2OnB]^D)UuI*+-'X\@E-fiM\Q:;(CYoB)<[Gqj-WPV16RkGuEGeNSas,&02uAMcL,(4Cih2uPP>B;.
%"W->1NKS*tcHm8rpIVjMb[LuLZ"Ze83+ZcNfJ22\L9,cWbGk@*/G#ock.p$/,X!c$Cs]@Xr#?3Xa+FS@OSMQW?FeN\1548b54/?'
%LRq0q<I;9C]G?@P/1HOY[,EO!0T-BICq;\A8SmDgO2ekY5#7Z^Z7+[jDu%O"_U[N4eXmPAc.d9UQ-R<\fUXgRM0S@OB&[fT?+jN*
%Mn.VZc/l6FfjZiuS^Fa1bq3OKMqQlcT$:i&?P]uYfb!+WcfVCgp96&1T?D1g`#R(c1.\g?c7Po7Ms9#+3k(L%/Z*S^[XXR>F.%\a
%9]p#)3qof5Y+Bg[=e*UXcfJ3o.kmI9-H+H+cX!pd(c';D('cTgs-8M$0@8%e2/mVdY/K=Ibf.+*F*Ok+'SX.[`p;e-O>3;:F9=jE
%Grb]cEMHc!?cu#=]2Pl^q`e+;AI<e_+,qgSC/o.THC+.3p:2&2)<I9Q@8oS4S'+ZNjg(@Y2<ua'd5e]uk=S5L4`TQFk1-bSo6jtP
%L=8B:[>g[CQFP7&b:Fh8`3^6Hca-<K\Mr$Wi%#T]7kS3GJSE5mq1c#(8i]feQRG!KWA<i'kmb3Oj[q,*=NTQ\$1'kh,P*dqF5rUm
%?VGgc%lt"P*&U]2^pf9e@9.Pd-IU.H:<NU=2[>b:2lYlFj:SP-$>8r-Wplui(GWdE[KY@G?ce*X!kZU_cXeqWe`32hA2)Jp_5/ci
%SX\gcbP?Kgnu]Yfm8bgf,\d%9)4j91AhPkF*.DE1'J4p2?PjJ/@\TL?aFP8IEubs#\J5#hmu*h.T]$^T;kEsERC@ATY'dPPHs@QG
%)-CQUlBNM03R9HMcDNWiZH+`fLn98.mVL'#DLY)A#&efCPe6Vf=gOFYB`GX6OB6;ZDY=5+m/+gm]t[XOO.ATiSDt"sZrqU5=WI@@
%43&m-/=bb;3W9NtnBCdK9?r2,^2a.#j#gq8(RGTVC=)QfCuP<aa"QO`/iDVqT&FauDABq7-PB_,]AB^]$*t9Un!W4'D9`Y=C6kR)
%$jUCgKakM4QMPOL-_a;#<d`,#3HW)_(g/Z`['nrXh?@-3k1E:^f6L\-1tH9n9O+^`kc,]ona#(gS)tQVq_L!.Y/2>".iH4RR6N"X
%f4CAI,0m7hdJL/s*;sr+aMa@u>Bbohm7ND03ERQCV$%Ltn4K8V4PuV60%W$<5D&5Q(ELh54O#r;_qTk92N$W\TY=$I#^,P58Zc3s
%GGgi.R'e"'Q]JKFmTa9MSQpnl$R,#oXQdbnkp]i#d\'UnT1^t\Q'<gAk,d?<=0q:JRS@#2m&P'K2Q"&G6qhUiQ06&&\^`d`Eg+?K
%lMQo?I9\BuS,'#SddM_17H-[,2;LfLOnopF4(?B;U!ZudE;m#S0"+m]ROsi?LkA?,Jon&t@p;H-XX[V2,\TB)NaB.uHVfV[@q\<Y
%2eo8`(B<L*s1I^rm:To(>G9e9^n[oVTIA,jm6=h7)f!RE-Xa:ij6[5qoFgp8b&gHuFrE4fAE@.V?[D_]rqF-cP^W<W+*t*M5kp]W
%]Z?*Wr8>MZj2-SmG(%Pd&%:k[Nh?)Sq,-56hA<C;]r1&l&,c,055btu5BF8uH]e3t`QD21K-0imo:Y=tE%(E5,J`HQWO-'*6Tb2c
%qEaOj(qB(O__:Ka4pUS0B>J4&rkQ9WnFsn_D9!#]`\7`%+^/9oOUKXHHlRGuW($StJr4FL<FD@Y=Zc?"NEX)(PB-"1?\7gE:]!sS
%YMU)*>JLQAGlM,=3;LI1s4OHgT+/[J20q87h1\K$7L(9)Go.l2le`[P0S[Q-#="Ztm06Vas7k5A;9-);j=I_iK-j7pMWI%#dB0/K
%RXiP8?PB"<#gA9fpj'MNJAU@_r`@YJUfPK<mor9uHJ_ps9=J-=UHcoWhV(BL$\e,+M,RR:VO.3ApJ;m^>Bn!<jSb9=(*Gc=oj8&"
%1;Lke0@,<U/XUou&[]rgSC])/R3Xc>7=V14r,Wu5$ug))AaAYCk&)r6N%DY(p!1=b;-<cA]32qTZ_?G.B4]HU\!o0]rdLi(Y4g!T
%UnJ;&6^(eSrtj_X@.M%/s#!#BCFJpPrgX#fSc_XBCXak9a,G?\:,8popL(a:DHn<-VJCM^,Ne"B=V/p*#E^fF]PJD[$;T5R^=*m;
%`H.cdDqXYK#q,."(0pd)&\4Dc+,7$^;6#IW_'KUJ+r+4PNHY1CH&gX-Lbs9j-iI-&qW['/VI4$2TpZ3:KXI&T>B0K2Cd]#rlt1j1
%B!#FC6Fc\%R#1ht1H2<`B9GjL=R"qpSh3Z=&fJjE%kZCVI(hGoV&:A>M&\Sc6e?Cs7%)MANF[`@XqTQUm0?H"06M*l!?U'`04,L3
%4b#\>2uL@5q_,j8J$37/0=4pM^.>[)?L7%5l3Bs$SW-+@<o$8Us-DX)l^tX*mGi4s^Xa8ZH?os2qWYn@LHh:+&I3.;=(rZ^4)qE%
%maShY?G/@4QlVbfkHILfgHTSB]@EE39]&qp/C;FKnP6WQD`6cR]CdZ'pKs*$!S9'7[[`Ok=ACEjHY6ere(oTD]DhT"2WnLX=jFq'
%_M/:WE$L^,lFc(f\b/J'G@9@7:$:/PDQd:1e[g7[Eeh';qRN_C]jEt+2sU>`6c2V4VedVP)[;j<$+dKNCI.uXHMTXfe0,Pm[U7O1
%B=[t]Y@$VHs!uSA[pSI/)h\+qKu4.%%JlV]5Jn^<ggT&_bH95Zq6ZIBCNfuREJ*#BLoOCV<n$p"/GIH=Yk:'EI_&dp;:kfg[5:h4
%:-GeU2ar<nl`sC"P:I(<D%^m-n,]f$H-2\eg6M7fJ9'@\P<`X#ecD^i^BSFS'5>)kI37S]#+Z6G>;,^\0?M;KqP2X/FR'_[_PF4q
%W&:04qg^_`<pT/fHfF59DOJZ8[O^GDC.Y-V06)fS;J^ZTWS%gp_AHcm>IbEq83j1PDq/lV;!a-0Hi7jZS0A?%%6LEM3"TC,auDS*
%]<sk<%;j/Q+E-APrB;n$PQm,%f#bD//t,i9<SNgqjP#7D3]2HaO4lLZ[Nf4Z\,PY3QZPN%1qeaOCe-NU#GA-gD<,k_'OCeBU"nqb
%F!+Ys2d@"$X"1Q"jUY`#$kPCYZ?RPk6@^SGH3Yu:->!/XMfjo;C4o4M7lo?X[C'2,.6(^4Bm6Vcl3Ki'4a>ZJ-\'a>A/@3Y./UPR
%*2VaA*]@=#^r2fTIW$=k[4)=;FBV=GQ7`OI+33Dp;I*+uDQeesG7?YZM[Dkp:oRnjK/9+T%bO+nlD0jr'^M=A43,_BkM2X8LOs<)
%ce?E$XcmpgNT3SqNs"LRhJ\]W)od+1?G:L74O5+ESS4XcjQ12E44:CqS)s'`DlER^\WbPSH8QPr_CB9l'.`4?3WeuI-=C5QE`>uN
%INr3bFbpSOKc")K(0BU"FF-=,::1BTU!_$.7Ai2O<gd5O,tE),\/\N:,+tWkC0-n?fS<:KA04-@SuIQ/4!0M8RE0Z4efcGADo,o(
%2o)k6/(nib1@ZedG8Uc)F">E]oPt6p%")&4GPi[em"-2?N_qZ]^,7)S9;l>=]^_gF"",VJpYAWF/mW?c#=L9YpeS,_eQT/*g>[/]
%k9AAuXCgo;egX5":[3p2-<jZsShs=YD/cdFL.-!%o?Drd*a,;eDF(c+0bD#h%P15t;quSH;;lCMhsT&=N[TsEYL=dn^n77,]Dj`E
%acXQ\hSfdJ>;gkt^K:S<+ha1R>@WSJ=2_&GM$<pH+DJ%-BiKOd@&db28um00/jl<r9WKQQ+"np^=JOZn!/E%KOT<7*eQNed?YGV-
%=:b/B>c>H4Qo*W8?sHMD1qm>cRj"#?r39!6X?D<r.9gnF#G+nndVX1TQ,/Q\%UmMUEa?,?Bk"[kDBG4W]o+p*)+[Hn1PsP.0%Zo9
%gsoqkJ/BXO8fLM\']tpE)Fl0WI_OO'@/XW0:A:R?]$U(X\_c83`hY\r[sB1"RDOpl6[B;l@_d:eVt]bag1_EPA/CTLkmu(J-g2*W
%"P;+k:g:iWqT:)ABKHG&nV6jC[rr?e=K9rmWE0K&1O+k[03'PCAc)MmjHK1%P8$S'lOLo,[QgYQl)6&HW.N/TZ?cJK^,6)UXFEQ6
%E-N2.MUQ2mHVPFR;'jtfb!d(9PiuE&rLu]&5]_r%[;(-:AD+5-ZO_;"63I@rfj4lD+c;g!>*Y#172Ac7qVK1)<)L)_=mX8L-I*Y^
%9cc_Tp%GjRE][KpJK5!3MNbNic-;[gc1.0><#>pqE0b(@A7HJ'l&/1*a+[rg.G=-]e^D"s<9NpR_G4?N9?&nNo.K5SElf:>-!>VZ
%.,Cs(<GUsO\gK?b.>FHi_qIkgY`mi0QE(i>k/sg+9&uj>+u;I[WEi2r'tWrbO^&rR.bU,YgY+a!Ht2`P%'<er=)@J.N)n[YU2opm
%87nh[F0^`kNQQp-3D7S)EYpTQKqqH%kqZ,r-Do?P<GHB#Chc\/IAQM)#DkR@26PT*Z(RdnK90YTcMG@]R0DA:=F3,0p/O/+2]41"
%X4bn;dZ`UPF_8Qb(7kq:ZJ6;8A>+sDW>a6Q&Td-C*sZg@XbI_U6Dma4G?Iq0nn^skFrH?k#\S^J^QYi>)/:;WHc=DF/I5Zj+-U:%
%Xn0aO+1=6KlJ5F5()V]5V:4`OPI]=AVF&;RI+YP[?XNl(Te*-OWosR42L&9dU70%&^d_d&1:HNj(r74K,8pZRLIH@RoAWpoM*i/f
%Pa9<"cX8Hib2$52>[C1eq/S1'nTBXoma&4C/(Z<OJ]_)4j\T1M8k6%+(0u$bgqt3Aeb1_"m:(p<^@Jfn4]*s3h36/2.fRg:j>o!e
%EpZm;N"Gt4fT;AiQGL#]>Oo<E)^rliBUC8_J_[eb)_7r<Ecp=Qb.0uE55,-qks45t]cu&[H\9HY1;)'cMHlFG9X_%VKC0c\fBj6h
%:q`27[*J4'V>Q\mW\K6s/)>Ma`!ZC?dKb2>Pi_=dc4_[)!jhR&G5SdTq_Q,tdd,!`\h/d0B"9.QQKtqb"qK_r0J4rcqKjtK6PHiY
%##p)JD/?5(XNOV=V^5N2([Y88En5(dCIQ$GDCHWe@4nKd)]8W3I<[Y`*k0;b#-AJ5Y[*nZM+.2ZR?P"KH,k!5p4^@(_!JS^0>UV/
%+*BDu*_8g4fiF%_#":.:+ErU92XuakHM-RUNsSH)9_1Qb`(3O7LZ8UUF\]FD"0XUB8?BF!d\[V7aqr5FeTeFVWn&QA>kJb<^'&,)
%4C:'fltZ_@As9%J1^T$%oi<p`C;Q=5@(U@`5W`TMY\#M2hpBGUSoUX(#pZ_(Wds2&lb]JZBr;:rVg_O9Yi[j[;Is6=#eDIj&47Fu
%H#E2]Ka\Ju]H!PDC",TXXZ+NB@m!'gG&UTbE87=Tg$#6Xk_Cg[7OFbQ[d@b&-B8gdi]nAE_T([%ZL<+N)!]W7\Kob*Vha""/pnRC
%jonJ+RCqp#e4-=&.>/LqM'[Bb6N04(h=KG/M<qJXmS?APVrO:6V;"0dpNOeFC(t&_Y/S;:Zfknk9>pjs8-5[d3W(KWf9:(&fVjUK
%dhqJ^E21faD@('D>\qiAF*P!=;#[6`!i?<IBX3`Rp[V^eY%PD$K?]sXa=kE3[jp7f^Z@V(Fo0YdL[Q;?=Y%6oIcfL9[Bd'oh/8gd
%T!kdb.pZ@c]!GNmkBf.?2c$o7)lr:C[NE9RSuh@/^@PgI4/dh//a#QEbP&RfQIRMb?9DN%DQ^0kc/2`T\D6>NpRXGWTUGJ\h.p;%
%l</Vso]b\tonQl@@'fjrEM]&Kh`2]lCUa-@)@VP#>H?`'m=+U"0,rcgQ/t?=^"WXGqe,XF#<)j`U3H4b`p\mKn"?*.M=p4[A8O9C
%p`t7aqU=WEiF`)Vpf;[NeM$5!cV%Wr=*sc*rSmCM6"t&FH32=s]Lq(s]bO>W]F-Y:l](Y>-Q?^sc*Qo7SNu8jm:+&krP&:#admX]
%,%/!kq=XAq)a<*W?JMOJ>h`A;I_T#F=LlhB9Y<#[#LH0BqpPGc<lKR%[!CdSXZ\5jEc9jmGe*b>rqbcJ2l4dQi83M'cYf8T<@[*O
%r)CGGFg??@S$oF(jfht(q/*P=oiZF4EU1`;Q1"UsK>R&mmI)I=h=\0gB.c"SXM+S<?>*@,2"*YTZ1];VIXY6,_[!jg\'V8Df_<]n
%D5sm>I+EWPaG"hQiB,YkY1>NRPbF<.(QXk_Q>7G!E3C^%poo*\I<4T1NH\UMZ&`NL'R)_E2]daDmB?7+^9)ifFcLBf&bS>*h#`][
%#PW+D[sSP>"g;,9e`2Y\]>9A&d'qP2bPlPB7I`\>iU,($q]EH&9Ro?T't&iAd#<*pIE*".mQW<e<1b5GgNkKqD_>sVPI3CmS/ou7
%pX];`O11FGifhh]WhO]u*j/LmJ,*+:-?0Ie^"Vsu1JhiH)6r\MY[B+Ig;d)K:XK#T)oX$&2ajB9]\m;hH_k[`r;D*7jMCHV>NPFH
%RiB36S(A1C(69LQ%aQX'_VWP[Mo)1JU'_UO0->)I6e.6%n%V"'&5#iG'AE<Ugsd)so%g4Tdlt-s-O3jU!@cN&^3fnMNO<u9Q`t(8
%B'[OPs)u;,s/`Tam@M#]<aWLd,'k^/leMPenD<a7NHY4WNFl(1%_[ThFtQf!c)f`N1fu4B)to$Zb[6(=[]R-Bk](Rs?=,e\?S<B_
%lOS`t9_B`b?MFHrmPUd\U.tNVY8>V`%JJgcC$Bg(mcIZVs)IAWH?cVqlZSVsg>8S^i^=tWE9qHYNh4ojk8pdR/)cS<ShKO0*gW'+
%OM)PQHuD2%]_]50U9o4:/@+X*a48UM[J<*jdLlG^^!R*,]eboYrS9sc2kD)IGa)Y=RK5TeYDV)t[qa:@l\B.i>jGqn?$hsrFL_a+
%>4-<QXrk^SrAF%T$Bqlg?Me9>hQ$muFKU#FF7.o;H"uDDX0(5r_O02pMb<^&rhF*JTBTBP5D)[OiR_;GpU9rheRmdugU#mlqP0mM
%XPi0be"C[TU4'WPp2Hp7g594OLLqUa\$eI6,+Yjtp.M<*4'6nA*C#@h.d,]-lP@E(Bp>H^^A[<A0%e<:G7+5,c95M%FnmJR_E2)6
%Is*JPGlHZp"jJ`ZXpZ5O+,773D=2j;ZkG(QhX0;oiQg&.9@tn_Np^48'7t`8DUi-.q8]IA[0g;mo7Z:8O5C&K]%u4H5--jJ+CDm9
%+o_K'rPss#=8Z5]=C,o_f'BN?.,6[2E`d_gr96i<iKespr$nL&^"8G/%puEqg1WUTo%7<AbWlW4-hViCqV1$8iSN$"qtBR32[/sL
%[@:CGh4%b1mHr0SFo:kK1u3UkeW*_'fZQpW:Pe]]RRo[gM[CAOh*;@Y.@q5\K7dIm2?*GC4AIJE,&K\J<Hu#O$N67L^2rqOZ\:gh
%U4pVX81@G@)d)C%WCSq"%4:CC-h\Y2'5O<JZEkp'&knrT:f0M6K9AipOY$_"&8>pS2UdV`,E3<k4fVNP<J-$+*[Cb$&$=fo6BEQ!
%9j&=DP<cQOf3T*r#6Ie<jrp)2o\ea;q_rS/Uj<*28Tfc8#k9[8$UFnp8OOU+\]e,P'fE[AR"/e3*Vt#Fia(1gP%jHCjH?X6Y=d85
%W^d9L^r!]/QdM/,jsk)biq5jb.RoLhjH5QC$bmU6CMLpW1Bca5Pb\H*C9ijI8Tm#:Zf9S9X1E5n!+^D>kh='HGsu-EUG-/uX:^A;
%A4EAp.VVKV92TV.\/>qr.ZH\6<<0;"arc\ML-dj<UR+nKd3f:.LX^q6E^,BH]<B.#f``X:(qe+cJ3!Yc<K8acZjQ[XVp?OEI,7Hj
%O2Bl1kH31DD4a0OgUFVP!#C&5?kLT?orX"GU]05coegORgAS._n"4@P[W7SN(bAQU:SW.p<+qd\aIiaMnpNEAZX]BL4PpG45YQFs
%e(Enc\FspO<,g0%4qk8UUe(7!oDtD;g<Zj>CM!=[.mAIRh;car*7YDnXb/QdKDnVeli-=)V<"h>dX$;AUZWWoGKobR[]oAfn9a-E
%k/O!KCfJp79OItO</f+cZEa`]>cYNj08,sim2)C;msQ-T6,A'IAZ,%qh.qtC'lS#.ST"7/e[d4Wg^Q0WQ%.*.e09D4eDfJ5Ka9^2
%e,jCn_`(q;c\j0SHNt)HH_2FVhYOr8K5oMRrorFqdb(N31rEs!7T!#B3>$aJGZ?6mrpFI+rd4-BmA,$n'LL](2SenY>8Zd0gW83.
%$(FnIHdMOsW^;D?[9]nk7rXM%#EOe@.sIW,(1+V6^HhkolH\PFr=>A.lAm$hWr>UWQ'eSAKD+J$B"!XVNVC?I;pbcqWd=iS%(fF3
%Q&[Up`m$M]5F1SP`kgN\##7;)oH6.Q@'%B2[HF#%;Y>M'gX5&k\G[R5JQ_l9@l`<#MfcY9YMK/IR_pOJgX6O\HX/aZF+5.1G,a]\
%X_u7S.&O?7&n5Rn^-92X5&Pb%V6=7oh'd-J#2bqTEAQ#mn8S3cK25?HfmU=!H>ah"q9XMg&cmUq[gK<G*kX'>moK)l7d&O8Xmg^W
%]P$Uq5OOo,F?2G@Hp#H`ff].ZD>!ngm@to.?XNBNNVV`Vk:c6ji4jJF#4F$RA\N&P4--P4+"1Q*X]Co#$[p/j"T5%:Mr:CM7-d(L
%Bb`nHjFat+Isq@=g[]RE_I9sgpADgNQsuXm932%lE3NXH*W"nqf3*TE/Je:-3oSK7^o=$eSVSB7VEHs*%7F"4YJJ.D1LJ=%a'ioP
%W+-pQYJ%K1B1Xu$Dd6X2)=7<.3.+[(!%k91XO?9S(YF#E6FJqGlG.dNUXVIFV`-LK4k.B:f9UCn]87fo`?X&VK#6p7Yua#S3/e_&
%3/gX1ThBV()Jc1Ds3\CWpqrGF_c:<i#-`DtfeD:84ZX7<@c'9XSdgSQrT_Q%lHA)2a_)Uuf1W5?Pt_Ar>j6WSf8C0rYH;S2n'iDK
%e\6K"8:-6+mG]@%:>\5*dITF=bu]tRXX1iHQeo`_Jbp&;hX>=;^DECo(M:#b'e6_=j*S/IqX/]YmH!O%l2']B'!Fp]D`PdtO"h0)
%?MrdQLZ#/1SG@5+e67IgI(o`2pi3E<lb(pd0h-+lf=QSjVtg2Z`HBXYppRGS#bLM,c)i4koqcnR=Mt@4eoLZ,T]!!i5&F<n)L#+W
%PfdU0hDto-)IF#%%plt%*:BuiG`5^YfmgN=hHbsCKt[Ei?WQK"UD)kaGPA=[=O\Soe"[/@2nSf,D#+"+FL65b+Pj'hpj3[#qXiM<
%pEu5pq#UA.:l(,nVg81(gLWg+DT4['nE0J1dS`0@S,1AnhVE0F*TV7'l'En>NM^h"8ostdGeEn<_tmOa[YKQ8j[@ukd4fn&^,NKb
%.'d$Y*e,7ano:L>`?4Q52J^-SiNQFm2]C)'aE!T]f@O)2]l&X$j2P\%Qc/1/UWWI00R/I.$N#VEhhMs-7W5X4kXBE<[</Gh4:0k_
%Dnb"Sqh2i+5l7&?@D262\5V)<g[O&[rLr*JHK,o''C0dTl.M9Vq!$s>?NnNN,P.RGc\&Xg2[_"Pdi2Z,E4(neKHR7CcVu4.6*0IL
%ejeKmo^M:n>=YXQ&%@Q@I-`,rElhO-Gl-Vhl0-.S"-E$OkH1r&pF@G)3=P.qJ*V@>h@_ZOqVo6dWGm*,qcZ<tT'T:e].0eVFCSC@
%AGu2m(bL#ZUU42!!jUe^%V>r=`T9IZdYs@Hpq3hR=:!sce(FQ+d0)0_XKb4@09gH/Fa'[iHq7ZbbgR'Z4ulu"ppbt"6lV,OFaHLs
%[>jc>rF[)+L[/lM55OX%aX!pErt;^jjZeZ8c?EU3oOP#I#@Odm7fW5l';QbTn(rR4`5gN[Z"ce\?C(#.f]s?FJ$>uTeORqm<f>L?
%]UW*o!8a$WkeB/C2:blujS$&=T++q,qiKt7rlb$(`KU("UNh0iIOj:RepUXM1g8L"%Q1(>VujIO\GC7;_<9hLk78ZU(s[DTYYs2\
%:R4VRL&L>K=5PT\,<1&^4=V'eDZmO1IW;:@\2@fS)LHZ/SM0kR=S'Mp44c47Po<4)QNqjZ9']OX#Wf\B>e5)sfnOe?)gj&W?j+$t
%?p$W0=M=.9V7UaL)BOW?p%$`2XjduT_I9RR[*pSEB:iPf-l)J_*0b>`4KpX1C8^Cc`^e>`8eiA_-PL]\Ktp$"E+?3SJ"Ef->fkkD
%h$fU\]o>VGcVSB"*?K#Uc3rLW`ga*,hXMDh.<ZU_X1/"(F97EZPn2oE3S</,m[bDYXM_dDXGR\WkCrW_X*]5/FjZ9cg/!pL$O6[n
%m6?FB"RIe>=?bC:]R=Sm9*@k.5%'*A];70R!p_d6Hm4k;71:3<^F85OSNUN+q`%\qQgW[8%Nmh'DS]"V]ckrXf4o<eX]iaQT"X*g
%nm'-IVmNm[h9>JG23#6=:A(EioR&a_4Y9Y,p#d:h6_eU>gc:K18gh,t]$\/3rQYJCor"AL1d$c4&^@t0+-sgPf<=lT#D4t\Y_2JX
%`LUVS#C^Ka#qRudd^L%%ipfm^X4;umkh:D]h7YPScZPlm`U*nqXlK-(PmQO^Dnl1T<W9FJIA;)f2Y5UtBe1TVo("qcGFe+'8Cb]a
%i/k&(?qu`T,G3ii%cR3.96/ItR/YsUo=f<nd&Cl,K+41T_1\=Qh*mIg;?Z,=^X_!3rV+"ui_K/h^\DVZWJ'T:4*'G^cmUhA`3e(0
%]lQn,r=##o8&VgIUOl\biHB-=;>ZXeYO<K_c`As?DOd=.qUWrim>%ZLTr!=EV/j*Bo'>h=o^/^.6qq`:D>kb]W(46)jpc:J9-eCX
%kF]Ok]O*.[h!Wr'qTo&"8k4m=K4He2YKNij,JAH_lIYn<\>"(0h)FcXQ4$!1="\`Am^-L$h=Cl*BY2m:I0^DJm?HM3p[5c1?@;b=
%bP,K5iRdCme)ZJGRg3j.U]ZqDo7LHDpsnc5O5mQ$beBZ4/KON!XH_<)e..ZmH@Zndb1Pp'_]F'gop)ih)I2.UrYQZ)hE!hO]ITTM
%\*GJ97Rg)+065jrA>sJ"'&A,N+)iZMoBarDn"mnXH=un>DpV6k'8,5T*UadpS)s8$^&!@Rps@isD1+P"fqO_.-uo;ts.G%ZWa(?\
%o%,U3Z7RVp"E!U;Gkg[jK2Q\c&BgQH+Ukof;Co3_0>O>(hVC.uHaofeQ;j-I@-e@-LK1Yu6s<&[l0IXSrnS4TZe;@](/L@_<!<bM
%.&7T*D[QC/h/C-ims!+R`#<(@\FXZ`C\c/n20d\dRZstj$bZ#m3eI)#qn6X]j7fs0(j:t4DLXY2HkQ^JL=$k1WIn/^nI_/[Q-tYb
%qtfOj#`,(&_1)B36h!Jm<Tj$Q+1:BBn7Jm#!/Bj0jjG`-$"hempQpfaY+8["#$JHG#B.AL'SM5ih:`<>;jC9ie?mZkO/K,>8c-\Z
%O_>Z$pf<]1,JpPQiV"DOq-&%BnSVl:!4NZtfr>I`IuRbtFUqu+q:Ss9B_h%1=rOF)E3#OMjiNCoD4[>ambf"0P[Kq0kQKXop@mDG
%gbSH#pnduK7UkW:R"Ek$jgQlO"Gt7oCP[sWPjWAF.QqXs]Er1Hmr%9GcgK][H..cPc)o.YE`HpKGiq1djQ?-if_\/Ua?<5XaM3Do
%CL:-IKu;1)#\Kr6R#!t/.2U]l>01_2CN5[JC[5bChJ@kISO:$ajn+I`H%CUfq?("BR#\j0%)i!0O?!oLDO#*XmrloUVu3sWn_512
%<^.$'=$D"R[]Z`K4?.+Vb;\J1G?nVM.@us9@;j`#ICb'kk5N':pS)eOV'TB\Ir4eK%9&#DFdNTM3SqbtlRgli^W4+:9;N+>jHP!;
%hC@dOMW0.^\_kcHGU)tMiF*76=YB[,,Hl]91(;'fT2h1*`cd^KSR\G[Xn,#cT<GU,oMV$)8Tq"ST#8`RptN(GC0g[T[=_L?rONm7
%dS7D;g*sMp'EQHQ\u()S\CW.<C?\4.lt\./)@&.T$HXo_(m^b!q3/BMjqcf:KDb\fm]R5W<949M[^pA_s)i]R(WQ6"/*A-sp\;5t
%/;_5(kAG1H,ru*0)g1B=S"1aFN%BA[V'XR@&JT^^VlV&67sMk3\EW5UT>1>;J8>o\q?Ee/)i("(jPYY*`XZ<3j>rSA]&Gb!b6h]u
%#E^)r61TXK#/7Zh.Jj9@QCiALbKd6"DVk-d0\?6i5H^:GU<#4!>u%__`ZA1!L*T6.BP=i6G:2)7d5[.H_9)SGn)Z%g=Fq@iZ&p0?
%H/!MtS>ff!2Cni-Fs92Z'W=hu%(5#Y>HqgF0&gMH[L4;hYBNl'D7T57/T^"h!9jZ44*77QMA,.T0D5qs&#RuCVg2V*EFL",Yk!ej
%k<)gNkU"0T,>0`O3P]bO$RVQ$Jd3PS$j%Psd"iM"J.RJg$KC4h+1Qu]U"^eX#i%D\_0d,7Sf^TDZEYo>Z6BZl$M"su"1Fc9%RhO*
%![rU27':>Vn,P#@.Ek:jjN1_Zl4Iqfb.E5f$;i"s-7B#^jY:1r]GlUfHY!=N%FG2Q=(Jk!#sYj%G#9;q%4'3i,S"6h95XR2K.Zl4
%j[ohr-UNFPKWu*7pEKus`Y6,lj67ok"cPc,E"/H?:h9Hp!>GR?T_gaB8:ups!/e9h?n)IZjM_K9Skp%L$:RB<?584#Kn(NV!YtO(
%<^IJ:]]EO^`qd[jR/<P6f]Qt12C3M^,9orX5m-@f;\TIJN7bE3JDdqDCg$rC!$3&]OAkLb*6J8Qm0++b<'h[L/HUc6;*4^BGr>b2
%dU8g:ZehsH8@&9D]M"B7(nLH1`X;Y3"gP9f8.0D#+t[gu!L];KA)@m*-ibuM59GWSK:n;8k1PMRLgbh:J8AP*$'BW1k_+sM*f_1s
%@0*aVMZ][2:(0i!_=aXF4#XJ.K=9O5=J30d'+2\[RM2Cg+Uppr<YWE\7]gf$.j8q@"eI@TTm6\\"&JPPSol%ZIIKNCD5#TZhGX=6
%UB._Jl^$W5$W&5a)@7_s:`MenksGlm,PkQ"f+`@QOX%IVE"UX4q&m+V0e]o1$GmqTL"[s+,gCNrL[f:UA4Su4>?_P`J\n;2AV1Dc
%[4D$8aCn+aJ.)$KO:O(KPX2&Q@_/6d`6f\01bc4@"#<4%JY3-$W18b]RY)"X#EBNE5_d:pOi.H7+7I06%FQXl;9Q?M=/:aF;l5Cn
%&[;OQCin(FbPso`kTURGe:\-6"T&kPZ('*/*%kWUZmt(.7_hP0&WfNndkjV-&j"i+$p':]N25R/T$].RSl#nma(QeYR7;a!NmX#1
%Q,8+@3ak@OF@U;8U>Act7GXBk>:Mttk<0paO#bk."0ad;J?H.$QQ.Q([pg^W37u"IH%]$;#92=kckii_3ER]ipl8u,/6([uTq-/,
%5][t4F66k],M.udj'VsGD3f)[/.ggVM%^@W#f.X<@D]h^%K*8D*,H1:@Y>4)(7PcgKSLR78UB"h$qoY.*%[7802=K/B[a8P6PU@T
%We52tN=Er)/R^f%LF#3RLF#?rLF#?rLF#?VLF#?VLF#?rLF#?RLF#3RLCHL]@lmG1=J,i+LffnZ_a8M`)OHg\8L^6BW62q#$%l+C
%?t#Q<G+pl3PeQO>VEH'?0(\q/![\-rObA2f&A[kh$3(@rKoQlpr$rs07hP&+gW1Ud0?(Jd-\R#kZD3)"7@G0B$25?)E#O&B]7pm^
%pr_D"mg91.Cg=ihL1!*E^e]4,&9)elpaAg!'FJ++5l6-E@`MTM[W\iFoA^tP?:0eqLGa?!@);M85UkJekiH;EGS/tB6Q6Gt(sL"5
%!mM$'hmc`1KL':8HQ>Fe;\(/"(EHr>CP^r8j)F`":WGa@-JWBm:\]l+abH1h&GtC/>_fjkcr!%T9Xn0"&MhMB!acQX%4USJUF'CN
%oHDMF2JAJ;P9?*t5phi(`?ph;IjL>IIjL>eIjL>eIjLJMIjJZ:r`(JDG-@^#g:`Y)1A=D`aP89pU[i;uMq\&j/i*Hq#"eYml5KgG
%FUdrGe2=f@l5IVCoaGoGUf5LRP#=">91m/CXB$h9/Zi!`5LYQa9o..o4'oe?7UXV\:5^*3\M6*Hq!Nl[ODqE9oT:59ru,>/$;[Z!
%.hI)09fn&YNGp3dGR=BW[(u5FmM5L'gaG#I'pt"(X>93$JdOZ]8\!A#!2W85=!5JBiu.;(iRBUORA?M9Y4!aNlOZJ4]1*sfL$^;I
%?BOAp:;X\2)bq(P`]sX4[\[S(_Lt8Y5pX[PEN^9Uk$89hm9L#om9L#ok$9j9bde@Xg:7ifb./.Tbdg3*Zt\=+!Y%!02U2d<cp,6a
%LI315qZGeoi$@,/dKhpOYTndkW"6lnh@N-c@KG5-'CI``@-@c6_S)ZJ]:P@.Y7V.U,eSRCZ)B#_R5WN46VL-U@RhdJN+W<_D+A$O
%Zc4W[Kj<YA@u,,04b5oN$A;6/G0IA6+BRX1#nkf'@5o#@/!#C#gGXL'%]"Ppf8;DOce5NL?d6Qtk5c>"LUec,NiC!NB8t=6MIC<`
%/'rYsG)^-oD4NSISok=89g+;!R2[rR29%W!k)L/tQEJ@)<N+f1c;"(6Cbt5/8!n>%fu+jFQ>f]]'kqP"-QFY@'j3j>'qhMG<lf:b
%6]<O,d(jEuct'p25=2kqj/d7PesgVk^6W_N^6W`i^6W`i^6X:^^6[94q-$Zlm;,?W[Bh1PABpLjP;uiF:Z^h341-RY!_Hgu]2Zu/
%A6l3dTe=m:;3r317Qnol1%hJWJpLC98KGtOZ.;>*NjU>lD`ku4DDJsUnrqE&4MQ_0/+@e4'5Xe,p*ma*ntn*`U&67%KSo+aIac>o
%P%,m1Rm'sA(`o@JVD".=Phq)^&8-ZQoHr!Q`K<o6qTrX.Y^A/@Z6J2e2_j7l@7DHU#t"KeBIpoTBk!?-:dY8:ZnMZQ#"bfrAL2J)
%9pV(:?">.APSCWR3WU[nOr>pDPU&eB;Na;S(a%BbRk185H/f32/H@(r[>72OWskQ=5#<ChP@9M/2iJF&#H3\)9.^7^@@?4"^j;03
%AXnb>BOT!"oM[$22=Sth<Y37TGTSGXUf(po6s:.Ajn(9`EEMcP28Srgnf91i,!23?LKT"@]0SbD0tH449K>D#fL;?',Eu(0/K@gq
%BE1/C1-po!1InT4OY1>0\1WjG=r0_!Ma8"E$!#>cEE1AIOt%m(LH&)k2US\=5r,tW1r)%*a\B.h+q^o?S!^n]ia`62)R'rXPhZZu
%lkl$S`iK9>.!9D@^AEd<b&%23:hGQ)RfV(GYY]3N+*8Z<U>.(Pji=NnaDF8/DI=d^m"/U%jOl6kkQWTaNelV`BQF;KWU(r:cXK?5
%ELu%:D<UVhk(3)mRSf[6`$C?^fnoVR@MF12Pe$2iT&6=R;u'/Qd5:$cAIk0WM.K&gm"$uR%]MC;jSLRQ1h.EH@[Uhq#f9gh9(YU2
%b)$YtNPJC?C=O9MX\fK:P^3H/fliOXAtXEhPZ[Ph#q1Sjj7,-l<nAf//buiGbf@V;1rSVr=';'!7P#Q5ncmGM6Pq99FE[mJ^>_CD
%-bBa;"*AUKkUt*bmk/)#-5<74]"=3FI"=We_t?]uVtE`Y97!JI?ulJ2]8:V]M\ddIbMi[tf4s23l!!K1-sb!t#"mLQJ:Z.V3aeV&
%XU5mn>K['Pb1<kKJ[2[E@%_><%N$U"b5ql?f<TpXd^@f";S#mjgb_XFFKNQ>Ve_^tVKArCNRG5G4e8`ehODs$-Ld[E/IOZh>K['Y
%b19JBk\Mhn?A``+p5j6-0Ag;Z0eZ=A.@3D8BqM3K@U>XJb'820.I@1.V6lF3Q""X&</S53;CV"q8Yre`-_4^aSofhn6DRO@&0d[.
%J^=rr8OZImEBR^DS+Ju+7!bMVe7ud(2lQfc3_0c`cp;unJe$32_Gfb$+eIaVQ)8-LNq0R2Yu%#mHQL>YZ;?,CZn,1L4KT).-r6m1
%"\R7L:k@'%/6'u1=rf%gRT;ocPbr#S!i9U6Ud/WtmA27-X5,bsBj%AgKMj9sbJ9lH/IN:A;leZG9WdH/;RJ&VTN!M$'e!)*@KfBS
%Z<0DjC8o*mW`F?.&F6;Q*#:&$J!a>(GD?YCW&o+"5i'7C"mQR5.St>&B1C^N]cD5#M\W0P9WUK?X1^%JXEM@SZRf-"SRo&-l)]aW
%87cqF0SGR?:3RM4'r\`HX?bU\@KkRn`2i;Y/IcihM%rS/=KFcFVU6VWe+f*#Z!_!rF/du[U=Ba]a\oLiTi-bK4#fj[C)9Di>38[2
%O3QYob%#5=7<r_:gaJ6.iXVO"Amkr+Z$"\bH#+4=:`>gW*BK2)U(0e*l_oHafK/:7!\'C_B$gZkT38Ndfk1bZc9?"p.Jq>`"j0#u
%BRu>m/6[k"7%cfeB>ROmT/G7g4DuRsJ-?:U"tWRn2,O:3Zp6]<dK115O;=3SJWrFs/Q)Z;fglEOUnF!'"U_%.3`$qFd")74!=KUK
%(9fcLZp;Y<U]iMK(d]XI""$he'juRoWIVu[X+8'L1k5`:U]E#C+;J:86H$_iXoa9P;?75LRcRMg=h?M^EFp8S;U4"<k`iFI6BlM&
%@0<?r=kGtgB,rm,b#sE-P]:;D"(e!*fK^<e*B-g7=iUu9EFs1mAXloY5T+5%Ypne9IJOLIWKa`TRAZQ40U-V/aAL*J\S'&FZcI`=
%cC,-`3GUf-l-(=ZSTJIpKha\8\719ch4urB^VdIq3+PnkmD?4cBHKae_#,o9"7sR/%*BZU/nf`.b/!p0.>*I[8/HBp6FrhB(=E@%
%[#coETS7JR4&s]4m<47=;S&N?B+]a8SHT:P3suTj@l/M-0cFBH(_\'S_QX;s'LoE$$DW:uKjbQ[RW5b5TG,9UHppmT'@&X9N:TNH
%\?6La6)7EU3`CuAd@AiFR:<P$f^1e"N&4$N?ra4/lr\<RP:FR-ETifi0f0&W2GBp(782tof.hescN/)_WF?8f9qE397?O3I`B[TH
%-W`$U%JLm,8]O0#buQPU7&c-O7YtcJ+]*l*m6nrS^u`S_8S"@!N'-,o5j4._6"Md,&Pep<f!+b1ZgJc)3U>N@idEV^%%ohV-^Rt-
%)'Xu^#&%QJ=6$MR"$k4n/[f>C#[4s+:^,eqD6=11JI/r(1]\[3\UU^f@3cSZCI3]D4G)Xg!H-ZmVf"<l7ZS;:9GoPJnPlf#.g+3$
%/%Ma5_p/WVUC8=ZEp_Wn6n)]o-uigKfYWW=+JB2U/lY<^jTd@a<sHN..g)JV)3@4r@tJegj3Dd5G7Nkhm(=L];u($a8<c6$Dap06
%c'31-nAQ<<V>i7S$Z)..LVP4CK4Og#L5?0,dR:qik,!+S5UDr:Z=>gj^)=XhTps:*,L)Q5N=sMr0?!TV.,g+;67d9CKJTuGKhdk'
%3(Ms;*[d(h#0n52As8I!`f3\&1cL(c.cUpK!sWomis[,aGB=K9B?^_.3"rbNj%SIrN3eh<VjoV&4QW[6dhud-04gYr+)HsFHrhsi
%8a*ET>u*(:B]tT@aJ&fcj@C:9kcmt&;Z.dXp[k2C%3Y_uJ0A:5=Fg2K4%7UZ"/AF5lF>,)0J?KdPg2PmQ=I0g$I--H+:Z!GUWJ&<
%]IM].(6,pAR,b?MkI>:K2"6r(!aZ6YJ[_^;#bZWU+>K$[,+Pcg;0(>VbHdU2%5YaoWF=r@.5e24"6G9Fo?b$Vk1;%@bksLJLUFUc
%jKS>jPT4:qSW^n7Yu>[F4*F4+$cc#1@HQ2k1X$h#AVRU&Vp)AglpDVhgp#)^C+%kK)-l=B.>,g63+[&#BUusc==aQPo&5gZAj2__
%cak&DorL5IkFS(L+6#DZ$d>`:/hjb0\fb8\BnCLK=qd9--VZ:4SJ4A:.T-E:b=E54?RJ9MI[q0=qfPd>mFOoGQsV4H@"+Yg62PfQ
%"msos0M:S]p>K6mQk(QM?p:*&J`PCn5fd%1W,gjm$I"3f.d2=(<KR0T'nLZ"+guTYR:57..5T2\\kW]MVbX4"mF3RBba^_jL7(u<
%e?JX-PT!S/M))umX&EVtH$)^gCH"e`@I5Ek29`]oV1tC>VpqsElBE7=?@<*U<,S(KFik.LY>2W:k1+TlR$cF7@4_uNL7),@j=p2j
%PT3a!;/TJ<9Y"ToeqZ6BV.Cm&4`fqB4`fqB]lo*_]lKA@4`fq@5N.oeqa*(XMWgMV[+6q?:0ODu->AJ5WC*c9b(kYAq/m.[k#EY0
%Kd#NF?ROp&?ROnl%g9T.P+ZHJ4i@UL%>-7AJgP/7OdKc'OsZIBB:bZ7\]hBY/lt+C9'0lT6HNKpg*rH5>WZM<[1B$KY4cn#c"4%`
%B60JRVeiO0m$,a0St/cibd6V7/p$BDb12NC;RtMd%md"si&]o@*'7_:R:D;JKMSM).nQcsXr7em\2'[O=^pOB.8-a(5\Gpr%oJd_
%q=Gi-;d-ta3b\Wdl(eL2=-*o*?U?fhS3#nbEU'>$g3&MbB]hi7^mqu:!Tqj&"gh&Q(!o.8[".soXTcqFP87hu:0O;rq@H%D/RU3%
%[",^ZL]o23$V4[%"WA!$!oqNs$(*Y!-."fJPsBL(W;uPP6QGPAh^DmhS8tLNRo@a7]5pT5C3NEE;s)@SC!,3k,u(eVTqnZ.8!Gf@
%m[Wjjbah[A=o1FS=OmtF'$JLg;du/?F%S!!Dbc^3mELD_8u?Tr1Y6>Gk0#35bBu=HEAaqa`mqq&)OEI*b2Y6i:3g)u*i3j6]TgEI
%c90?r.\Y193<@HR3<?>>T*AW48&Ch-EY(2E)'e:I@XJ8+:=6Gg0NV!fUR`ZEN-:s`S>VZXQn'QF'se%U(5@?P^79^d^79`*9G$c`
%9gYHIngKe/as:L%rNjD;J(K"b>ksI<ZIdsK0=dpk\bGR:d64/W?=ZKL\4ktAlj;,"0EBR^a7I634F'Df/E;'?8EDodFR0Lb4FF=U
%aMDf"lcE4o"?uTESn0WCjgY7L@".aY+G/_U"S*ig<K/.]F@)"]6&b'Di1t*-Q"Qo$1]a0lL8YZgXK!/$X.fV6I;G'-%>iFOkl8iD
%HQ3Ct^[K9GmmTthE3d/6EAp1j6+\=,A<2csR`A2`h/h[43/P(#1"d=WO*'$Ug/193GbQd;O2mEq5u"bUQtQkghML>t195R4OZf:P
%$cB%gKqTh?g;8N.6A@WeP%Yn4Zj$&A0UGP?/PSpG(#\t0?4*j_7.YYt/MP)F'rNb8`+3'a.Wl*$O[SnfZE4t)X@cp"M2AZ[[\]'o
%O,kQTa&Bt]Ns:4hNZ8YqiJ]-\OD5t<m#aXXaWs'a4/u'/1q6\2Fqnr=B*VV.C2o@q#f[F$>=3P5[]kZAhat7F6sd"J0qhp#+"$Qe
%L?d9*@B:6_WO=XG<u\YGm7:-LSTK:[*=P5Aif\,5LqM/4)9gJrhUYMoW\'2*jPg2UMhm4)JQmNFEAWfe2,pJk$RRoCWiIt9=,QHE
%>J<7TQtRpKUM;2X41PtU&WtZ`@u_sn`XmDo6ZnD-e#KO4*Wp"%&@Y(,(a?#(\5!sk(_'kHi6\`Vn8J!/rrdYL?cGV,o)^Q_GpEn*
%ZotNs&-uEfBI=7Y-4Un+Z?BJ5LPY<ePB##&D6Qqo&'i=gg.%jgWpZ/LB67bFdds_T%Y&S86ROC-Ub,KD<%_:/n,&sce&6nJqXK]d
%UgUX`$Rk"9es;B'$7F@>&UCeVpdel*/auelT5G#\)-8E&RC4q,;6>:p,VdhMJDn#)C.iBoZ;PNOO]P2:O!LUW$8JHMD@<6738KlI
%-E>UWO!LUVJdJ(<3U*t]4D$)!Q6u0;l1'nSFB\be2OS:f-AldSVV35'U0@Nj87JSNb^uWI5(nc_';Sj\6scj=GQ]JOMC4BkU)fVt
%M:>n,*?lg[eW5b:VV@""XuN75d2't&4>5NV-75bCO,kQ`g57%MEPka[i)/"BS$b[Q?7e<(P*g,;auap7fX-@%<h+89R[C$S5<b6t
%C+D0*@P'X,%QN)cL<(hd)6=>"H(gobr+&/Za^Ie;BE&Bib>+698+_+Ilmk"6j(Io0O$)4&@pr+b$H-qt%N+/LK\Q099SfFhn\fKh
%gQA@!'IIuA1_N3Dbm1c'c,P%C0,(TS^-QWuEg&4TE2FZZC(XAX)b>)@FBeI?Mg!hb!`M7W-n[o)R]+kUE1..Z08B:dWS[;e--jaQ
%/i9DV,&)K`;95`4dPN2YY'pX4R9E]Xq9u!)/P!j5B5.De4H()78CI0JEFuN<#lTd3-h`Y]LQ3c,%nj>oLc'$ll@LB89TnTB[cEM^
%jTuX:ZRl^^`5t>R$VCuNNhN,YNh(A6N4CgN+c0XgZ]^o4H,[R1olH!u6e',4aD`@i%.^Q\qgM6;JR!2,Ca_nE_QF_V7+E)G0)_l6
%?.V;o>@gbT^_FZq7ZQ9JSg7LdH6Yk#E?WB,iPQW9]@V#&.1(5V0``pj9+Xu!S0HTV^oJ>J^l+]Q@b5&Xif5GBlH\$YPQ\XfR"1Np
%26uQELN&^cDhOUkUD1@<hSPh#8U/.cmmIbC(BVn/N]=\/P(ZmKPORjM%7IdV6W%YFiDg:F;T'[lLL='Z0h_iA`+HoAU*S\t`$E"l
%=Up7hIgELinD[Y.?ndf6+qZcg-/cbTMf!eL?JIGl#01\`.1(5V0``pj9+Xu!L8*<k^oJ>jUkn<''<9rFiU"Sn?;4#,X,..-kueLP
%g-2%HD$%?n"=Lu]&mcj[.HSNko,-UuN/JNKeFP]3MNUA/&X2GDB+72=I\J5C'&[MJ'B"VT(<A'p-sitD)7Gus^fD*^f[@)1%9<?<
%As8ksBZVu#oY@:];FF0J%Ulm:jdBG6=[bniX,..!kue+MY+JVq)bFu`_b"feYCdX1FOa$!N"&3IU8s)AFS2t0G$Y+ZDPQ0u0G!Eh
%rAcc:ePnrgoaDEO[;^R.Y`_N`IJ%D!m$",f:aVK\cOaT".rocLOr.DDd$slAS,`^p^Lfi3.\'pACe1:[B1K7?"1<p/e?:<i%8e&V
%'uQ"6OlXs`)qi]MNIf[c*tl17G]!8R>7t8tK&F5Q#mVY:bN3OOKu6PO%^.2tnTFd7,0`RY?HmEj?3iRo5N:!uJ/UqjISEDL9107C
%&P4T\^QC[=gIQSF(q7uu@00b$$pl<B0+qdH@O5<Ift1)u)E&GO^rqN<?:36%S,,!1L(+?j@@4msi]`OHFni9sLN*BNf<6V3?:Hd@
%1*Xi:lSl,IE>o??Y0I9DSV.f9O]mtsG`aL0i[k/j@b&;65no>3&NRFk8CHhh#p<]/K1kQOE2,t,`j07Ij^L1,eS>Ksf+8h0L8`(c
%qFU<&eAd%)i(bmX"g/7)]Th\NY22E0/U2Q.$i6A$U+gNqOb$.n,JC8;+JcM<J?.?tJ;`mr,l.[OhQgTs];?jX,pLBqLa87ch?]^m
%Cc&NWo"m@[3]/0PnkBgQ/\"G48i.\L6UmRR6XeUc,/]_&,X'[R#SA!q>[j(Q$UdMOXu"D`>@N`<ldli2Xs#QB%?]`"oc)T5\;c&@
%gjA.Yi5H_RI[G`=cJ'Oh0hp<cJd'$r;)l3VjR?oY&RX..+OY'Oi7/5`i3i,`A9c^^4j>%Wl9sV#)Bsgc&4nK[^QC[=gLthOWY(((
%5B*/:&l[a7&NsVK7J-+F%SU+rDCAjCZ#GJj/)Ks'>sgmi?tq3e0267RU)j-4Ul10/T#^0['Z#O&N>%H57Y9je4jV1&W.#7HE?luj
%%7R8;e=L,O&QQP@aebUeZKq@BE16h\:6?O(pFAQ%![e.)bYYB#jRD.5R3:S[.S:=[781S!T/@2EqMCs"8AM8DDPW'u^856&%rh9F
%+#8'u,lt1r-K(_53?YX,+l"E\lcQ[PRqZ?i#"a(0K+lrIhS>>Y$SuZ8,lt1r-K(_5%7IdV6W%YFiDg:F;FE%Rc%)[?>X<K6%^2TP
%iDmfA]_Yb@Loc(3[gDOjlWsp',XLlF_8Vq0LKBTM'DNW5"iUnRRZ[YP',0<PZNLiiD^^L&"LsWN"LRYA_G0^)G.^csNZ#3mP(6RH
%'@>167WMda$F<=>igW]:RtB4WLFG)Y`$hiq%]ps_S7T>_8eP;r9L>eP2#un;3CU07KN9gt"P8h6Mcfr9eGLHKi$q>3>X_><X.M8T
%lhZBURfG+5'bJP%RM/(.&,^.;L]P6EB\:+a%<*u+iDrkin7lD6?@%n[UA?l=Y`XH;1Rs!IoAl$5XF>u+6dK31C.\P69h`>qcPkJZ
%rBn)SLY!2dZli386PD8c@QPSA+o'OU>*6Dhca=u(-H%?R8M"h75%Bs3NmtqqS530Ed!$2DY%&-XT"+\ROsc#.6t4II?3Ocl;Otf&
%6b*%/KGH"T/?TfjRW"UVi2bTZCeL5u>AQ&.JLT.[[>GE2\ErD4)I*$k))UTs!BCrh`+)%@Hq/nrSgEeg!KUi.APRbV\S1qh"lDnh
%dDshZ2`;#.b+Q<&m[(3JciSJJCk_s'KT]+q<'qcBYFO=$W'XF*@Ak@o"^IFJeJ94E:dTFYNXBkCdE,Uq>QeP)>8h*S^Pso,aWOin
%TdZ0/_htCEE:H+,He&4*,+I1['ZGg*NJNJN7Y40O;>hbe)RhFg!2D`_b_g/nW4:,SROj9;IUg/AL'93(=OMpm$='hn"USWe'7#SM
%M"FAHs5`6h*($AT-Qi/O)+7>A>Ei5Op=7G^HkZlQm)_tq@`_JI(5cC98Arb(g@VB3Rps'$0]o=9QQG@jTW$7kk8\_t?6To3=KX>>
%d+>S/5YX^RAWW#5HP0Ht[iZ,JG2WG:f7uV,]YCHGR#r/0IVtn`;0J&+;'L5Ofn$D*R.1q.bE.]MMVNa+C_Wbnec!/#7Np0?PXYru
%Kp3tm6=ZfZ2I9]L@Z6NsWnZXBPnLLH>EtG<&rg(DCoila+A;!73GkW]dQVX:KUEI9b1h'(R6h67mM[l=N8$!C;n/eM[)4:HNWda0
%@n)G&cZX;om$VjH'_+pA%4(#jZMbn#OQ;jblQlaufJXoAs%rk).D@bG71CLf=AG5'8:i7nBf6&b6=tp`,RN%2F^^jY8Ou]aDFP8]
%.4=M!,^D;JM\DM@KZ1mS>Vq\";>]5Z-/:5XJlOUkOQ_I;E[]n9IWjYTTbLZ*fQ&2pPjg8']Q,DTPf-4jDK7#]97_QQZB5j[nI^(3
%JU@V0&.dPE3KfI0<[g%l,(+1JMqCQ5Q\'oD)bE<b,:>L50MRC:pa$--f^u,nb2kmG<+%kJg4as.L)n/"^Y_Ob,EPWB,mb#*_7C^6
%`t>Tui,p5#N\F>kX(?`?N\J-\Kuma;78e[M_^LC.)gm\U,CB[CpDc)O0[GF_-S^XCkit<8H5snkTl=6pNdtTn<lDui^??Bt;5qSJ
%m`)OQ5<4bn$G=Fiff0%jA#k`W5jcE@_@s`EfFS""6q.2")b)/hB#D\Xc$C4pW*'WU'/d+)A>3ZlN(hU"LCj^7H5)d?R>iBtRb8f=
%6*hV#->:t_Lk94pL.oh8`fQ%Fob]G=F$p\r1h=@A%%.+7N$/k_Yq]cu3^&3GVUIoR`,oSsR?3F<+VW;g+_3o#4bQL&a+f\4l.?QA
%Qqi\b'@Z1XA7@SXJkSkY7Z`JkoE_1Y:(O!@aF<@R_O(%GEGZkkdK%[O_pjnT3#AWh-EIaKSo$JMoHt!<dL_O:Bo#;Y%]Z.u-,^"[
%dLa<D8eZbqob,`IaM\UhI\Q<\%2&E#L57)kePEKKE>u5PLhd<7P_9j0@NhA].lob(-#op.Qe-=p2@P;UCPWC*6e(+bqDCZq%0j"E
%R)+^(,]W&=B>IaJC.>#a-OPLX&/i-889.T+,^UH=Z-1ma*I'#X+io\o'Z.YD03gR[DZ])7^;nnL$AXt(**shPpf'ID6u6geM.$U,
%N&U@IX<^]^9>RKS6XfI&,(nJY[9TSXP!+fZfZb9gInoCULuhlrTaO9$MUF<mH[4ENM?cj`ck;<]9/I8d=&%<Y!t88jPf!i_2/j4i
%L?`_T;`di9X@2-R&s5SVqFTrd?=S-m@E@LTZUf\HkE[#eZ%jZd=@o=@@PXUe?ke5E,8t55;+]+!<sUN=%(M7)K.[d(0<k8Yi4pna
%k4KD,TZ`,q>t-*MW.'mmNS>:p,Ph$u'&H0mgm!=J6l54\-Konf@Y6'K?6XE7M+HW)r<*_;_;Q\p3P5pK3)RbhNUs;t(X1B)'Flc.
%3P7a*\Yst?4cS2M]H`I(^m!%a8%^/V1OS-0_@rLp9X;T@lP@5'@,#Q)nIPY-q03ROI'EpjnlL/h=2Cccg7"NKii=,L+GR$Ljrt?r
%Lg(P>Wd1l2(lI%GU(3R>`BmpK3M<C._UegFk[P<u1DP08'HX\og=$aI4="."BNUT9%Eg,Mrb([CZWcneDL'S6,GN(R##CqIF7:U?
%W$t=O2-nF6UoQ6beRB.K0pdbXDI>+B>[T7q.7t437:`p-WeP(aaSga8DCf"a>KUB\c!dJe/C"i_R,#.30nhoXco"DA)m"W>155A_
%?;loYE6L.9>QQ,]dPZ;ih?n3HLVZY]eBUP*PpREpF]H<\C2Ni:_q/jbf0OYi%N6PKpPFW0M9RDmo8JV!+i1&^W<.Gp``C]Kg3P=l
%Hl!j0`l,^be<ETG&ho;4DA]D$L^jNZlC:FOW7_dt3B@l?8<LqP0F<jYMg9s[!^g=b/8D,<n>thTc*RYoI1Y%<ILt/+GC1JCRM'8c
%i+Xi(Psse1I]tQ30Pj7trl@@,pPX<:1I6u\c<iNI]6RZO@Z/lj%.6Qf1b4H@s2AgiX;E9in82E/'2_(P&N<+jfH*h,2cY.o5Xa1t
%U50%3?W;nbVjc$H8jj+O&50KM;K=nDf,"'R[=C&Ye-BGM&JB+_+YAbSL+'(0K\3fgm.gYq)\:K,]L7+(_SnF0Li9:B/Y3Ro")RMY
%4R[5VeD1gclBQSY8j$EU^YD4?Nc0+<TuW'oC9D!F+q!XU6e)'FWmZ<0>%Bd6(o(QY4B7Z40eGKUE^S?)78<"6,Xtn.'>%4794[<2
%$L;b#e3.AXd_0AK@sr7)U12&$<L">=AB\l;&SrUaX_dV2i%&BC!Nst\d>5`ppq+uL-bOuV9&Gr<@c?jd9gs-QX'L1IB$Rmm+q0;T
%'O2UhJN:(k:(j'^%h)1NCoJ(F,!cf01.dK8=hB_hj3fOLTICW$X<rhY!e%ft4WB:EG?FO,TU=(N04<QnOu+VNY*t#=Tf$HYmAeAa
%_\?f['IPSo*LW:jl=4%h(o8,."N$CZ*)f5S6<!9)$h;"e-"]07G^=uJlHHTE*hi#-;tUfXTh7]_.jmroFS-o($F,^lR*-IQ?k+Qk
%@H&W(WU'>(>cr%8ifMt-#=W<$._lkFnPIsTQtaZHM43EPqCopb/eK&^&s4"9-dfjY/!tU80dl)jGSi)g$nu[V8Y6Dhn3R?LlACQ:
%c^-!ogN\<5UG]tUZ"!CD4PULgkDJ@rh#d!Y(5Fd\&&[a4PT@<oe:tVi3H"@1!0Sq3.2ZAQ,<d4qJj$rUfV[X5l<\N$1;+k!EahYN
%;$&+[gne*AIo^55XtR\oYO1>_59c;AH^/S*LpLR4Z["RU#6TqD/N@fVWfT%W89hWsBK:`f!0'c@3-_5+?@%cPE`4'r%\nOtckL-C
%a$-YeY\(jc@(>]WV]UbR20MJP]W86bN^Z\^:M#D;Eg0)l8"lK,+*SES?EtSJ-s6mYQ!@TG<SssnKHYFkI`4\GKXa`rd>>MTKt$*`
%`L9c\d"dX_e@*mr$UZeOQCPVV@.M[aRtVi)=hLl&`-C_RkU)g196s1[p)n*heCj"P29M6S\eUai"!(I(@Wc$W@/5sa(a`FUSN'Fi
%3C0UIq1r9GPf1OO9<seb;)O#R*X/HZL_C0,QNLjXN[*WZE;<"2HfJO\",M3^Pe:E8?SZhZb./(D\UglY:Y!!KQc"'8_R<`T]p@'-
%LPJe9qga$3E*[Zh'#c.0=KP]47nOcSP'mqH$I]_Ej0L2+'71o,S1k>;GM1okT.;Hj+Ql2*UNfWuWXH>`H9(b4W<=9>po:FW8T#[9
%_7k$]`(O@qL>XutV9&5u:1"uAlcZ3AFSa_f,cXqJH@QZHiPa[`/Vn#d!dV'9gVDDgW.PBNeu"F,H1LkoEAscA!XID@2i_?`)TIpe
%NoriD&GX+S"EKRmE3l&1=sA6<Q0ihe\6jNE[ldDjN"k1#B8)7,0LA\pN.G1,Ku[IQ[[pHJI(.n9,uNO.KJ2Q.WYI%9^jW^ua\NJ"
%F15,&Q59kH&SK*6P(a_&#O87_KVQBD!t8a>q8n.'gD.2b7(E2f4c=J5nl5R4GoEjAqni7jphl*FDk2PYX)&F:anHMs@:4)a.#CeH
%^rO(*`2*Jec5f$Hj0@o#MQ8/b31A)hZL@)5[G=q@k]l[T;/@Nm.YIV[*-jUicM,;31hcI!nA$uuI2NiGEmtTN[`OS!ZnFHU0m1uS
%p,FCe(n^j5&$:^6\^c:@"X5kC<>mWg+JK0'n<e'?A'Mq=\Eb<&1GTW^i*0WU]_'!-4.=e5L.'!LqJdcYn>':9nJ*c6/B#Lhn^'&D
%IdCZP?2p>?#OXkaKS>51H$)VUfPWC4?4%lrEaFo`f8Cb8Gc"U\kW<M>$Z:+rhA<@%`:N&df#K!!.P<#<27iT^!CGQ$ft99*Q"omX
%T7g$cr.XWQGX[EAmITi-]0DWF(rMII57F>"D2K/5L1Zrl1iUuF/IA-t;-^r4#fV8Ah,/=oA=gd5`r_H,\f;+g_/Q2,!oIq'_dH"D
%R8HK:,#@&I0O3X6ju?Dn<oWq0i\mg6Ln\As*HNe:-Y\EVS+@W8W:n3j(-9N%8XHIKkOOQ\I;sNQ\/'??JFpBi/4+=S_P3QgaE'jg
%E=7uA)[V8-fF)5b96Si3;+#L*A=dcg+g1\#@DOW:F-I2u=81ZV`St]_)7K=&E(oJB/9qDEW(pTQP'Cb:jJX+kebPDS`k8o0//R.u
%i@1(&=25g7SMKIo'g1h]7#8XL]KI/]Q3]Jq?fi,WQOts-FqZ>P&6T-?>`9hZ_@'I7TG>Fd8T&_T-U1[/FEW3H$4h?"ktW;i/d4-N
%gOY/@HuWq\NG1_dLDWD2@S26A:b[X\'YK17#Yj6naHlOKW.gl!;^$75Cbq6uW]@c].ckk+#qsS_n.7T&JlAq>,'i`sn.e&<1Q!4/
%&`=jC8X+F^KlUlH>/=ADE<TCCh4O#-6;L%\NeQdUY,g\%nqJ;r-e78n-X'puae>Le7(fOP`X*juLnsYpB_$a^,XN4'MlYDsRLL3e
%fsRFkDY>H)?;Ks[&>>/4jW?E\,2\RGM[Km2Ub*H<ff[()<)K9tl9Z/.73F-7pbgAeGuH^WMc$RCSdA#F2h\+i@3chlfV'e4EDKk,
%AHo:_b$,!gHoo'Tg==&];U>Qf9bNT$G=GCq3U%Lrr$OQ^EC5pV88OETZY#$CI5sj;DHk54A;aSHB'$j>@=/uN0GaOj=P2TdI]aIa
%N=!M[>nT\'+&$L3.30ocCE[279hY]fGVt6@0UCT97:_J&g[J[WIhQ`A&<k"DJr"=[LZ/@tR=rUr""ZPuP]kmrV'7SV'Gj1O&auQ<
%73n_1@MI@%7:'=MM=:iJ1WYua0EW&8X?f:RLe("?V.bU)?-fa*s#``.-Q!!'HZIIAd?dpQ#*E(c_R%(,)]gmmBM(_3Q1CA@;[b$&
%0!C*;7Ku4YOgM(m<t@"l_&u[@M?qTE=.72i=&f\;34q<A;g1Z451fh.$*X!qYq7ciGUoog+;gE$/I33\#kNSU@Th.>H"%-]?GmaO
%k52$GAV_U`,,qr5=A7:&+!X^HdD:XY_Ge$bC?)nR:'l+r/TU3'C/tW*+g*SeQP*RXOkq(C%G94a!:Q*(!(q0??EA^LE<6Q6TUQrL
%"NtLfVBk`:pT-'SA>`j;@:-iu'/roVa,\jV@H4j`qi1'.qsoJ%6UZ)\R:'UE5R%=@,+*=R*_#2KAC\'fr]m#j0.7s6K*aJbK"W9n
%D%<G^`ND<tF@9.`LeRc+U=d98Lo;3J9b:TU)4?,De45lUn8,a&gs0>dEa-%$2kAp#5b]dcT>5Y./R&tu`U.H4-$Kt_3,'1A:1:jT
%cOg^!6:<*UFa)5h3VX_/`<5pZW4:O.#k".n*XtN?\]</AWJR]`n16\@rPLcE2<Y"GpNF6YjN*V=]7BkkkJ_s.E:kKu9RbViR\Rn4
%(pGa'oOJ6^BL>&@)+0JobeH*gM?l[*pJtAOWZt`&/p]34'fS(8AFa5!`/9BNnB\kCUtCg2W5']S)e=2cYZ%;OY3!dI6Vj*rKHsq$
%=MaMJ,c@Ro:\ir^??>L`KVj8uf[P5B8j9_uWK7dX/bbM;+jo3uD1@aO2hFkQ)k,1e^!;AVC`]O3bU!(*Q;DD%he*8'3mMT.P)u3N
%/1jG`V'+8j>"u,%>&X%9$@VMKb2bh;mC+JJW/kZi6/p^&_U[Dke/H__2KY8#[OLT%9;ilb9&F7f6!i0OQ5Bm._Uf*Wd(Lil;0Z"t
%;L`2D-1>'*V(''[[/IG.0Pm8U..M1+iTffFC5qF@)`C>\r=a1::^QdZ[ol%,2CVd;D5)(=dGldg,]k[HAJF!cNRZi&B5.#jcI,sQ
%V8hC:k?Zin;O$r-/`E.pe^U%aqeYII:"<'u1r`Zj<l60-dU>-kf.7r.eSNLYiQ9DnQ@_qGBf3;1BtZ7FP4pQP&h7cj<K-TTC_M4j
%gCFqc`Y,H2Y,9d+m^&Un7#l,ubn@l8o=3%C?(ndZ-@u9QLpQ0*d(Lil;0Z"t;L`2D-1>'*-+Jtq])B&fc-+iP'(<gQY26=Yeqib#
%@C(&X!W+iLLD=t<ZNQ?]ecKa`.j'qKZDW!B#77V*;(T#+;jgon,R?2J%S6Fr-.mC6N\K>".b%DfP\sGl<bd]?hB%#B;,S,3"JPPV
%E>()8*@*YamhKG%,u==[ahH^gm+,ZN$pikpCC/V53^eT0+7&o'jC:od)GWqnE!-r)'A5gPYf\(j$Z8;#6qO)a'U%5s?MHcn<>H_h
%2?Zb/@FbTG;)N<^Q<jC@cn)DLmR4L4aFQAuW:7;gC_['r%"Ut^h%CcLBs=d]W#Thl5gh95L(\[)c?kMlRb)'"cLo`;P3<iLjbMI=
%\&ThKLE3AaVF72?:J"4\8Ki'bT=9"4`mDci:.K6c'Y!INCu7q\h-/Q3dlWg1mp!S\^.k73_GV9t>p/pN`K1c*4S$5*:a6YLK1#P"
%bE9[X1Wd)EemiKbXJV_FDqqdgokiGm5(qJc)WlH+I)4"8Dd$%<=1f<G;P>`g;!R@lP8'rMgChGiTdB,ZYTQI^Kd@#&*JcGD)_0O,
%TKd&3aI??GIH.a=X`'8i:ku:/&&[18j(0fR3=GPgUr'>WZK)B"OsGA-[[+`#6<;1J9mED^['r7G8#$9%h(ZsZQI]P]4fkNTKQ#Yt
%P4ia"95=fK/ZiI<BB*PT-/jLCCIs4g4WI:TlRk3@FmWtD_KVSiCC,.SXrc1-kUnm9[:GG;/brnb*k\Hpi>_O!Uj[UFKK=doQGP?M
%fsn5^MBWAi^6DS4<l66*^4PDk3H/=r8^(A!RufXo6L1s*or)jRWFT@,p6[KPCFVsO`bcl5f=#h_"'Eh&(iL(-?UZM_P4h>?ZEOhs
%WP!,39*f/rL-&(6A",0CgMm?#`1bFK+&&sl+b+;[R+5/tn;Z08d]P`N1*+/6Tg$J5,4=b%VB7\]q^4:q07sXXV91,N"OssT-$0`B
%gm6<@lmM$)9*hUkE.:56<3e*Lp"3FQX/RN+)n.,(IG<>7%q2l\L3]DNq^S=Om<5V2ba/BIE]O,CKahm+6^Qr&IGBLW58)\qn?'^B
%`$G3u>*%?'n>:ejDqrp*G&:GNf)=./O)LM@QPD=frc-eT+;9K0OMJZGG0+`q[mLG(5\.I[<m]OX&e>@`$;*n[(,<q>JC\4G&Qh[Y
%d.cqn7sjs>$$?5`rN&<AkMg(Ob[V_,:&=ui@9<eW7K``snDbA_)F@$'Co5,n,bs+`#9UObG__Ys>=8CW/HfuA8GL2A%9_T^7:[WF
%X!eBsT*o!rQ%!'#=Zm6XM;Yir6-(LXV\I8m8Ke7SaXhpck%9oq0bU%WcVm.>n-&9ql44+JU*,frEud<n=l_;8qB6^YmW+D\i?*%K
%dj/0T./:Y/Gq+2tE.FZ$IToc)3K$]72p&T+10(8l,12]rp8t2e@CV%NWatoOb&F&W?-t)!\!eFr&eNe@8MnhHC7HQLRu8<p(2"T.
%SM;&rg_RZGro%\@T7<Z]I_GBCfYIlJA,",sCoB3R#mm=!)LdeC/8[^KAnXda4M9'+<p6$&/-mO`Sc9I(ToWpb6/p^&_U[Dke/H__
%2U!.ZKoNr#j`(XKgHOVa)K8>8#RNem0+sV)[1n>#jLcpGQN"n.UqL\T8WT`_;uF+!!]NLD6/p^&_U[Dke/H__2JeZhXcsE1$#Hna
%6>5>[[Q^ff7.94OB?;HnHVl2dn>:#trl-ojX)E!Dk^/?)SJ"Z]]OiT`I$U(;c-g?Ac-h"ubT'uCJ[<\N+diJA=djZK`+Q/0RlU>r
%HX.8q(POUODedPFH=N<gmou/*(j/qfb^Xt3gj]#*6/iu%$.h+A9s*l5T+*Tsf0>kIFdo4^6u;*O91<?JI$V('.UBBf,]T-%:hOK"
%AL$k,L0=)]KioU2D7`3)jW*pdK>bC,KWDS_WAUFICm^oAV,mr/KNr`s^6YWM0mMM-QV5d)L<F@(iZ/hgH53T[eoeO[(pDZD[s6F5
%cptQJ,(h"E[8Gqi["PKhX/RtNqeW4#qEKn=RZXIs!tmu8R'm,Ek(=DQ7q9Dj@j7.o64T$ChWt%\E+*6hbIrI_OWs$`1@k:JdTu8S
%[!!l]Nbf?@R5=W&o3X:5Nr5'%+I"4*i0_UMRm2QqM927(9%4MYK90V=r8Rn\'GN5=14n&:-B^Ke(C_WrD<sftNott$p;4j,7506_
%(CAhc-=BQ76Wr#G<XBIZmhR0.maujhRmBk(<A5AdY&FB9\@>]I=O4^\9guHQADJ@k'qR/VT8DuEA0P@^rb!BU1qa9BPQPFS&>>2H
%+oEdG!1BZP0][Gjo[Rl.Ni%MK#-;Eh8g[8^XSk\]!()5ZREs%J6$Su11UKt*#^[W`A/^h6g].Qm$4QH3^TNbrbmO&$k4qm274Hi&
%8@gY:EQkI.Ru9fnMG;IP9X-XGBPN?I;fo2gb`44(AE[2.76uON2#(05LGX,t@h0iJqZUoNZ:ksB.lHW0YHWcfld-rq6p[&.MF%"p
%>GaeTa9k6h-'&jr29B@=>b-qtc7M;fn2C(]&(4TFAa`0U[#E%PZOJ3PJFej62Fu,hO0pf"-.dj(CO&J5?Z#21m<#&1-<VK7"Q9d$
%(i7"7QmKd=09fJtT<>?t`k]EYdscHph,_ek9jNW[9?T*D8%q`6lmc;n49uW4D5t]jA+8RF;Yb_!eGY/POi<#JkAq6$d=3`rom8,N
%R%l0E[H'TTq'L/E^JAno5Cku;72dFOT!9q;iMie8*`7`YgGhp*nfJ2H>NtcPRXUO':!]*$6>kX@:WXZL,fl7hSa\Eb3`\h7fiN9s
%_CRmNckKD/NK<QuQ$eId88@/t5/_4c$cIK$[I)J/H`HaG"\>WPb>3g*-a[?`:LtpO-LG;#T!NqRmt++p,I>[K9"1kNeP0.DZH%hj
%=Dng9!u9"5\>6rcnto/tlL8Gf)kh35l39*.<_%BIA("4\_TE6!R>Xk/epYsfRrFsMf-uTf2Eu<[]beT$h"mNf<;!7g0jh[9_cDMH
%_?\1f5Xj*9#9aN6mDE-Xc'I?m5L#P"YO1JqpprTXX)<K)HNu"P>)a0N9l)E=p>'3lY3hY9?-7-phflZgBYP?\@<g99jCB6R)%(W*
%a]R'5)3.0D8ILTM8#'D_QU2/<U?651;EK\Y-K67pB6GLe*[8[B]XnPoHfO=tX70XY5i7.!NKR3cVb)OJE50f#?7"`051Fb1.qfE`
%LZ39pFibZB=Rp\ASVf>0](2f>79(M:GS[^1-7Rdp:pOC;9U!??RU1Ln=JZ.tL1jAR>@PIH+;E?W3$Il@aSU`&Q?aGW^m+LQa4GZ>
%TK!W6Nmk(L'$`6KB577LD6H9r?oeQ)4HS_8J`B;h:(*LWT\f@?gm=*SbqDl,LHTuV$Gq?r!&4\_Af;s?FZUk9TEt(YI;VspoZj1R
%iR=WdEZF'm4Gm!_mVH;X/Uouhq"*AMm`pO#j!o!S1W-0.L=idTJo+!=gKEsXYN)/5r,":5^mPK[:ZDhClpFl-'hnR]ke3DFH[%L^
%q5C0P_(UU"Bd;qTE,Y?o`]ef()Z/Ar9(UdYM0V`*\i==26U[0^.7&&*r#%hGiu%K&;Im.K)S"L_Q0$dh<MBnnq!F4[WIk'>/kj>!
%q@R$7oFG!8GJtiRXk+mgHNUfg99c<iKM)5qp#"1*Zt1HIma"aBU[k;6fO&:ZB`UF(c>(#LY*6)7C0aaqAscVuFURs.bl<J&fPlRa
%'d@fuB?"rqi2[tS4N\^2QKLTnD@O@/-O[]fe*l*D58MS30:nR+O8hlN+(tInEk^qh22cD8qYj2QZ$&mc<b9_"hVa'Q?*XjOH+C#L
%p^a;CE\P=.!c(Nj^-gAQUK2*?,ih-_:[XQ4#Z)#YRC[Na2T$^5gNbf8Du!,"?9/H-kp:nSpg=j%X$in08\RT,5;\PrMX-s;#oJ-e
%qOd<D_d"`\g\BM#8$r?0l,u^I&U#S5\\)'I73nYQOs,TL&rT9XnKe3@O*==4^8_0:PjMa!ePuqA>V]ik3:F2tZp_r_q,ih6mm=_6
%/CF.IDM'7sg><'9ESf=)`KEI;?)hbU^'qrLI1F*+3HSPrD#V04`.T5)posGj]sPnJ=2?.fa$,8[&^#QM(NZk;k7Epd9cNf'ad759
%)76"9L%UFC0*;hLG>VLd./oT*nYQdMJ\"W-;_Jgf6dACBh]Yk]Y?b!:p2]6"M\iJHqpC@uI>=E'-UK1(d_(@sOKTN\e4C["Ca5>M
%[Obcf5pQ,KJ3Vn57q_Dc'&^%F,k-;%A%h:-@m5pB9Er7gm(.GT;-r.kCieJK!rhjr8q[J+i[WOi3E-b;LRl=E^j%LA^L)iC'>oQ?
%Qc&C,R_BE`3(f8V^79J0R+,OsdN'cM0t[BF#e/=P\K]qg=Dohaf1Z.ig^S?OMDC.Sg=`qd2ct]P#T5WJ5H`>JlVp#S"/Wb/oAO[W
%HO#^g*:P32gCuU_dg/if!240N'VF?AfDoJ:Dd>fsQA_;&3mCtj_,]mUaLN`7KodkD7/d6ue[l$,fi42i'ZD%&M@4sDg8Pl"NVZm/
%'nHDPboqe`,Rjb=>N3G-Q#3s3:f\1A.@3(an7pgD83KHr"?STPf,VnXC/B+k@_TWR:Sc__RVH7"j<BA:3UMo0](;go<;W9fZd'iX
%8g0I,*YOHa?V62?fU'm/]J1qp`A7d^_+gXD+O0kj,bXbuB(ilGG>,dHdt5Y-]d2@R1@_^Z0[C=e6C,oj:3>(K/td]Ybr)ACJ/bY_
%g0[[i]&oiZn7k]3E^;NoN[[tEQfojb7sp2[geWM!=(UNribUCJ>gamj^1l[C1moFLa7(ELnPtr?%9B$KBkQApmCWhPH'WRjYuh&e
%Ze.D',th[l!HqZgl^Q#Z`loQ&$AMT],TK8B^rR4(m/M33?N3D,(8h\*i8?RB\eem+_g+(Wgr*0aI&^q'NrHK];t1<t';D,Ni&C4\
%2b2&-.fa4;,XK5e)QP/l?d8DLr+\*uF5)*rgN6^L^Y0*(G*CgTVZN03ES>CMO/0Vf98^ZOSY8'A)MOh-YVZkq,'*+?KNsUVGnS\L
%aQK=RKshabp=cFsB2hLL+mb-Dgr\Q4,J;SQ9)@!(R5>>h>'i'ZV_X^&cMu6:YT8FE^2;:+ocZ>-Et`Qp+Zk!>Sgd7:Bd3*b&Gj?;
%T'J[q*Ye%WeXVQa]qf*gBu)EVe(L566V@-.pR6nuLXj66TFYNipH%0o<lj?h>N2=/UElAPpnNF*^_J^Q7t't6:&IhPk^^LVZRFkC
%?(*#j(ZL,@gmU_oK2BDS3oql\8;D<6=mlkF:n1R8S6KMKe(/c'/B8kn:hl16(NWeU$qU4(N2#<arhZTA1Zr\jbV+B2*1N;C?)2QQ
%:0hHa7>.h.C#OAS<<C"X75E[GdI6PQLK)b*9BUGhT:7S.[iYs9Ks/q(d^.Y&<<dRV6kG*)e!Q)RStK,8QZJ,>Jk0%F2+^h:HP!]I
%p&2N`(YN"aD-54bh>*bT\^N'dDhn(U8GQ<?_=aH1@Pr<Nl'Lc=jGK7N`i'r0lepME7=gn[F*7o<Rs08+VgRj^#qSfH_^X[cnNhh?
%8hTWZH/3/C^,-GsBlP8Om$5M;i7Z$H!hL9NIf87O^7"@IhrL+fSjp9OM]&*="_o.u+\,CnjI0#p5`nc`m'X/;%V;Au0VM$9IdA8L
%@m/(fgb39Z7T9j+#2_?'Kqq:&bqnXj%iL7()EJA)hCaps02e`04D7_F1&K1iM!Lne_ie,Sbsce3L/:mFn"&FG88(V7p1J<OGIQJA
%47X1?;nuM"\AN'J3_l2G\f?iV;DN[[4?5fT!jafLb_"?^Qh[(O8^dNKReIKZ\gk4)<+D&N8^-Bmat$':Ydk`8W,U+&8"W^-kKc2L
%@E:JT]cI^-<4)rYii:qKWTdAFU4U`ZkH65,#^n8h<j+L*R5DQV8]$?`[RiAM8WsnGg-%D#Q]HePfQ2bS[<`-r+h(2Yj<%_ijp117
%[`a!;ih9%Q]>j>$=EA/M'X9E6#6*bW(Zl+j@%4/.V_WO\l-NO_F#ZuA.N_;,+m/nrY:'hd]ItG'MWkEB3t=n,!?Rop"bl*/o=J`5
%45!m1W8&K]Rdamrpj\3C;3Qp?2ij]Rf]q;Y0Kusuq<R@Jr=TTp+TpS;Lo+@@j`6qS8%*gL3fo95pLZ]#A3`LdQsd*hG+L><@g-$V
%S91WWG7eIN_)+%/K37B9A4VGtGY"t@^7R4'N0p6Ss)!qe*&Z2?c2'/8etp[G8RK3_&QpBAqiE"2LIhJJ`LGP8X2`'AJUuHWNT\@X
%GY(M?6ocKkEn!>9d+YGu13EQ1XCc/rp(^*G]QaphTQAtX9XZq2C*`bn$CZBNp@d"sf%3(ZC2AI_$$bAUgiZ:VqX#mTZRJG49ck!'
%AqT.YRab8b\:f:U"3_%',Y6]m."MHc=-p?qnmk#i;/5-$.?d&F0g4<V'Wi7o4D$sD"RJJ%Wc!uFGX8''/="9eCF9o33+H9+GjHV=
%QpZPm*0S6^S6(j<jRU4SYdn0l:]-ta8q:^YJK_"XcX`feCbjk@OBc==6%T9N99aF>_3I;=%eKA<?D,]@YbsH=$3]sL+E^E3Tq>60
%Jk>U#nA/Y(@Qhr>2h7HDU&`3+j:WX>bWV:V6K7KN%'mb"q'MVkSQRN*5NPh+*@`Hk1G_!I2"@,lk3F28BP<+S\V[O^0qo=o/kRTI
%SLu8u5)]$Zi\1'j=j)Le)<V-n!'t2#Z)ML!$$H>+FMaIXa\G7uaq*7L+[TK<P8N:i"M=cD'M9s%/Z=\QZLW@.<QJ#5-Zf;[Bbll!
%:kOLc5%Fg>))-QlP)PJk,4N3&s6Mf5N3L>O8Y]p\0RF[rGsclbJtccUKdWfO+fYOYcueD&P*4s;d+eWW.A<kB^05/]7<SdB$c3>i
%5"Q&#>`b2Ql]Sah5J/hr1=mMuJ*3XH?'Z['m"<5@;K>?X(`9[uP9l-p@6jdsVoIM((is2s!,;[CEc.CAbY5<r?l][56B<6+YF*LW
%IJlt@0F2ZG]h89aO%Hhb^*=:]@%r?+%K@!l7MlYMnsSTi7b*@"o4otF6el\6%$`iDiOQkZKUkAD0Stf'ZpFi8W85f(!!e+7Lpuc>
%KT%P<*C!./$mOR18Q"SN@Qp#fK/q2L?XL,=:BYl-ZY??*p"nb5Jrh]!,*YL<aK3Le:"(<[5Ld376ujDp!%1,o<FQ]qOI#]M&J*r3
%7bL]+k:?j.(NT^=l6hG$n5?"5kpK8sc4&W(plNp*Q%:3I<g*n(ZC0?ID9_cjYIDN?&C_ej+BWg7ll*YRSXd!1;#=q_6`>RbAFBt!
%<\:AT([`0ZWkqAZ1Z;drTJ_>]L_q2ajWTV%M!L["@%J[/WF_/0AI)n`U*,JYi)oeK$ts3*R(Ze>Dis^m+VM#I@hd?mUcnfNY*UKq
%kuZJ'Q^UjA5qI]nYGE!Cf4@S\NqRmT>?"8e<QP:g2jc]RoemXu!00kV4g4/&DRt5oKlA#^4*PFZgF5.:m!,\VC.dDAH#aEe-qD:l
%Sk%SkPg$>T.uGn>1SBT8*I(WTe/H!SQ%=f'"_<FJfnW+_`q`1_0h6_n&E-$A1gTfsM*[;AOWR$]3Atg;klm83JtT9H\epK7>Zqs(
%gN;Z]074,n@HC4$A7.Mjc9lLQHI"!R$86)'<4l1oSoV>#2rmD3gFGO9>#K-q`<sCt(ZNqtjP]uP^l8gh-?V9*p*lgcQ4Uikr5ti1
%Mhhdaol?+V-PJhq0chA<j%Kp`"`?kp4lcTai3j#53o)&PMLT;3cNr=k3d(MYYSsN<)J"M?B[n8d>/>&Er3Hs+?&r@Taa>c3+/[ZI
%blaXXKlWkM87^=`+\V.)9Lc5kF2\tC!SH-Q$MH`)\Os4*o3gnKP*I;#YOWsi77phZA?'2ipon^C?!,No*RCa5"*SfqWW;DJ.3g,R
%(9dm/@VUc(m)[61.HS??WY&rPHU##i$:CBk99)6CJ!Op<+1eg=bI@jcpQ,<X&)/_P%@7h_P1>)D8p8LVJ3]5BA@1Yk,RLi&e;,Bd
%`7M2d8.rK0=K=)!8JEWg33GNP]#LF/ZE>E$!(g]bDaSXY!_GrZ'nBh#a&E&%XC*^j&Bn&Thn$lI<?-kfhrR`qBK3<75%[?;3"i[C
%ETlp^*/X#SWTc4WO\_i_B3g2p,9b-`^5t#]:1].3%O48nB6reG,8'2cS:#sOi6Wjh^]l#\p-@#h^ds\k>47q2V/h&8;DJrCTU8o*
%M%E*V<sJ=["G(*B*kqQM<'>7FcI,e9hoTB).EWlm`&-Y[W.cX?pACl[6V!7r93oLG7?Rs(hc`l&QJ6,/.8_@-d8eL\]nUO],Mpmh
%jCJX6%7aa-BfM+Ujo-a_Q47_#Dd@?.2L\DI[MY%#Yd][L,FQHFX.mXuJZ8JT=V=6aRjn>Y*9l>d6Bja8nSTsM.62SQUC[QVA1bCn
%b=b`hb8:5H,g3$I$beI-@YQ>O`0sKQ!bbK&`3<iZd3=H*i?1A=Y[&h_PJT[GZ!g@V-a@8%X?XKk8\pitX-\JlDcd[0@9N/H@8371
%#Ft;lCZ>B"3bQC"'HRj:b4PF^5Ck]^NCJSiQX`=:RcH6G7NN1iNUuCt,7%C-o3B&+jA*LZ\B:;c`R%L/jQAST,ebZcX@Z?JQs%r4
%c&Hu3@gNqKJ'Wk?@9*pZm@ij$S-1sLR\Ed!i>>Y1FF2BfbQ-+h4,pcU??*5t`I>lDWo@0tat@.o_(Mgjnp/=pj8cnH4k0PF?Z65-
%_*&_8#2he*A74dknA%K:I_-.Rnk.*m)%\o`QTV,NSeA@\&](qDDOq<R:QX:cWk9]AkUe;VKu%MF`<5A)nshuW1\A:iXQBYBS;\`q
%k-@lE'3FKg>mtC"kfoPZY6b(3ErU^GIj"J-aSc?as+/sT+SQu!r<IBCJ_Y_tp](79pTBOZ%Ctpo1^M3k'ke5j#Dpds-3S?ZD,:jd
%(*r?>oj1RYi-2-[f:oKN-'9e?NZ,tdO/T9=G9KWJm?5!jXa'EF1V5DrI:n^&f->BmjN':DhChHpm6H)dbQYZZ:3Z@('R)AZ4W1?f
%X;WKqIGE1_qC00X06J$Odk8IshBfb.ql4":kT/bf`5ee>STRhJ*"0j5ZNfB@V&e+0B8@VjQrsK<+aQu8`30jdI9UqT+F8&4O,3!s
%>pA%s+eio7a,>J^OT^fCq]5K&YSg>:`!G5X=6q;['+:cFP-=G?Iep=?Zp8>+1o*ZkP8TMgJaeU`^0,?3"lrNGZK5t*^&WF6nHFh#
%P4,Q<.['8d+::Z2I'TG=Rn+T`>h(up)<a2c<"h#4O2sO7=)CbTR7t6OFs-V#HeCZr,5DEmSRFN&q6mr_L?)JR`&JFMjach;VG@1#
%Teq*Z[!a!oOJp%W:`^nQCu$J'8&ah8l5L&kB<OobrPG4T6NBth)K!BBb'BC50i%fYq<CR[0J)+LdD^8YY^H3[G!b2SCf-,fj:?kS
%VsCDEmo\=LkiN8rA"jE['?XfEW@C.l.,XrEFXZ.5p2*VI$a/7K8grRlk.cdE^+DC1+aK=<2WdJq+/ND'YlXYIMr/M:RP"ekM<!db
%23hRbnJ(\*_P02ca+OL&icnF_&akb>pr;*GlGbb&O6*I_"D)TrX>B++c)V8@DN"&dN5ktP.E@583)J)f.M8?ZM'-p<mTOA7!;+X(
%"8&`^i'/e37sD(:BcJ[4?^3lb!$1<TL$`:K]eM[L&j$BGOf,Wp$J>l]6eLa\#12,Q<Xb[377^ErKBUQ'ZpSrr&aDfM#80%c1\[-T
%J[;X.*MYpmQ6[Ba+ZcCdA2Pf(Dn`1jU:3Kf;)q%"6rXYKkW_achdsZ7+Xb,!Q^I:)<mdI'K+^MDKY&(?I7"]6epU"m%sIGNNtL!Y
%U1Lks,o1[_H7#^+M;nB?-tnY,H"XKQTK2!LCUh*2J^tRQ0?e]V"N&%KJ4!>PKAq31:'`R0i-Ga"FW\+7\]^&W(c8a2+A$b3(p6B.
%cZA='Fn0X*&o[%KYJBQb%6/-\*B2rI]DXGgqEm#12+cEWNF]hd-HY+%42W9&5Z1:81m@"o=IS^3"mFP:4&m\bj+fg!9EA6F!B#a9
%c/FFInO')HTi(a7."5hD5;\6>)T<5HieL"n6_jFM;>echI]l3qpSckURn@[aU.L/=+1`2c</;sCT[$@/X\5?g9_9`JJh%8o-s0``
%\B_X5A.QWa&XO?ho)H-Ujg*Dk9;FugS?KP\iV`#.(5bBXOcC\eKt6;7K#B;n-fU(nITHX)aLlQ9dT2Hh][CXF&3#\6(@2GPHZ6_u
%W$$HFCpgZEOPRHpYE+LFOn;AcJM\.?pVd_0i:d!>Mq_fYE?>r<7%j)3Mn9ps,J*>9$ZL3K*3?.+d@ZN^_]n@[h07Y?(7kbQ5LLWR
%LJr/Qd/88.1/MpS&5RbSOPkRebtYLZrE/5]!;D+s;;*aVHUq<Hi-qa`.tDurhIon60a[9Q\<Ld%k^Hop=DXk.qglP_@K[hoD$,0=
%(=E)rOe@aPnRmAPA]TtkIV=HD#PWl0<-k\b\7[8*8Gkb"^NSo2M!`53WAc_O5C9#CJG'i)aOYp!>;9O-g)m!dW)E*?TfkSmL:6A5
%2'ofB>N"Zs`$tF1q)`jQ?NqQk!2<iB$m<L^j-4#o)n(MUB*Ct`mBP,1;.YpC*m78%i!eAdD;LV2Tc]mt>ZX%m4d'KC&GS8aqgE;-
%*f1raA*JW5dab]kHQ4f]cu[F(4bU;C:LpQj2+E"'&J`4[7/#Z(HnQGEpWm?>+0=nJk_/$pTF>>R`cP&&&$&V<<B@Y#a,k%AcM9bW
%Oe-#m-kGf(s"6o6UB1Em4q8m9i\\G(a-CL;M[I8^/:-&M!.V&SIaBm1%p%9-*5G+a5ddTlF6&\+>al'SVbH>.V?.0Dq!2Eg!?b&=
%8O3NI+$e9*//8.lWE]7!!<s_Da//mqcHmD(V>^&*nhAc.dtFT&E9IF"(3Zeu!7I>n$X0D3coq0N21SHuB%-fg^XG/\eGt&c!l*J(
%.%(ng?O1/-5Z?\N+oD#<phJ7ZnBFkYX[OfAQJ-D6@7(EI`R\K(VKV0,^d*Gi5q]/@N(%T*/HEfm11@d1i:is[!JB/p%Jk4cVO;D"
%rJi.iJ7@3]!9C6a7Q`=c.L>55drh38%3..W#.0hpo[+U[.sT\+A&5Y*9M;u/#G,QTWNbd^Rq/7XC&tjhCmp411RLE0Rl=cs?t,:3
%b[;&)dgRR"k)OEc*ZUF5SrLAuKLj.k9A%c`g+pc_UruW]4\)0g@>m1&SM"!+#-$MDEZh.o8Ze_/\I,\!=TVm3W_)A0o&Zn.#0r6]
%"A*i]#qGk#`Y9c@>)Tr_'INL9h"dPZ"Sq,9Pf326-77MgQrNuqhNjbN"=.XigQrm,,Uk[1g/erW$+Cm$<D:u8_PC(L/g5oT$E\Ep
%*O'ROJ63.9b&`qL91,p#qK5=Q^X&:c"Mu=mgc^K#EXs2^4*_GPP0qRB`!"Y1KmB9."NKnU[Y3:ZUdJX,OHm`eBoIp[p[f^X/5D(M
%*\3'R&gHAgnLQ$.H4&7%1M/@-.9.(=ngl,Q=%,Yh!l7lT8PH-1budP2Qs?`4,UT2RAgp+38PEl_qWaZj"T:Xj'2N(h4Nf`X\sSc$
%"RKS?InsO*FU0\d8PCD%Em_%)&ebOJi68Npi/KFRH5`!I8ZJ@:N=#;URE)mg%6KA.5Daggc^;_*C$j@90hSl2-;Cb!V_MnO;eDj\
%Bh?GSI)[ui&.Y[^i+Ym'??h2]-Eo'F0or4e@63d,CL?\#<%*.7#^K+JkE-1s':Id**1ChZ,r2Hc5@Poo@HlWrKg[8Q(2A#AjY<H&
%WY]n('CaG>A>mmD-<6#LT#X6.%bQQ%`WWSEE_'\l'TYfRm:f6DMi\5+G@_gMiKhIdMZ?E!,r"XnbBk9D3jBr'ZF:$H?+H@[NsW+c
%_5QF?9]->H8kR07!fQS.Dg>"p#jaN$<ZVq8EsHIQ4=7<32,1$VnsGdujtVE<:ZU_b9\LdbOlnHM+/,SqNsV#XSNZ$gR?@p_M<?UE
%1BV"`):OJYkr@:6aC?tA-CDQ>`h[=2`b.tT;S,oOofOS"qonDF.ut!=r$XXb+*Lh=jSD+CI8hLc8TFZuU\AJ+nqpX;Z.)_C9O0,-
%Ob*(^f(jU&b/_%hFI0Mo1@Ds$el2a>po1sK:@kG4F>p"V>bWor9'?I)aHGh&;m(XZ/8\!J_VB<hZmkTm4Ak1d8`n5Y.^3:a3a"(5
%c^KG+"l"cE9rV;)rA/%[5sWME$D')NW\X$O@N^sI)5(V:+a<uP>$4dCK`Va2lr[i$g0<,BTGl>9$[AjJOhFgupq-c;#.V/Nl1nN!
%QNe8^;f-LD1Bq2)>kI5Q_grkW);q5Z?`qFMoVKAmpRhZ!\-i<RG6tmm*%_1D\t]FJZ-KU+7nXks9";WhEAkN!%MK0]2tL)05?,#"
%4iY(LmV=PE\bmpZ!=DU])8hE!B>m-u/l@_p!LO'H4TNqrVFP#4Sp\N`9Z*&8JSBAW,;94moE`Y@-p7W1!Mp$/)PH^&bQ'%S!Y^>*
%/282saloZf[uF?([ZQ5N@\.T:^2B^l(kRT="17&2QrjtmnfK<3,X>Im_$gn+@k\A/H46Z:=HC9,&9c$#)M7Vn'go2HK,G6%a']g;
%ob^@iYTAH8&F9b@1]Zi-QjR4a"u?6]O23XQlS4b2?p+_C!:2M[?lFLe(ehiN*eP@"X2eTdIe=OO_lk,6)=X]I?lFK"6'qj`4UO!\
%=-)i,q!(_DFte5eAUptROC7`]Z:/1?I.\m]K<H>M);qPc@0ZMl;4%Pp4UTZrX2dd9q!):T#%0S&df?Ji@0Q_tEL6r<6i.3u4V#pA
%XG:3g!:+Wl#%0S(;ZWtT@6/oJhh[%e#f<YkR<IX&KF-"X6LE)9KS`+FFi5CrPRV2Oq?k(rN;JQ"R"fTD#h(K17puU\lVX#Mj8)E"
%EC1!Y!&!;\<sWC<\/p69!7sRl%H)O<AcT=^Jf+RV$GeQL]0\1\hg,R*iEQ,8\Wd\ZEp?4jFe[aB6Wb[$mnlDRAcTLcQ>*#D__Mu!
%?7RK]JDP'1ARb'<1&@hO)@-CPp#!0FC$5TB9')c8(X/6i.Pp8j*gKm9KWmsX,'e7tjV9Jm2nX6*WS\.$A%,9Co%;e(o6+)n;^#-I
%S6Y@+:gN(<G(.md.W&*+Y"DZSHrX2+I0d/,-W!eEa&Q8&-D=%V(hc_l4:K_]#nI+q?,C;(Y"O!RW9Fp9"_tW%7tCkM@RYk-=@4BH
%NrlF`BQQutX\I%"T93^-ol*lCR:9adUBCQ-]@LNn^6ui8%JV;<;]Q%8?8[K#NOg,eM-YoASWdoZ`$VaWG+iU_cJ:An_7A;dPAos`
%H>IT19p9Nl9K3W-+\m\r_QGMH9fNa?@:L[:4)@TUE5tUJ-/A$"MSh%iF"mU?Nfrca*[U6Z_,2uB$8.gJT"`H\K4P&gr%>f_Z:jg<
%EV?gi'@,GmARa&rK>H:+gVI:boPIM\SA&hIL=<VaK&Q@hTO9a->87QZDju?`f\8^,E;F`8@b@Dnj5M_!]!\,l`JpF1$"mIFgf,pr
%$S:_=?L1!Y0,BQ%ZjWdORs*aIm\!iFNSDqjkI$_(iABtq?9!r!e-i0oRsO$Um\!lGO5';b`T("l_J.dk]l4n!W>A=i2YFq$gqc2B
%1iCbqSAoFBL"!PaIc3,$dk@62D>Jt8\:]7h1iCbqSB#IRL(h+MK&K+8;_\,ZXRgHe["Et8$)p\48i@m&.2[uaD>Jr"\V#@i7.-^T
%30Dtf$R]taI^+^a6+q4a\#C1%a_fac;n7O(Z)HHT>WA#'PRFC0]5lk(m\!fEQ.qN2VfJhYiCn,j/tC""f'u2i2WOQVEX1@/PHTUU
%ghGN?2n6fuL;i3`C4eG\e-9Q+Rq^ZGgh%IK-?mfVSB5W:K/:&4F)WIMclARt*Ae"6Egu@P9Q&<"SB2dn#7=CkabeT<op5onZb+Ii
%md0A74#jk,F9cH&X7"p,m[uX$\_D32-[2'JnAFD`]f&CBG>mT7S"oPdTlQ[&#C^mD3LnuD3f!==:$6a%f(/4_kY^MVZrLi*+We2_
%@gPn0YuMriNoi2E<9J4,GgJJ)11-Kud@=7@9#k]Y`MZt6fhrS_l'RX]YGcP&UHBqFc6tWJ_\qR5F?&U*Pn#1+S'p8KE`5#h:`bi2
%-^<4].f;?$gb*(ado%RYM`^7A5!Sp=1.pK[#+M_Nb0=PajB6PP3-dF7Cq%G[P_Im=kh,l%<HOa/DOO<s<E.FmeS(Ou8pO6UDGi;/
%.-7>m"S-g,Rfo^i4+U=JMG2rm#DFOEb5FWfMgJq`#T?a.C"F,%*!;QMj=WLil+a=^k674ZUiP[qR"iC+&'b>kPoKF@<k2XgB9`_g
%n#Z)1rLHrkf\]9^LAdZB*l,Osb0;a-XE)mqbl8##gk9*i+6KaQkkY&ih@3^fhf)o4ko7nu&,M"obCdO6LukLP/7Q/h)bqppl@otq
%:#0aiSZ*Q'/._$#'?a,+E+6AW)pTuFl@q+<:#0c#\`t,//._T3'?fd!F(2]E)iIf>]GXHq2g*#pjecoTYrns(McalNL(ha)gMgVI
%co)ZEglr7\QCG2=eFK8K3-X&?%B#NHJ`WElTPSF2WYVe$NEU5BL/Z8igMgnQco.Ct*jcBSQCG>Ae8j"r(B6I0)pU#oD.@S/:"re2
%nt9eY\_OP$Dd8P:-^VHNZ+/m]f5Pc@ko*;L='`_SjfWBPcQeGYB9o#3_jTW&Ol=N)F(@8NgDh*V/.[c"^aqF(,V[D9-#m[Fcq0a2
%*cr$E/R97>.lUOao?)\Pik0;18=Wb!$AnAsK0nS1nt;((YM9g)kEVN'Z?YJ^X5gj5F^$i-gtWZ?.hAY8e&kDXE*BfP*mQ5GWe[q'
%:%`I+\Z$W7N0M)n8?'7BF*K[J>TFk\.hBdXe&kD\E*Be$+"mUuCt(u>as5o*LT@aeau,panMZ85DS.b\Vf9"coheQWE%ZI`4N=[B
%RcZ>p\Z_IBqq)>ga\pAn9'0/K+0KlKMuAMEEO"/iH6>bt=mT/!qgl_(3lH)LYuanJ5>%`Qo?'ugHpc?.)iK,Z56W[$D`?X3PL\p^
%*B-Wn];1a4A$O?+El-tu/9WQVk&+HUG*>$5M`j2"/9\*Q<5*Oj@0ZlZ=[pm`6r:ZO\S?4>RUgIm:>m?K61lj>LcG%_]852!\8'O*
%ke\PB;I<P8U8=@?CmO_d3d<T*ck39;+a_\YaOjW*aH!`o>I)na[^!kYGf9fk>m"(b$1$8o7RB3eS$s.>nXXl%%YT(o9s[UH,/fsi
%,K)MMEHFN0MV]i_;[Dn&4Is[ZT5(>^iC8WAl2tupr7(WN;OnD\;TVW_N&r7*H@G1B&`8Sp\en?d=7s'XiZ[[[o[k#NE+b/6![AcL
%cloK/A]-rg=+':lGW=%MP+@6]nQ1X-G[*r60\I?6*L'9[_\WCg9*G@'cA8+Mm/i(+)&_sM1Z^\CSsGKh0]F68cYI136O5oI1ZHg1
%OBSa.Lo2Q-mY#i+0[WXO8%1`X?$uF="\jG85!4e%351po%mpc0On7P:0["%WIHA@6#YL9OiUK7-<9M/CXl0&7I!FIMiD\rsjudkb
%pn*ZY:Z88Ha2X)Kh\?ba*POlY\n[nU@i[G+omFd.YegmTdG_!bY&L;Vj"uEp_s-YEAuE#`iF04Lf^N0VcC>?)g$7V;L@;A2$11jJ
%n/[Im,I6:e<4\;1]]ehrSg3]GG^;K48;Du>)qoo8iLAhoB-bD_Lq.Rnr+tXJ81_I\nK#!eleErU-JSms=9Vfq6%YqU6pa"ZD)qKq
%2)Q1dKQu/0!+VN1hr/Q9,B^S5nCTN0iW2Qb<H:Dg^^,DIK_U\Jb4lh\nKs3JGfTlASIc=..34N^%qQ--M.[sLO$h!Q:5F[JTjB_j
%iaK8EU>\'TILc6A@LOX&_g^9ml>AZk]!"Nj3?oU.<M/Y?,JG[SECN'<G),"0`JDS5_7I[F&J(35W)rF:s,.O$2$0.YET3mheMD7*
%Rg.)$,:C3.nAaJ+2_G%!)X6`/3UopE@.nb=4=&RdM\=nK+>QPON8Bn3Y#e4XgjJ]^J`-],Cd6@nM5O2@\guSHgBueVkJU;n<2@Ki
%LSGLYWfuF^g)$`mU;Ym`\Tk3)7Q)n_D1e1K1Z]'X/>>7Eem<M#Y:>6W/kf@-!CN#k]1GW&+tK\2FUc.BT]dAFs*-u6cPs\a+PBK1
%F5I;tL1HiC?qBuI''p(L3l0YqWY=_$P')BTH>F2[%EZ0t.j3MN#UI#Tf[]*M$:ra=?&E0ZY6uS.lK'WK9Ih6]\t3/OWe3p6=FdN@
%_-Ks_p!go;CS-d>XJScJ8'H!h@G*&JhIK^3A7UL=P8IbOG.f&"B@e)3F`tHLdq<4C)`Vt`]n'*pf*?E_m.u6-SR$0teEQX\:7Y]5
%d&GL[E=tloLpH>tLAH,_a!Ei6@WT]j^UPFOJ*2P#W]mju^&h4TMsEobW#q,/'D2I5G+u\oCFABdZ?Dsk5h:jlDnt(`q?F$lW#pPt
%'D2f:4!2isa,0Wn=>-D_iG'b*/$=&iI_aK/e2LY"7")u':=N?Mr<tf:K@S8r='4iHr;`mhVJi]mC&/%7SYdK:[F=aW<\KoUTk^Li
%#?:()E(/=&d^R]Ul1Y3Yhh7c]*ud/)^7f:Sko6XGQ@;*LcI*6%g0+9,Wh#u)W7kDH!ED3S?ZEK;oF4k`8O)-J-g;SQ%a?N,G*7<i
%e]uSR\Ct*^L9$lADn+M8q>j[p7tQhegP?gR]Nn:^-PjmB-gHm^Ks6l^R@bKmaB%CjIDapf8CTTbm6lB?hG2Q2f\;8Z!IKTgFs/_)
%=!-(ad34E`*3cnnoaQ70=5U6kF7fY/G-6;0hM\FQfR%W2%=1+Rg7\1QjQ`4Rj6?`.A#c'#%mUWsk[aVlaITDNJDA9C#0<@;*rrjX
%on?0[aSJh#/aeBOm;&e;6]V6p3=4.WR?jE<+1**Pr<#'q]&:5N:`NCshe32>8Go)&KY-I=0`4R7DQhG3\h*TcP"1H80I=l:!DJE_
%U3jneW"fbL8sDgJQkK'URV(BiVF5\dJ1=D;$kSXO%gF^>b(B^gMfR*@d%WW@^pGMN"u%XOUB,r^KkQ!S7l%QgLBGc,quZiNl,e!8
%,ilZ9N1=HE\O5tm7U\TpMo^jBM;4^hh3cBrb$*VTE0i[Ri'@%rXKLP:qq\;"oXk>;":]&YndbDM!7R#fM1(X3<"6qO#>Fg\^k&.%
%H/QJaC]t<9L?-XgE'!C'>4.HVX32k,:+,d2l077]3BNeeZPH:`pT3?78L&Q4E6)91Ao+aT7=XO<.lu8J5hRE+TK)i+PT=E:S$KBQ
%s1pbbm/LIaGP8d#5gK?f"j#Bs5ll$"Io(ZcrGN%)e,N,C>4hifs#Bs!q@ACs:B0cT9_n^-/'1*.e^Nl9!n;*k%tOdJ^"J+>hQ/sC
%dr%9E^pG$k'F<EP#7?iEj4n`TD`gi=W&GbG@-W_-+&0H=5_5TbGbBTO2_.]ieJf#5#jRBS$CH/"JHD_*GbBT!%6RD$oG`i);#SDO
%"G2*_@03=`GaO$G2]a:WoG\;S0`B#/"AHZ%0S,nTGaO"JM!u_WE*W&8T]"UYUY[(3[jV8UE)r3Rkr0Y0&G2G-cW/G44A*E])ikUc
%rFSJ)"SKd0"B<';5m!q>G`Y2;DH;jL.5r:n@*4H6#mBA0UBH0hj&#lTgj#'6.5r:p&<n,p'/6?#MA%\9_28m3/d&$F#FC!3"dn!V
%,c\;S3.[a1KZ784nMgR@(jMR$Gmp4E*4-KB'/6Q-iri%knMl)m[<S3,crrP,^sj-\'/7,==kZ/[=`FL/D=KRdo-8LMJGBd>:*?Je
%*[b?1MoQ-kg>[Yb6#H-W!EE>d:;GAF+/[NU17`0A!;)I[cO_?erBp]F1e8`;-lsXA$Ao&pR"Fl9\=YKJ^_E#&'2DM'?:%P+q/*Ae
%Nu0lbqM@]PR""%W"$o0Aa8o494EA4OPh2S!cPSZM$Aq=`W.O#["$o6C^]@A14E/(M'^%=W"iV\k9L83i!E2fWEZcbY3-m4KN7,u"
%qf9o[S&^rD_5uu(!*hSP$7oht+?R]u<,4ku6_BOkW)7Q-BBE4/Gi!0461NU(]NbPuhc,Y%fFQi,-ro@Rd.g>;#W2ORIKUS(5H#!=
%Dp/@`OeYU^[b1Bq^n*/",98XPQ*9>@`dS@RI_asZgnX1U$XO7>nJd:.)S^iJVst!'mkk"Dign)-+PqDA#3)2o+&G(Fr!!Gc`Gca1
%Gqo;pjlXFfglAh/gZWS,S$#[9]SPSK4_U`K+Q.K`8prte:8ncFHr9/<R4h1G!HY0g#@QtaH3<;)WAe5QPkkC(SPjCAgkgRdbahWR
%J@SVD%@B5R?BMcsl2rec9"cBhVplY@?^,m24#j"lJ@RK$'pq(V4ok1CW&IuLKR1Pt:8e]5HkGWQQ91es@(?s9""\Z9[_d(Je(`"'
%7/6i+Do,B?O,Y*NhI*nckm`t@T0D1RkL0Z@mX0>ujj'b_>eVWT!LGm???,e8di0oHFSZ!\SPF+5gtPk3mWA:*b86d7TQ95E)_-%q
%]qKHoe-At@hoAt3:8p1=K2_&fbJ>Y#k&PEY]=AoO;BK-RJPpFE4](DQ]fW&S^iu^+#P]?HX%in4eXP%()8?3d40.5r]<gc3^,rAZ
%^isGA#Pd_gH@t\3W]0^eGg:m0j/dQJ0K?2k*"5TC%nPMjonLte<c:ObH1_3;40MtQ]$opRWW2iQi@-_BS-#DM>(1I2ireFeDS0Cq
%kJeJ'I`7Dp8<.U,/EPsf7]]GCLLM)\hU(p>`uDO3EdRl=:6%8PmGrKofC&f<efAG^g<&jlY+6Nh,48XiGbFAk9AmfKNB[^(GXKU!
%N>iBkq\j)m_W1=k]C67lIGVL(o6dL=[@J7$L6Q[sdef7?'Q'"q-.$N9b8el."1*(/bG"H.M]9DVcbPO$NsR`dP16\nVF0Aa"-)/"
%&a&t#m&G@&Q6^eJ+CnH)]CR^G*8g1p"%7"(]hoe93)L2\!@t.Y#&XLaNMXq/Tf/Fc/I*G86gen4)C)R[jsMk'UREIjU>o,;KQc-D
%Re'ekmC_)T)kl)@)kh[nBVcBrkOtkGL35i[J5*QkI8c,?-JSmo6Oh[CBV2b%6.lGi[*N&4K^9Q_mC5ZaRMlJ!_[*52;SjeRQR80Y
%KQ%Sn69>qj=X8pP?4MY@,j2L$?n''Sc41]mlJbXdl[.K.Eu?Pj4.:%Y8jFpg4$(43&Peq9)?=d2l0Q1h8%0c+b,Q;IG1>dCo2G3:
%G!7u5-!OH9cT[:Q]aP&EkWib*B:k?1.'%D$g*+C&4/!Z8e%&=F4!\M;1G[YhI/Dhu01Pi'S39;14'#rG2b*\k=u"<9k8SIKN:rt@
%r1B,!N]CWl`1jWn6+"/elgoT19"PA`b@=H`.IHnp`$:2g%Z*Ri(o<cRWCf%]1EL!-kB*N,A#Z810;l2;YnL1-7;6BnZjMjkg;f<!
%g<OCS)XumZG!\f\]i^eJ/04MQS^U>FU"@(oT3I;s(-Wt@*Q$5U&\2r9Jaa7Kl'up%J#(XK:A[l"i%oE-JXl%^S9EgWW0kkE+'>u7
%[Bn4S\8g6-%^8!\K]bPJr#)E'3u<*ZClLb$3"Kn"L6GEl>cO`FFu$.e+/s"$Febg$69Eb2TVaB9S8E<coX?diEO9-ifR3)bEf,-&
%:,-oU"2u6cCV[N>@ZI9Oa82NtF-K%dc(/<-L>W?8Qk'?$:,0e5)fk<uMYYW13)23#-[J(P]D!TI755%E7b$RpR%pJ%"n$UlLXW3l
%N"kl$!>16!:6S*bDdir8,K1Xa4eIjG%LKKikEtuD/<"(&qaJh^F3K3n5_=&8a]ts]p06Br#hp(Bjq,>=l4ii`A=Ut:0cqh$e0;jO
%VfM'bdL&FCQ,Q')2E>Y0q"pSJ3[GetWm3rMGD?"`)/8%s,A9"M2ZIWA]RmQSN><R#ga;+8l*PC3EUGS?&/Y;d$cFW#pd/VO(*5cs
%U4rJS7LNQGDE09mLq<ubr@rKGHlE[9/`2;5\2N-QJKZ@[#H1dQBQU77.CpS;/EZS2i]gBN[llWn=:R?Q%/_\Q#$-8+`_FGmdE@qd
%cu5*boQ+WS5sK":)t\2`\=pQJA;2&GF(VqU4D0BRR-2]_!:u]uDD9D)i<JnD)'31W1W+3_SPm3fWSr@Bp!<$#-!^=<=Q%t)ID"6'
%T97BX>m!$9e%)^qq?VK:#V6da3s*UEk?brEn[T*2/in1VQH&&n\?`[QU:>6K\Ke7^D!m!-SPNk-db3CV="ZD?_+J?])m"-BGCYrR
%k;HH,FDc_r:?ON;q$_Xg6^>s[2H8pomXQdXcu#`0$/L=cS^8BRV%^EL<A$VIJP%;3#>jYi@0;e?kdH+`;7.XI]F!?9@fe+rUO.R7
%`TUX$E\Y-MW*G;L#V$XcH\'>Yk['p&;6D.BF@NaU8uHbMXLt:u@Be0/h$,C#dVZ5:.GY#*3i+pR8uHbMXE7(D_+LVI#?Vj-dj[</
%SC0QnH.ETVh8DKIh^RCNAXj$V=R><maX1t![mA>QUi[RJ>a4X[4VsqV6I/*bNmMk@XeH5r6VjM$d"S1?F"t!GoN]W,#X'g\ncF(?
%HHo=,\qLVW(R[<NcUF^;cuY>K(\CsCl3KNhR@:1dM`!n=]NA`MT)Yt\0133C3Eck+k[=Yg('cn9Ep#^JNWc?93RD^m*Fe0BU"3l;
%5f6rk[8][UdS$HGm=g8o)*-'+R_Li/L@Ul;D(u!I[WI/tMZ[fEh`9&<o%uqdGQa2(I-3a6b'+J?5l"0,2ONqYBS6-+aTsTX8^Ih9
%SHE^_h`9$ak-'a-5l$2R8Lal^pL,X"n2<cQAFUNdRTLnUB.f&g^^2c)DU=hnr#(=8_`2':V"95P@eo2HfGlUE-KJ1hN+Kp%S&Aob
%#oCTg`9%6[(U5u0r'bGqa,JZ`0`H*:`.R%rbkK01<V)*dK46,G=pKbn71A7h>9n`HGDd<6^I_>6rD6:Wm4k1dmS=_clZ:\":iG&D
%-6%R+.cY$*i.Tc/G/?3dg0hX9U(-6<:382Z3[Zs*Gb#Lbd,-k2#5t)+*MC/gU'(%3::*<:k<p9]?_$>1r1+K1jIZJu)Se"s?b*M7
%Olq[_KN7G&BC$)/M+)-=Y^[H=lo1O-6N)i*CoDj2S-/%`/E[36];r1Dq\RF9_Z%Mp?Ei<i=pFkpjW%[CZ^_L!0:&r\I]#12f^CY0
%KDePd2V@ITk?q#-T!RC)k;aLLGG9/orD%Gmh![XD_u3>P%_1DQcA)4ek\S&lM9Z.s442`3^GDG4Bk\:D#lJVXp@=RNs2B(d^u(O)
%$hl<OF2\#/*jg\!(XmZgrl&tc\DN\!&b\<8fjOiS3ZI@.WcLH(Ms>,Ohl4m*qOQmk5eg6g"6as/Z[mS'3ZI:,WcJ1=:3AI!ntJ17
%.="d]K-f4(aha/,`+FYn9=!Kg;4Sr#?]@K2:I:1+WG!@On)=CF1qsmN&^;uKE^]M<kme@.c/SpqJTaQTMdmaSr8JPH1qu#i$dC>b
%ECBDVA%^1d+rN$js2,EB]nSN.)++^$=6(5t$&H.5K+?frA((IKAo'ND/#7S_R^))W:,=dKi.]SX)/7*Qk.YNKV?/a%fMhjK)$^nl
%Bu["P36g)tJ61%rB;?E7%cB0RdfGtO*-;2D)4M,o4Cch@S0JYg!9Y6#%cB0RdfGtN*-;0V:ejsh;*okT],a$f1JF#eBR[tnbp61Y
%nY%'KN*G)a@,#dPZIq.,T56[m-]A8aAp=_h<QUaP,j1KH4Qmg2Cc97Bdi>kk?58F^S_4u>O'ToO1bbCnpBVc$i*^NgdQX2S]^uPD
%2Fm_`REa\V+YAJhPf4UVSg`'j/]'7JYidRX8Ga8ad:PZi\d6MlJD8@sP^\t0(#GA'#0!.dCf&oTblN\`ZT19jB/U\CG@n0IEG%07
%/FFCuc&Lr:B#(\C?Xnr)E%UUTXX2im/+kEY\7@!H"i)pYRf]hXe566KFR#e)(nGt%!(NkEr4gn6!WOf.otp`e9YKrq,#_#0^W=n4
%s#Z@en@t0d"9*L"[GcT_;k!jHD!IYn31JW^3+l0Z!jL>,_<gW4C;^'HV`+JAI-Q7^(SBF>^[nE6r]?`5_#MBO2Y?HcC.&$HV[hqJ
%q7;=[SPX/.em_6AoR@O_QcB7-01,=us,0^ei;Y!#8,0h)eIhd66M5s1Mbq+F^QG*4r-(K8_>hKQ2Yb$(eH,V1UY=Z+@T4<CG=H^?
%s,0_p^qV\*%K&;_g;(HZWWW#,?UudJcDWXZ^GDmB`SVQ`B(:([ZW[3s;&q4eJPg8FJhsEnP->eR;+k#MlDQ!;+9tat<(k$>j>54Y
%(,7jb$&]W@[057iV`b><!Dk@@f2PCFr8sq(/:R3=&f/6-BaK^T*4:I=DdHVa+uh5-iJ/lN2jj0#)f=F5k=1rM^rati;fHcaBaRUq
%2GN-Fpc]o_H:Z\HF/,EW5UUkNW&JV$W<A+uD&RtHUOu%ogh>.BS/Z;`_>>nfNt5-J^q%ji&NDe^8*ID&d81.Pisb#4T`k!QN](_R
%grRl&K?eX/-8_kL6qk6Z\,q*Yo,mtk^\cpgj'ViH5Q/hk4TFXfrp,(0qg\N^+9)FRs!.NX3M__Nr2YmnrSRVD(]V_ZGC2[!50l71
%\\.MkL\,S6V"l)G1*H^b7+eQ#O2(X?OKU9:Xcj>=^Hma1W43o^W)jFu^-aU/:D5><M"m@p=>=arAPCYqK]5j#_BT_W@[cT?EDT9S
%%D#u2!1#'c.r\g(o;&"bLee9gbook:D4?'<.F$#84g9O-83.O\3G5k_Sq;b_/V<3GK1Z$DC^p>)E=-f,;t8R@gElL&0"*27H-d@4
%[Z,?+E%sUuC>(0HCEb?*JOn8#Ub&2?WK?'e"d5djW/1aWqDfZ2l3Kd0c*INs0m5f-EL@!M@9OW?h,s"WmEr":hFZ&2Uk%_AnH>^;
%_tQ[KFdVAl)IXjX"Rj(e#(ZPV?qmS%W9HW:ik5*plL@jI`Y*1J[hXj+*5;fFOiCXHV)F0[Rj)*LD6Q#)(&g%PfF%%SMtHoo7Q*f*
%e[\K<E<1,nl:Q'F\`KeRV6ftCcd)4Ta!T&38PQ?<;:qn1(,Ei@j9Vq3,RKUe&8Alker`?fV\G9g.[A@p8-dCbOHLbZdHE'2jn2;g
%PLZfFZLeJC]L86_PapZe8nHC:Wg-,brG_NWYi*ZW+D3m7i6e(:-Kd/XEi!D%JLuLA"hPo;SEHe9bo_m_8hMk2dZq`[s5k/[_ZqSC
%6.J<XNOde`N_K?X!WgNmA@Edi.Ns9B!j`eM(9"T\ij@VUKC)8g1;O8Zho?sRDV;?]j%ODrK;a^Q.7@sQ[5sZ&>l(cc1dIgCj,d_%
%PTiAP;P#gP#'493IQ$>?Sl\X;hC>Rr+:TSukZ!(n&/E<]><6U"ZLj(-*sur,+qdr4RL<CQ3D7;_(9-(&+3\bZ6,Ln^A/&K6BtQ8;
%\M4I:K:</0SV4*F:YO.rb]tc7g8"3V>Z4AkePNW2H-381^+'p0-U_OiPH^^70s=,qpZ%Di>#7G=9Nlh%'+mkK-%$E0RX&3L&LAK7
%+;SOZ-05"lif>P-hO-&%,5m>MYD<D%HV9ZAP/Ke`7fbK).@i'M0]GsF]9<'UaQNtqA[j3&D"g!EAZAG.qS<Z&C$@BVbj:"P;fkT>
%Ppr/W;XJdVFiaqDV5Q&#H0O#5Nb"a>Ve5l,PTZt!WVgH]i_+sq95"S:"lihOIkL@C*noR-[)Xj+F?L6l]Ht'tpe"N4.G/Qh[cGRW
%(64LW1Md&WDjo*QHHBO:+T^"0'U(jNZ@(sJCaQN+B]6OJE&)s?4Z'I2qj`q-YgS5[O/5cOc%h4%h6BnIi#p"7j<gpPJ5Rg85[Ih2
%rcG/t=4s0t#Dra>kjeGK^p,/Ec..([a_hm!N3L2/%/'F%R3mH"QHmS"T\($;?o.+a9cu9T(J>!`UkCcV(?bTh<IW*%RCI%R@-:=l
%kjg])bIkR"l\$^=n&:07fU>3e]G)n\Y&pH9-estcH(&ep8s(BV1)$t2^0B]$pR5j9E2m/*o)P>R-V;E1IBS#P()5j_3O<+!>lUoG
%QRj64nI)b[+sWj%)j8od-fU!u<V[uDjg=n_89<G?'c_P4K2HtoFGOc>)aFH6YfnH"Q$XCsFdNi-4CeJL""5>BY4;QEi+?:FiZZj,
%TcLSoLEN!67GTe_-7R511]gC.hu/3Q"Wuj!d/mO'2`_`*83B7Y;"^Wr^.O&:f0VM)DOT4gAA<]E;!8>#\kF;J..*!^N_t*/^jm5F
%aLS+\0-'4F0uD_4M0j$@D*@U.g!SP?9Oj140S:+h"fgR;kU&2g0:+P'db9qN[OLj%Sg3[[_1Nj&c!WTneV/'gMCtUtJ*M_7K7MQ,
%$O!;eJ^][Dr4j,"En>FUXf_q'`Qmb3iIXtCB9dMA&=$k%+sLHm0%!UHbEPI?`Bhd2'@l_'@PL*kS]#$t6dF"@lu8*S:fX!:7#us\
%#-')*/fjcP-.`cZRU??MH(e`+7hlK[=;FtH:U1o:+W@cRE'^#>qB0q%@L3l"lK8^U^+N]&r''s`iQfS+2!"?pqTuCLDB)(/jHThi
%.A3=4<rC[A"N1jkR5Nh]<E&[tGG7b;X&Z(n1]THn0J="ZiUhqaLmMJh`ML&c>e]N?C'l8,S<f)&?\gIo(&*l_#?B>"CpTud*HLMg
%.Rba(?6WE3*3k+5(:=DQ>KXPK+XNbB;U\YX5#.k2UqIj*K6!1V4<Tq(gJmWX33Bfe)^Jf?<B"?uL^Ne6WJ^Qq3mOG:W-/ANC?2$!
%]C$h'f%'/7']:!:kjlt!AIl3S)C(;ii2euj0k/0>9n+q(,b%gW0DIs1CkCt=:X-Rn93,RYiBoGClSS?gCDZ?kj,bKi=5)07B_VW1
%VYsdqEA2s9JsJJ]]3KhN4Krg;5q%MMWnCQ6SS+s!a]?DM`=[mt_:pOl;*K!-@Sbtpk"_CYp,SRjMB`%/hKL!P(ftem!8UbiU_</'
%o3]4-<d[ObZ#3j?,\Vh7rQDL#RAj<55E;<QiB@D_9AL@UTiF;Kb"kA>ecql`qKrVE312'[[[N^m-]3b<OcehO_1bNre*F.d!s8>>
%#t#adF0Uqg_$^MN?UM"&^b9M,`HY=,md_Z,`0Ss^qSB\e=Ng$O)EEA64HJ>G;9+c)-3[:r8;g1'af/n7;Hba+).XMORZr8.SodLA
%FD;g7B%JK3:KNpG$].SW3Q,GVpGUiR,&1#6]-+Nl`?/AX%D>>n".)>r*!3ucPe`"`,#en5[Dbjd[ah*DLB)LILS9jW)&%G@L83A;
%V7$iplrZJB:)DLKU$/LsXn6'e($cWr-8AN9_Z;0<V'(mm&5BA^!)PWt&07aIV,((IXRqM_q'IYibOI@)VpM>-,`\ZY?(?P3SiN8s
%(]3W'?qr?VOe?G2FP'tS!Y1iA!M"PY^pP*2WnoQAq(8i1RM]T>$R"!V)o[5.,aZmjhX6P@(RUNkk)fE,T["Rj9BPDl:/R[h`'97i
%KqD`qTZ-K^i;`fM^PP[J<":WmLoXnL*LEAPa$@F"N?\<gN?Y3IM")akl?.^<\-sr\/McC`W1cW\.W:/Tbo'Z$4M6Bd^loM01U::;
%6+MBA-0V;N5'0qSXOF4%?AG)(WFT_*TN#c)"h)pTecsj.`9ht/CZ1LYnD5)6ohAVcpb8$I2/SjS6FVINB:[i9Z2hGuFBPK`,9Baa
%8nOS=^;*&U][>o^UDK5#Ygm;B&P<J-m;-h9ZdL0hCAV[V39G)q!ZSXdo%GuNJ&pd30uhI,brcjtjsJ<oG.!F\A[CZSQe4mhQ=f+'
%rC"GhS'Q=S@.n"'&B0)(d"T0-VP]PY1.3^`D3`eNE]#G7F^M'=@XnZc(7A_k07`22nn^T5[S+q-gn&8a5SbiL'Un#Z7#9e<dmR4e
%"L$$\RZRLaM0CK03+'*#B!SB$\qOufDfkIi</8/_%P19^q(.ET/nQ@/M+()HFY'"5%\-0$5iAafiYjG2QIGm[q#J3i;03=aX<tK.
%\W;<*`5V5:j*4uTUf]]6m3KpbV76gZ7cA8!Y`WUnoUF)8-BPVG]n%PKa0$DF;Wam18G&K"BgPRE<4aK*aXHN\J$9dj!AEo]cVi#*
%qI1bQ#%M@?'t`^Z<.2O-"t?B(?4UgC_,*DV3Q0K05<_bS3(i@?_r7%%^^<Eh#n)D+T^hf1B1##?kk0U!$WO*g,dE_0+ZenbT%45]
%gq91d68f'uQ`6A;Rq+IPCT9Ys_1Q3%J_Q;/*hmpAWgCIKlNb]J/pd%0_J]DbOsFOl]`Ym/B$p3Jq@UV(nC&g$8fr^O+pg"(I>O%+
%%\e-*,nd[253,S@\g*U\O;:fh(*`Vli$>S"jU5S.(k,(ALD;URiH-W$CoMi.RmJ<t?bD-DIQ</Q'G7@j[^85unr7<0dt0ei>XId1
%+k?m^JIt#;].Jkt'.j0GA-?*&8b2rG:rtt4;C/#fSY#GWLpN['4*Aed3"K8b-D1K97$g_e)'';!"pjkJ*\gV'@3E2s3!88QhLV-!
%Q"clk&k!IF?7Z#@E;e:F;WRi:[u@&h=rQ`8'jdq18FIB@)PbImJ0OT<Yg#fJl?)OBk1W+omUap"an\^_/spC@rY,S*<KVmf=H$7X
%B"=MEl^YPeW'qN;-'=8'c0JkQ!HLq.Z]sfU\08FalGoVVl%/f8P\[Jo8qEe>jRG?A+C_WKa[p`cA3V(\=[lH]j61L3&m\Oj)L^q,
%j`O5)(<al!?c@\K:KC7c3-WY2MXekFjE]!W.E=e\g?"D&.2kNoMLnXmN;KrbZe/G"8\+^X?'nP=/"MHS([T]+Q>#Yc,kC0DUtjJ_
%9#=NGA!r\nWb_LtA3u<=]&!cT"!#Xb,qJ3K7)4M'Nhl;eqKdE@'m4PYZAEL[P>gIi_AW/iR""UZ(MA*kq!7qf-ht@L:EJ;&maU%U
%H(R]%+jcdk`qZ2o$O^VEK5NIbiAApr96Q%qKJRs'?gjn<'2!;]#Ge790'BVcOdqN-@!f<?:aPp?Um9_/P%em:_4Fi:P5P,\P/?K6
%iZrOr%/BfsQ,3k%Zg8mXgB8sR;m\EP2FVYj^5POa`V4T9?iC2QHd)BbY<MsGs7/tcp^dDds8;Z8s7Dr_qYC'PDu]EYrMREN_gh@L
%hhUM2)FKq=GKaj;8?IJ[_#$Z&A9;MPZTBqS3:T)`+nL&Dg!/bE7%'Ll,d:=r-oVJ#4Da;6H'?qLP5Z#V6RF/+akXgEP":@nT2l7%
%:*^K.H3mC+I-#:I-&Be7E_V2td8ZQ0GqF),-4j@66B?K$L`6BCq6*p+6ConKP,,L:jFB,YB!bo,rL<ckYO?/W<!XU;1@5`L_m]t#
%Qg/odoY!uh_lu"gN)kr^8B%Dj`,f6KJ@I6qJkf-m?pU5PW<L[J2Gq(;c9WMaB_ng80c/MIp$u-4g^lj^hAgFZ#lqhX<J"R]kNjA\
%s(^e@T^#k8oA`JckSunH.$f8r.2&l0^PPpq>VPJ9k6aB5.Rk`jS0_$3r,d-3NND%liBk/Vjtu126Ut@e3g19BV9Qr]iB\f<OGlq7
%:+0:2oqj:Q1-b;/&<&2"`Za[k(^4tFgFoabQUULX@D2Un5mfadH(YcZ1VDK*6sYIFY>`*:L)V>WES(R>J/[>`Z.!"%d@W`nI)m\`
%5^AUX_5K'^`A.nsb-U4E?RtZf"f3-$78H*UqDj47oanL\Bt_\lig<ib19&k3*6YPbg-lkfSLTn\iuCBer?g^SGtOp;+Y*N0:,^:V
%NcUU%HqN<UO<"`G4R@eJ'g76\LX*eg9@Y[k+@/4645[Fi.Bm^mL4K:mb5\!s%=?Pmm5pI8diOP<3.MdlpX[8OaVL$VdpRD\Ki&+J
%$-&V$'OZ7B5J-l`H.i/$Cfq>m!LK#<^XGUC++6c]H53)V"Qno!P*n5)=\.fS1?F5db:@dmM2s<P9!>YO1&kihFM?t3AJ>d>(?s*:
%4AH-jDcM^[Y1&6qYh5=a$#gNgbK3J,*TS3RC!b^YWkLjtUV(6JPEKJAYKJgk6CDB["WtMDfcaLViGYBH18.=R2#++bL3e71P3&38
%'#inURif5c%nf8al]ZJuTW0<_0hofokTuN1K2*Y[0BrmI^Vl$IUp(:#98;KqU!YFSS(-<o=M&Jca[]N&j(,XQl3#M#?k7e?;)QtD
%!&H5^gp3@1I@b5HW>$F%([]"a%r4l2G*CY7[9N-?+&_\1-[O=&[A9J@b@63?[N1Z_K_c3hid:Xc"!$jI[I"KNddNAPDORhjDM\@D
%pGpAB73e-5FaheV)c*l+Q&'>]mJ,E_`HVB!fa&&s$O;bD#pk_>V&,m#%ZVA%/h+r0Qumrp!RWd3.(KIa&piX!D4e2An4B1;g/!M5
%d95[r\`p\9:/I;i/[uhAcQth+>L!seoKVH3'Hp+2?*Y[P/Vqj!i_"RhDX17X20VT"61tVm-+`GBdb!$V]9H,u_+?V4b^*TQSr?<e
%$L.Gm^#KZHq=3mlp.;Nc3%@fn<27$dQD3SK8dOo_A[tsg'g^A@S'u1@S7(R0o3/8@,/\r@dY]B2cHLHE/+)Hc[\<4&mq?72!fQN:
%>)oro=-\.-+o8r!p1+aI)!>T]OQs@#'F!PI]qhZ[#"%hO!EUl[>bRG^nb2(qX)+2=E!U[dI&)R<ZW1[p66f'R,)So/q\0Y8+frOf
%"PL<=bX*Z@7U(u`bqq)D>U,%A*`>Koc6@-fT([G\Rp3pU7+X+*s-<P9K%2@@oZ-!j8O0&qTWU<dH[9qiJLoj$6#.J@I=r,O+V_a%
%YO?b("kYMS<Z"@epj`5#05<?CIf)uK@R%@':8ARRWtL>=:E9>T1=MBdTM+s.m]-p`p%f5^U`Mfe9GZ#U,jjq0%t\+7f-r`AL0.:F
%QkbZ6V1Y[fP.WMo7n<,M8i2sX-$=(UDR)Ui<PR^diV9scKgDqMi@t9Y0SYc]"hVWjr(oAgaH%dGR7u!nQZ&n=J%TVu?ROR]pDP,W
%1V5V'H%^_6jW^b)5lDA+WF[rmH86,nj(Wha9t'aomPaT`^sGo.a2kM.4_](dD?JN4huK(;Eqp=uqbs@]j*NQ6jZ&F^0Tu(BZT/'g
%>Z2QbR(MhhT5o5%#*X.jF=]7m*`Xd?bR<oP[(g.!Qrna]gi"o2h#@9_QcfMd#dT!DWuj#gjJ`<BPGIoQe'YHbj8BL9e-oG/[bd`Z
%f5H`dF_NGlA!b>q&ZN8/?Ks,dl'!;&]ZfCDaf-``(C"Se3jeB_]"`2(<gl%_&<%2^7^j0<BkTQ7n6W]>E#sFjE,U(Hb`%l**l?r7
%l:o;7hFmSZ_@^-C&%X#F,=Y3r&$^m]+1j@$*7/26iP!`F?nfP#6Q(pY1f\Q;+9h[>qXY2oa9E1m-Z*L;0>dQRNuT_.ZL5;enCJVi
%mdf/%<4kR_K!]3I`FE]B]em+S(96gco7/k7B8\3)7Id8E'MAR<Ud&O6)V!m-S:Q#(D]b-3&Y'N:K*A6O.m_`OpuH[(Mq\X%C]*b-
%KGGcIn)2GgX2[tqKJnE,4@dq$HqKafgn71nNf[^'D7N?\oFP^MK/(k`*6Ti!'%_quh+@10:o[g8,h>Sa)YnYmR%3kJQom>k8ib=_
%l@`_Gr)B[nm$E#LD4LDYD>\EgOdSUpo4C-)#&VbWm*bJ>BbO6t9!?-+)(>`g=Dt3!N`=*P`[QVhcDACscLC)"JWW8\AOqns1,W=-
%=b*GCoeW43.VkJPQHa^M`*<]aTP]&^SO]N^2G9B5'GJX@/`H">^*]>6mREC4P+O2"E_2DSc9o$f]V!b5q:Z+.`8^c\hm3),V=YNi
%1qGMFj\ofMf5M=O44FaR_M8Ear3frgHaYfa)VtJs6^?7]M07gdd^k&T`=,\pF_J?2UI:)1&F,jTPBbf5J\aJ%Hr"&:>Z-t/<%;Rm
%7?FcX^M`TWK2!mH.r#5]n@tdqFgE_hG^6.[LtXmq.UNuU`'_;,`6KW2Ls6\ZUp>2?&Ah^&CeUr!R_7>FYT6V.(NcOZ="\ul)Z-`i
%66AUlV-<%8X1EFpR"ZgN1,j[i?*H\m8DQ.elCi6U0i+WhW*EaLniB`bQj,d/gE3WJAGc29+lG#`a.V-XQIU5@Xi+?3)I(('?hs0J
%9CK@BDtd.d/\CdP_i?3G2VHD#90%]a"Y",#;[5UB0,u1epX4n`TQI-#8Q#e&O$S9p=eqKIW`6786DRonCj$Y,@+6LS`^OR'bec/"
%pp3LK=2=Ym]K(tsaRp0V8PHgPhQXsBSc\BVcQZ)HQu`_!BcXD>dr:qokEg`C:`NVQAQqQu17rbEjO1PG]S6+.gG2)VYsLY*3E7hL
%m.4$U_VfACER\DO@5Uc]C/DI>g>,[OEPjg=XfnV1XWqe.0(D?P"<pH,WnjaJL1pT*pdQb>A6VR[pnn%I_'c3FY(Nlc"oC&Y%-;=D
%0pC;$r>Z#F.J:=0!R]I72L('IB4"*s)j-r_",);@7$Mka]J!JWjZjT]lZNmqGu?:S@)%A'Z%V#LQen(U3C)gOH62jNIqlVQJ6IY4
%%M31tBdeglB=8J0PeAgF'*tSW7Z3H7"BW&!aW*Iqm0$nhQ#b_VTTt\Z^M729G!3aP7t-dUKtG4M.HqBHYUpkdBeg)]:Iu1YKU8Kg
%mDIYG8%%!)\$\T&V#IVB6?EQQ8uCQYrgpkl[@ulbL"q7HO0R3a92&ql;ESgMr-R[CiUOA4]@H/ThI+d='e+%NN"sT4FH\mH.4WKK
%e+N)m-Oh[*mW1-AHSMnkf%\@L1S_0*InKY;Hg,;':JoDBIQ<\lF\B<\&,Dj',bGDq^QleSId7:O)S>5%\Fi^PO'S,EoXa_WX`45d
%D2YV<OkU14fs],hW6A`=Am1t2bZ`1:7[IOe7D";aCN'aKeJb'6Bi3Y(nQF3@7_6'e8jb+A^HIHX2ndugoo0`6lV\\TXbC7ris7;R
%;RZ>NYOH3B6[1MJ2`r&A-9UVCk`<IR%_j+6`m:$^i9h]]Pd2HZY7Q&VX3:eKGOlt'ME'8XXA;N;2G@S)G0P5Y1jkb]B_]*2[m@#=
%]="<bH1mRNaU<O_=*QQ\+Zp^`)kIL[';"l2oLIed#QM<kAT&f-LR0D'>]?m]rS_qIp`\5UG&<B\L;Jf>E`$,0JQ@i@c$k4-KiB5T
%DiT5LgEoK<F8.);Y*,fIWha.V^?jU0,i:Zq`,`!+H#*.I:jZR27DTm0P#QOIA@(NUQdO.9X:)(=7,(c$\cI%>hR<<.mY<Ej1k"n>
%)Fd]n!\@A?Z#S1QQ-nu\n7YFLeQiF_HIM:lESQ"-C[nIM`-8QTit($[[f$\/a;\@+[m,84iV,EM1k0gekg:4GC?tD6(m+ahedD*;
%&)V#OrXS8FTAE_loR4L.N;`&ODh!(K][QWRC/anO(^9Sd2p7r0nCQCC^VaHYn%2^comOU'.0&U-WVX&m3EG&2.h2C5@H@C9+5U.X
%ol\%'47F7+BRSjaN6NmHf=Mm6_`Fsh]:%=EIK-MG.:+#!g=`ZO(cY;<8WLr#ilQQK:Hn>[`2Hi!jmZ!@9fP:V!C=N^(k)KO%@.X=
%S"K6a%T'fgJh2:(8;4)b0;.g/FTK2L;&9ML+BH.""'*%JpDXC'c6VO'hEYDu-Jh"kmJ73mO`1DrBl,-N5bMn,,N/iAI<@0t5d0SO
%$^K3[D]f/olQh0'W04!)hJOICE7hL4O2&-h0>)D0_\Ij%Pr9G]TNWX)oR6re/?p&t3eo/t[HfK1ACg8X6H`%][9Z(`H'*#(&CWbo
%UErJ*<rHlu+`Y,EC:3n4nH)%;,gg)\%7I4r$p*0/YO2/oP7m#q%>:UZ4<AA_KN^po/\ckj$587tctf]]]&V_CMcUHlO&BK:Y9:o4
%9t)VY1eZNOnHsSZeR$jd^)sO$-A[iAKe!F&HYkfK6-M,de*RKgD:`-n@?L'e6IW7$iY@+t))?@)%RMTZRH/St]sd5[e>gLX%YD;b
%::,6Nd>9/SY]'h5>&1d&i7?$tOt-gk/*-be<tJV8i[]gd&@s,o@pMBB=BUQ.4DuFUKO0H*DrD>':ZParGs)9I94POA/g3>([3O9L
%`9J8\>ZmC)I7'kal)Y%kpgcqX,Z$1$6K(B!&pir?Xq9/IYV;0H_jMgne>m]u+n_]^?/ZD7QBGaiKO3F+(Kr'B&je.<2A.VcA<kV5
%_Bjl.AaNa4KO3F+(TR<CmNAlA9s\!W)4iq;XQ(=SRLCYTGL0!hr]5+JKe!E\X4A#g+IKW,^PZ)(>#6DB\:S&AobSBt_;Pk*&RM\O
%]Rs%Y9Jjh8#r1tQ4^3O1eulbA-O[=c[nn_MDMa\k+ot-ENL(4!EMs'T/tpm/rI(P0KM)U@&up,/9*ispDKcY$m8S?j\+P#^eD>@`
%(74Cu66\t*C%r\O@o,'XA)0GlqP3n"\:\*lp"(WK0&AmWa>VrDTTrqu]7\,6\e4A'f67+HC<VQZ&5633k2IE"7#rN$G7]q(MLH,>
%T\!fSI9Ns3?:"(&bBXl,+SriI\uq^/FUQ&,e2@(Lgd+KD:lRuQmN<?^M^_[QHk!IfX?26pDJN*Fk=oK2d-GrU%GX8/>Ko)qLf,[7
%+EnA#7kWa1Jk4S&nID:[3U_i%OG.V-U*_JL'VY:G]7\u4nY&'O"I/#[,(qEQ&uQK5+=&3lEn]t)[*WR%.7.t,obUdVi=9<cT6s^n
%=R%Eo'HshkSb"r,9tUBkWQ25K6?)\b,_\ksd[kB7&:NOfoh4LC]DfZGkLshtfTVRG*,Zp3$;1,k#b_FD802]C2spGL=h6=o6;m(s
%h\75GRBV3g4!=@rP])H+CTIHCFQKf86-Kh%nkB^j<'o0Q*J>1<=gm9!HIK%3n;n8\i=9=o%LJ.*G7^PgI^1RL0Gnp!LJ-i*X7j+M
%g"<c,L^j(umi\o,UqUTRKD9N@e):d_e#:#UdM'V^LsCdGDgDu$W+aY/#GD=e7LF57d]U>]d\=]BB[m.;mNCXTOdQT$&6dF@%[YP3
%G5[,-br7eaGdY5(#mlm:UpfJ828^=#+;R8+Qe<BY=9g=Rr=1"j7d<d'4,?f1)Kl>lD'hb9kU+_>kfn'qr>kNQ(XScHO`nh3;V)4R
%A?/#JJA"S>&K'>aj\\S#QUJ]TAB?5BSfb6.-su23dUHsU:nlm\OK:qf&MPcYfL#sQ(RFpW*_J]D6LisL=4CE3D:<nIqk2mVP'rYZ
%-rPAb[AuskA[t%j"`pfBJFq7(:=E//`J@O\ao8!1Ac0'^Qq++mY0n3M%lQe[9ZQsUjf1L4qEeqF+hlgcZ)W.h/C90?`AXa[)`m3k
%n+9P.R7b*9?ut)#bojk3c`mrZAY*uFREN@rgB7Sg%oYlm"gX$*#SRJlpWE46pe&sk<W(/)HsqEZBV>bQ,6@A4dja2C/WoVD\GXi`
%.^BHRL\(b`e2Vs62piQCb<.qQ8X0]aLC'4#JiTu!hWm[i/!-Up7__[U.p(,;j=@3L,<iiG,<t(i-l3rXW.JsPKK%cHVrAYmRuB-/
%0=p+'SO#`qk%bq8b<13&ejs<1?R8ug@@X/&;B*o?qF_(ZU6#V,,+0q\"mjjis*3&rR*S]S:d-0G%r:hXRU(#,+.Mnu%nhSVJ[`Mc
%qiLg@kfbc=MJrGar*unIOb<gFm+qO\;ST;*D@K(M(JQ1gUoY--BjOrYbNjns87=8:-)l'PcM\)!M[?MTK118l;ILAMBcmq[AH"83
%>&75M`IEo,_KJUZW)h#D,a)L8%^U8IQ:sH6>VN[-\0t4f6uE2S,XL3JMZlZaeEV&FW.H5X=;d'rFgQ*;<Z[n&.Y-KqWa<nB:2=ZS
%eof0]^-kYg>GZ):9@4rI$^M]\IT[#&?4aV<U1c`Om!EPg8J+=NI#X1]$A8jm9*'**DTL;hTq5:]eO7LTRYDM`G:Ahdc9ZtCYZeIN
%2=Bb7Mo^_('XCAh,G@_PYpn1]NCZR$AJX.(`lAiRP?R7QO-T8:i"+O=5na2_T'F<[])QbSmp*b%O=9:L8a9"GfVHSWN/RDm?(*'t
%BOOVd@bjM.WH+\!mZE+bq(fZ6KX*ObH@,b`MH'cO:e,gK$."T/jJVGg-dM4(+(WJ<%*a%X+F6Z2o?sf/3A%]-N<P0QoI2*19U\?_
%n]"<U#T[5d+snsL]iu#%+]rN`A$l;lhnN\uW3HV`mL[S2[p=<;]5^ipUZY'$^onoLLpO?+Yl8$roX:I$+O\k*jXO(UMm-_`;6S4f
%;&iV,GcusqTq\/DkCZm=]oI8iMTfSh?sj78cGi'uZDd;ZR?F>Zq88MmAlIN_d&!C_+s/]O.YhT[Tp%%QTo*Y<-HUME*k\:^K=C!+
%3.iPGR>f(#h5`+/q6[7m'Br]MhQ7$2%'-qj_:f=s?Ef"H9i^iOP/sA9GH$f@3@t@C)8Crk`\[A'83Z-j]C6u1V#bc:Xe,!Tr?u)=
%538+\"kaL5e&P`d@UaT$GtPcGckR5]*Am"JUcQ*^F.EA^8JJEgT5S@]LJn.%eJPT^$:uWr>l)\N%D5l%<,^9X=Y[0J%u2D5.k?Yd
%WbIID[g/C'>D4>.$B8^k,b^i4KqlDY`/Z,;7A6Ha<!:u>0Wb2U01aCtPrJUgpXK)pl[G%!71f4(fWY&,RoSN]PXc?BAJ=C[_;19^
%U;W5o/;R'OCQh)\??MR0l#dYRI@R55etl@6J)7#eWGplZ.Z1/r;$?3DMOo18<QYNHOjs<lPo17Q/!`GInrt4K+ZoYo-<u2pp=C"k
%bi#(:oljcGDZK[DIntUN#5rd.'p#Q02d!::a_/hR_tY"$EEGaCT?d!\9!*Z6[*-=<LaD-!ZDp>$pFO]jIbSG6rP@%+e_7^kT3nZ/
%0JdoNO"Ta;@Ua:7ekQ"nV*QI9/\IEr$\/$@io6p+_-3mdpSu/R](BWtC1VRPZKr0]MpS,X,dY+=W=n_U2CVRprObd3q7i_3X1e^k
%Dntqj)\YBDSt#@b!P[gb;$t]e3JWqhOnM71ZV0!CTC5[[#.@iI'CfZUjVSC*OGC%PpB`bB5/AQT1R,MUSp(durBA%8Q,V1"JruWU
%pMGMEAIYS%p-qLJ"IjM*@$?<_ZBmtAp1Bq)lhSkN.>JaIU(d'/*hQf5_7J?6lUA;G+j"%bqUhUpKu_c]HYI/%MeN+7Ob**JDImLP
%&9<24?T8f>@KA[J$n#QR75QW]N^H[6;)E&96ThSr:iAUoT9.#)n/HY=1n"n"+]MKq($3$.`(X1Kf;89F)*^hDM)//sSsQ6h5,)k^
%Xlfj<%Q'o70!u+bFCIhk*aodZf)@smY,b3HV3=?R$C&_MeZ$,`Kd!9cR'j9)e4C"_*QDR%g/sXLTsu!Qa%,;"IHuMCh+fP%81uTY
%D6R7][:"<>;&"ehc'lc[Y@Y.Qf"!&ELk5;"?+QH4:`!4APd&4Cl_:]W$l0uo;bCRef>P0a86+Fqr=JSG;snMG\(S]G?'s<oZG"0"
%_1Ge+mR1(8IPeY?YHF"@[#FTl?]sBV98YV[$aH>?]n;mM'`:6T"Jlj@&IRfoLkW2X;E5V;rTYh3<jY7,I`q4-_E,VHiWqkF5i(V)
%b_sVRY=n]eG(K\k'f#%).+`QLktP6ce_u(Q"A)c'4-KCQ!)ZL2CNCusV::"CIjo5H(W*:oBdc'k^mrC3&k&C]4oXBB6GX=pJVH"`
%]I-mJ%_^E6*[V`S*h6,e7lWS#;im7,fB\;C=5YQD"Nkb`J(0.ABU,WahnJa>9Y/Qo(RmenKWeoS"4fa5-?CF90:2=98`SLi/\IF)
%(;@j"ijr-1IKk2-/8VekO%if4.*dmUL%j$B_OnP/2(^5g^s]5Vh.m^\lM68-@M/h.#/XFLn"l_35AfmRTmTYE*Mo#/9`!D;_%*i$
%s%X>YrA@X,@O8%N][S7A:Mf<]+JW*e$7LErP*=(a2dr4JDtUec2=LeCG,nFH?&t5IDg,nKZkFPDL/ABp&e0t"#m&]jVNO/e$p17d
%>FUF%eXsF;ETs_cbubnAWhQD5fQn>ToJ&mXYCe]'NG+\H2=7KU;KaL[;1t(&f;?q9JBP=4MFnTI?;fE"5,\2#>Dj]>G5"'PT'@.7
%Z+4H4?*=^GhU&t/S.B):p+k@b;Y5DgL()@d3/*i$#+\TWCrD`5@$]pG2MHZKj_D70MaX+]CJhI90M$'-Tt+_=p\..(q<D<@QeNW`
%CG2I])VsAZYefODfVC+J8YC2@-t;m3Lb/"IMRXjf`Ei@n`OI>Q>SO`t+\Kl4#gEB%_MfGjCSIa!=Z[HBoO2ES0B<"gPunLDgg"2=
%Pu4Go9Zf4Ol*@Ou3/IrA?3TAB#ALN)bsg$K`(__Vp?'r]pj;$HH3aDb3"0ZlA\:3`higihLSuK;mntLkgEmo';%=5@a,(-(aG1?<
%AJKX9:N+[:*:k*D\UJu9Zhpqm"Hdli;grN1.TM'BGA2at).-9q%ip"lU0A`*,#60%L7dcofK5g\IJJ7LLVLrc#3@W%kSaB.9/"CF
%F/Ga<B@qPC*Z;ZL.cPX<@TeNu!ngp,[MD9Y&+7liP,PWCA.'6Dn'OO.^oMhU>Sr)Op,^d.niYq)ACu^/ZV.-FJ29mqfVDH.@UB#R
%f"ucJB]8]_B,]HdEl(EZ*ZMn*\(euWO%lR\RihOrhb1Y60B*gZkkIS,1,OW4]/+(JI;DgQ"$O(.K$WXK!Ja#/e"gX-a:i"Hj!R^R
%<uL-C7:aLWd\$tF>&JeSn.+dGS)J`Z6gsagj/u>GgS7k1aYn38&MB5KZPfX$lN;F%BS2#PLXc_b$OW\,k`T\YW-cE3bb1XaEpBrn
%95p&bF%3YfjEIMhORP>+7JIO$>'-FBN%UaN!"Tj/PGYU53VP4TjCC"[1IDm<QHQ,#:+QS)LrJ@%),aNQg*!GS_QhbJI&^rV$mb`t
%YUAMgZj0DOk3qGT2g`WcVW'\fp^]28@%X595F"EsSK\Vu7D]B=@oVii:ikZkd71qu`E-3R"A*[6W`HBPnTk?HS%9G1UG/[O[]R')
%E^A:j)8#Mj.8q0(.'(1B?YP*<0Z7*>'\XufjV:0Selk@N].V.^e[;OaKEIE[26#bsY-UgW"kOm_]3s3E+9rS]33s)V_)ue=nH[&F
%&fS$_:0)!.S$)'?_4lQ%iEU%Es,-25LEe?rS-WXXVqq"q&e9iodF!j6@AQ=n"255siIt:jjq:"/'kf9DR?;-C$#T6O5J_rm!"!1i
%8?=D\'IiW8UL4rY_Xcud)h:UYAMg<P^H,kD\kEgm"GJqZQZ!M9MB>0%@.qK]#[J)iZ-FT9)BuOW@QE02+CT]4q84qbn"`Yr$O\;n
%KER?'gLm?88C"7_q97@Ck:\:OZBUO!PnK#JE]npTM@DJT3.cU2R67+)TG83ljjPEO)sm!K+6GDt]F&K[e]=,_Ko_m6pg$?s9begl
%j<5fiMoW&E3##3[QF(>Zi(mK5/7;dQ7T3gcl:K%JTZJ645;(V<`sP5%Z`<0s*8bE<0q\c\/$)'&a$!(Hjs"#Y*c>_E8)bB8;aVS+
%h!FFl)i_U"kCffAjO6a'%SX\B=pV-ld1-<F10H')e5a&8(k'FfO()WNcWG]ZOA;9FIqt;qb47q&G9KU',<04)/T6jr]m(YE`XJ_S
%9N)*9K)M+rj!]2mZFs_0meXdfH9ZTl^MQJ5MQ@FgM>G1P3:].O>jt+%1:)8efL>90WC,kcXg)sD'(aCTRKi&@1K3kknQ=@)'G!?)
%Oku;aO#R>Ek[qS;:dPr]be8'uZ,"OA[B<r_bu;q<f2G!t:*3YfNWW1B)gitA-Cb%5]eA]VoX_2P2k^2t0*2t<Us;*<aFeVH"#b$>
%6adC@5nG`H[_e\q'UiP@s8/=of&#:)^3c?ol>j3JZlcC3Y5:q+fOp7\iUmk]IR_oDkoEkD2.6q@qk.V]YnK6J4mJe%1Uqr)Gms11
%!M;m.$$2Yf@Y\#j-g!rk6IK3NDHtpDZoa%#m9h@\]BsQ\.d.q<njA3%r9"DTGS0uY]bdeKp20&6A3Y[)O90YUk05>XC'_G))+rb"
%,*cUFU26;?oeQ]>T!q403#J+(4BqBPD:OHBbo5?)VD?6lZ@<r8]R\:u\A)e-;3)+@WC3jAZXtb3WmQ9M,#n27o^1d`]#n24'CEbH
%'sE[B3d"h]_)S1QV!^himr(bOH.6gN2sRhFeISNE<$=?4/Ili2i7khO*XKVo4AG1/0G+Pb+pPk-TcIg%XF&92iu5B_X%DV$O]81R
%Mb;0L?T`Ie33BV#?;*"*ffEm!-4I_Ti]@"'q+t45VI`\+;;A%QB":[iYD:R[CB4X!%B)Ch1iQ;n+q@]4gA"O&'*0D.RVaHOjSZ8m
%Or4cd1r$,)SKCSIH53q+abGA+PF0V_`ufYaE@?&-8J6%g_2Mk9*[CbZ&=L-mbR,bS=5aO^O\jJ2_=9oW6V[fZmV=EUa4+CV<BibW
%X%L=Z$Ghn$_]gO8!Mb\aKm4T,OCaHo1;M:sD:>c-VLK[Skrfu%-50$>"%1ePAEG!,(*89b#M0MIs,`d,K,7*bSWAHciV)M=Ob<>f
%8B&o!C&Ho;\2]e-[>$GULGUQ8L]bMQS&m5C!iR32na,P87#!FW0<.FQ"T%o?mj&&;-Ed%L[J5A!h@7ikJY'Y\F8Sm6C6%QQAd1CY
%$>XWU7gpko*o'+4"7S,lWsH\cQ5)@jh"N3BmG)S%P?oJi,@ota*$+beN/aBT*IAUFs,k/FlPDl-6T@Z6B-G*b8$6Qd#:1Ro6o:QV
%5U]kb!`XWNIOdgtE3bU>I/AmUACZ6aCK&%!/cNDk(,?jQ)SUTqfust1T#UJqJHOTYKTeu2]9\I6V#;X.YlU&4ErUbc(JX.I/)Wu0
%bA4(")WYbhKu%rh0X=pDr9;=bHBUh[ZoBlr%\)m'FTL3A]hl1gKE:B=+N=i(5S>bH%6g14"B9pl"fte-HrSCC5QhuNl%qu)P$Klk
%I`%Yt2),mVLC/nji-od_IfOO.S>*$g6&ok;E^gMRSHU1Jn.>sSF"&BZS0967-m>Cf0%?T_ZD2SRA8)1J!7^!O>8[#K;'$/:hgm-d
%alMNe!</<=Qk30g,#V$NfF7?P[0W_!A-=fSO]M.JA-M,cO*3-T6BH,Kmf7N6e2;>;W:1;_-lPB?J0Zo$KiRdYT^c&/$7ld.YFuSn
%Ydu6;DI)<*f_^4L':&n":?X#tHV?T7UL8G9)p`[n\Xdk`>8!qEDCu%'9bIM/"!!_^VX-:+"U[$SRdE/aX<Y;+$O9*DG\?6\.VGYr
%KTUf+enNPa\H.QcB9Y%jll,;%b\FUJh!Fs(XXYgCciR!OjPe&V8ZgUPNf'o+#uQ3T7XOa7Z?kZkjn3H)iBa+E6Yl9eGgnq(_$ef-
%FAm7>.-b.2DF/!F+TZ("#AWr\CDXiG?JQ=Fig7(@=0_;HAOl/r;K:t-!cg@r8+q]o]R_l"c"#3rSK)57o5*h1)*p(pIPS`a=>Ghh
%]Hk[UpNT3`Ji.[GF's:U_&+<C*aMt-3C12%rHD155p\[-2]3T_+JZ/tPnHb,i(+\BK>ajuC7O(B!NM)T-N5M:MK$/,R;H1W;Sg:W
%TodBWRT-=1acKZ3-@(uSX&',Z>2P"c,Ch/&h&]+BN(6=G>Hn_'JVTH0OMJheZQ^e?,7+^XdIJAlG)>=DV[$ZZ7)tZP.Sp+<+*HjZ
%:K?e9H?g)On]BaJ(+WF`!"_g0\MSd^@L2!LoK4rP0!o7-fOk,q-)e!YQ7:X&bP\2gg,6LqEdH<?&;&%Ol%kCe[*:\[Sf*]H!GlP4
%g:bEX'IVkNM[8dTX0T_)Z5^!`i"?m:6Z39H=3]<jQI!pe_4l,:kuE/dH=!uE3i6=W@\"8]Uq)f'e_IB^5$<=&FoXce.n]fLmmD:/
%CTS&;J]="D]c$gLmn,WJ\\Mga+=FKUXHcBn#MlE/ZHtWL)o_6fkl$KQQ*JCbj$[8TAk@fnM!O&tB:GW[3LUP3$9?rLLb%;gZc[%s
%>^=TYO>2oa/s`6)/"\RCo(,FXhPf"&kh<$6kme//fUGVO,UjpV"4pU/WeDZH.M@F_2OSq8'<Z#B=)B8p3"C<GQJ$h"_OS(G/34Z(
%c@_Wu/+AXs4e=Zo;[9Ro<b/`+eAd09a8L#GE)THj8&=8E@sY0-n\D\B/&Z6,7S5Gq:+kcZk#deLP#+],%+m\dZ)$V^;6[UneEnFa
%r%`YHQZrYE0_jAH=9=sm$0KGC*eAGblg:tq8uru_DR)&=$mb._fM.R[Og*H%b/>d(b(NJJja:O@l8Y279ufoTggmL:E<cu8:=NuT
%HNe(UBm(LioTl:q2\=*-?D+bF153ZS=uG@XRA<BH<,2qnKLlqIK`+>r-ACd:nPYO<^^RWVQ?&A;c#X2>4LphZ*\@+`cL#(YYl_P2
%fnJ`\a"(W'pk9.P8H5hk`!h-1F2;]d5^g$67NR#/DL.W1kG@pLS,Nr^W7r9KO"\TLD@1_7#(mQpeV@*!VCA$S)!I``%@u>>kXn-;
%Tepj1[8"+t2m!<B?s=Fg1MJkj0[2XA'lXB/A!A/gW0,mRZ\OT[ba'qW2s\?mCt=D120'ke')6]"?*aPCBMhG05uflkLb.b7LCXDA
%#Amg'TuKpQ5]2s0Nu2kO1W3df2F.0SOimV83]u`.hljE-(ZFN0KIG>0V$l4!7#oPXW'6P0.hp".%aZP?E8_qab8IlOOVYc%GQcSS
%Ak5K.`*Qim]P)L9%0`bhKr'l[Oni$0URKuHk[m74N"F66(6Aou#kA#3B7jURmH'8b@U'+42gU.^'9q]LL(16e2\k"%0&M'[kOFB@
%S-*9!;mm<P5nON55i*[op^aMA%K[B8,seB98.i8Z+Lmo=L8?AM^t_u^=FlcAOHGPc('=5Ib85?&rkCBlTt@j-l^i7>>#n(N=o1(!
%G\.ap%O6t$HmL3Kcen_)XkE0M#5l0*CG^JgUeo$-KiErK7Y':$c=KE/jU\,%WQDM[g/Fke13XO;kb:f/6#?\EdEug-'1Z-Lol@/c
%-H%']F)@?u+IBWGFjI.RG@AA/VhPKg][/E/aE>AQ_iW$96.?:M&3#n'eo@:Y,$E<R]MN)b"p9aciHsT;BM>uob<3WqGKg7pQ13[6
%C#<gt9H&(Tl0)f9l&1Bh_88hr9'+?a@qhd:#M\YoTirU!A[VSAKEA[8QFDYY66/:-JE4KG8QCofDE(DA$?Nq.,Uo[<B;Vs\-#@I,
%'Dnp[>Uk?[2405qFMiFt3@o*q]>`2Alt0,B!Bj&3>05-qJeJiiCoINp$)-?(a8q8-$>@TGQ@6L?gJu6\WYQ&-.^ulhLH[V[M4hA7
%KSA>J.'ep.eEt\-9kOr/&R$kX$<\]K(%6@m1S6\>m)J)+c#+qD'7ut.;^$Y?F/gVkPn;,@]/sTdQss[ZCgc#jjHC*mkP"?1SqKTF
%"9pr"Cj*-DL`ru5E?:\gimb.)890mBce=FfHQ#8YhtVP8d!^VK:fSf\gt.4*4&\'+^KiU@O=\c)1(dQR825^9Yq\9Wh.%O7gO@K^
%8Z'7h-'XfEZ\SkQPV@#'cCT+A^6jkNRAsmAY+u?DVO#s=Lsj%MIKSnZ#t&"B,7#;uM<R.H_\2-u9i&`%1;o%]Pp#0XAmn2.WEaTo
%f(2>,He8VCB.0!4WDA\B2!#?*!phN@&`aZlR9$lN<9o,99$oOIK!7\*Kg;#)lpZUu&?6WLWudt8d_%pbgBB=2>sS5Te:@+@YpCp`
%_-<QJ"0g6+g0UJe_6"DIK,55d(C,u.HC``O]N,/soYrR(QGkAiWn)3@"-$2CI:<Ui&_K9DeGO!jbJ66?P\>\P`LH#,:4k0S$F(q3
%N.uJ>QbMQcK7^Y&H_%d-.]sXACnrj+M4s-]7-a7c,#\:\,"o%8Kk_^JK<jQT)[;^A7/\/B=CAUlU5q[(K[BreO'n`NJPGVKR!Z[P
%B?(V69F#DUMmkLD3,Gd/37rF&g9P2:g@Lj08VVT<GBQaee)clr7+`+iheq:C6J^6WMfX,P(?_?u'g;@YKK>F@q)3ojH>g9I''u]6
%kfdOZ:UD)Dqoiqr*lJen%0U/NfUO+R@UU,uT\$64?qC\:o/_a<F(6;R)?/>`lh69"-[4F(3H#4s&o@!r^^c:B/k?'GEK#=Iqs`*;
%p[]G0qqsWB26QOGa/A'jP^Bp_.ib1K=*WRthZqgV[9D7Da#R9L&eVL&j];Wdj8kn'4U9H$CW<N_$pe:H"bMo^0-o&f>m4Dp8)9'F
%at6de>s-U';]"^rSdV84W.H;:oWXPsCIdi=2bBSnS047B7196^OSrVNL)iI$T),+%F7PD3bnb9@Nc*E);pfduMr`D56m=7S7EZI?
%%--I^fK`VJB-?MG^u4$r(ZTHaeWZaaD"'>RqRHQtVmM]!<g\0bFj;J1"_5)1*9a]tM01"RQFQ1P,1o,d904.XG1u2KQ-FG`P0Nr/
%9bo>^`Z)t7gg&8@kA2QX_M$4jP08%F+DSL-+ZmqD-:-I`Us<lNId7CWP"noTQ9sTFkHoBF1_hY3ZdOUVAYjA]C5r0K!bt%KCj@hk
%NlX:924N9BYo>_s'Z[b38Qa@X@>nS,*Z+Sc[The5g2I>(kN3Lrb%1sK>5@YOZ[@"DB)+HRa"C@ep*9aNa6$r&0=(l'Cg:E/g`2*F
%!3q7d[PLrX#Z_GNaOBO1"]-EqO=k?G'L;<Y<]_:uI@\=8WHAgY:0DC]b9\\CJX>hJ9<.[^CY:Le?(l!A:2f8T#Sm!ol67mdN=@X;
%Br][>RWLebmOK=g:T\kdhIX!r5(%`mp#1H<f'38@m]%Q>,?SW7H,=tAiSe8_&K[<`m7A1nY/i_?2/BM#70ZEQAqt^i4#Wck)AW!E
%9#LEYpOi>/`n&\.oZ4B*l<la&I(s]cN\o$7lufbJ?C#%@T3-tnO=timf'AH"I\'m6WeBI.YtIWZG@#`Jh/3&L&.U=dG%#<Oao\LW
%%b-7R0F99Z7%X]^*ph=J"MKOmD0!S8Lt\1Xqm!g_`2UX</*J$H@+W4HgR^q.LC9:L]-1^V!S,$A30_3E_o=$m#iR]NfR>d\)hlil
%.H30T"sAi_;.A'mJd;!SQ4j-tk_6i20)irpF_Adu5oK"F6hQ0r'C9<Oq?;.)W"".cMP^rkA^qKM$4H'K.SIj@&AeW\gTEc%m(lLR
%ae'AK3!_CZ%U#OH,M,G]Yo"eGU1A>GDJa)NY=][86IKn\0ikKCPd55)V^P\/D_%i%`L]Uc"Ji,u8V(s-C^AJCKXrH"FdDDjG,/;H
%(qKCf@DgkNK]EG+b6uY7_FDqi)NRFr#Y<%ZTS+c+pHAh>)tUDWVf@npmE4S3iLHp9:c?6#Y\?fq84O2E><=##g%m$+[4@H9@"'J)
%;C6#fOtC?!.@+LP?A1[jMcSF]G;)WFgIa%E?'R2-)b/u$`>a^[N@0p$D/-:#3RoR)XTHD6_s0e>$JhTX-<X,51ZOO/\I)2qJsFGW
%Q$UD?9th>mn_;X>1h9)k<H5IL\Jl0C=<T>t@U[mJ8sI@1mAsmE&N(\&$*5DQ!=MJ3mBG/C/Yk63B&H[2gRoC\>P4)(0q.sS,tZXj
%'?ZMlKo-n9/gX[1-kBYV^1E_R6$en'nF11X]H+d^QB$)=h\8mq85b=P2M0g:#o4$d>,=\In!@#U,GTOGMF\*1-miMr<Y^?3pej7G
%c96l79lTDdHE2jF:G0Z:/gfZX0[#PTDkq0K7gt`99Meuf7lPOo`F.mPl/R!JejehJm,l/-cNTMsbXAgl/CFOB9/Y7NZj^8(rYWmC
%U'XKlZ/dWtC0bL?J=ICrJG)C;Tj,&UdD1![DPdtlX`3)1jcp]flZHSd.#Ql(cjJsa"Ap#I"M-.-)&pOl)P$3##`&qu$[^;Sg1eCG
%%YoYO=p0RNX_+rF_IZ^@fH;p8,PG#Zrtu;<g0h3*RogH2Dq1.KM==Kl"1r-<-b;L(]8[a&-AM]CRhbZBor.:G@@>gtj"N`t_VEug
%IQf:"Wr7V?Oq6n$D?b[>(!o>kY5/P^jGQ"ZFt:QsE$;UB/3XaG'l=bV/aNhAX/aM'<,!6FW-bbLn6G0QIj_+%-SQO0q>:_Z1GObn
%>"FUGfsfTnNbeRe3]_,gAj\qT_].kIr^R6F1qNR9fF@&u'jR)g/inF.O)'<@^mlnX2)b%_#sA=:<"gsO*'0"'AN""$-&jFHMNJ/k
%U/lu(mK@[,7F<:jjsH!!aFPB$fT'H5b*o/VOLXQ1eNq/I&^Qo3lVCMFbAn57TF>+?.(fgq2>I]C`o+*tC)">$14+:?-+Q>RKj;kL
%%]N[aE^;h(@S%"HAUOK_Kd^\>2&P:C$osiN"J=b__*DjWoYtHoZ)P=6G&rHED[nGhn2'sW8JO,oKs6[^$%CG]:VS0uR]M[VZLC+e
%#kjZb8<#XW;&o!&gnk)5*jS"^l4p^?755&k+`Y:(Qq!6l-f61e@kmjjaS*Xi(r:mt45i;d=kn2:'9gCGB\up92?8pI>sgEH&Ih"t
%+Q<l6mn>Qgd*1oMC6-.G-i^.s1i<*^d9RC%-Y)^_ZjTg8%UpS"8dJ"^8r'A!cb/e^'>&m?UM7g>7CB2KKn7c5VjWZhMP.`\BP7%:
%X1;oP-*^uMP@fr&$d\n;;!*LG!G@$/WIXt+Dh+Z]0KkjDb%nA`UTZeE+3H(!ZM)TA.I5c5-Mc[p1<J4p_hAQ4+5#e7k"\;DC;i_m
%Y]CgB#&$6`k#NuUhb#6#^;H3"BjmAX?uVO*@KL!n#``aE7!S9^&5IRVp[AjL\k.E<GVN`l:k)e'lH7"[%2JsG/emJOH+4#EcqU0O
%"pY..K@%Q?.TGWPVK3&:U8\15d(Ve7'rIsk#c5(=90X+bpi4K,^Z6GCL)5)2^IWAuOG4Z+N!aN"V0[#4f&@MPZcUiFfQ+?($:15#
%:F3<rbp,bq6"iU-;>?C1j(5ha`L]>B%Yb@C(Fu_(!%P]bi/COn#GG0(+_MX!$TZV/V6pU9FaF;0"jV9l]2E,UKQF#A^89>NE<Ye4
%4HE8InA'+FgWS;uTTik7KfI&PJ5eh^[U!AueW`NG%eY-IO[TjjD7V`]S]fNqMX9p=;TcpnZudQpA>ac'28m)%gN0f'+:a;u2<I*8
%^`0`0IWZ[&h3n!&Qn+jUD%^bN]()gBh<1Y]H#G@+f^s&]Zh"NDihC'D_>[jqlEF"l#L*=Cb4'dC/#Em%l[FB3:'Ab/c5`'d$q4qC
%c^0toB4dQ*XNd0`oFh)Jh&:\'-,,9d5!CQqW$Fnm"\Pmk6FUd'pPrgRi4rN1#CSL.I<e'*Cj/>hHR3pkm*a["an4!e<hNrT-*Pgp
%bG*[a^T8Cc$A//S]dATd"MkXLa<Mh3<4Hf'dZQPg@CmR0Cr8?&psSN".%Xm8U$GJr83'M5$0DKo+-c#"@0oATl-=F1i3B<\5T$L/
%E/ZaK1Pr<QFLK0ULmQ)Ja"Z\?<(.$u(Y#,_iQukpCum?l9\13"(0(tt&5^EHIS!LB1rX%A6Jot`b*q<iK'd"rcFC@&MOZ5t8tse0
%=BP_3FUCLqT%4Xc*0i>SAs2IP"jY3*Ie,\jk1le"*^=s#jM4SqPDbBEdeXaqS5j'2)u;X;B&Hb.J1-iI:0)-Tn<f\,e2V01U#_)(
%?K@$8=-UD3MM<1D)@\j^+q]FV<,!u9Ot]SW=Tc-[^\_:_>j)JGndq#8+mIKiWqt]kdJ3ML>6[g7_c.e&%'Uc&(6#0pC@O#P"Dsru
%*#)c>3f1:?R*(#60jhK0[G4H`4m2Ba&K/BCTTUVl1AVt5)9iCu/[Tlb7o0))Z2FZFZZs"_O@'o^-lWFk+ip)R%gEaWj.?UG^n\Bm
%/hRA3/4fBOG2'+r+51eA22Y*n5)a*,9NVb*O[JN?=Y83Cpcp+H2!sYPL4dUJ3LO,CC/`a\ng:N-XqQRK2o>DA"LZlr,>ccni;)ll
%_"0i'Te.*t>(iq=@"h%MXl'M=.$=>a=X6ZJ*>OhF@_>Pk6`eMiFr>*eep0Z%@Bq0!kRKuc-QA=-_r6#@<_<Y?%TH-j[]g`(nnAFh
%i.SnG6]$Vaj)r31ik]?XMN4:^e6>6!N>S_[L+29>&nZ))X?+"Q@+@HRpdeiXe`37B=hpUdB4OOD@9'AR)o;9Z@;=LsWP[(O0JOC8
%q?lWn0[AtFofW$b?8TU`BhVB+,V"SD"52hm\ZX%)ltPs!c@l1IUBNNn\+`Zu=f<;XPW,pE^"RY'bI1(>*1iVid:>=l@99So?u!4K
%<m:0\NpRe^6P-jLMGoul#6Ob<Df;;Jr3/LcN6olCWP^3p(fPr3Z2gA6@qciQoP>lJqA7k:"Pr!e@$PPt*C^,u3?Q3pVNoMu:nJ?R
%?UMC8K--['#(PJsCEM2Ye;IV0W/aYH;(4):Q#\iJ2<F>Oa7V%bs2[X\JkXrJN)hLI1@-mNjtoi@Ti:X?dY07^Z_%>Y0VX1q9B6MW
%Q#8,"MY#/9/c/!S*m:FA=k.lji5OC**Akkn^3pJ!cEaVASqgf%\<ANX]13j3"K08r%m,1"K_@]VaoXsQ<a_!H9^C8F7o7@_L;g%_
%VI/!$qQ`Z)H1)Ri!g3R:HK47+IHm]oM6O(6EX5Q9a0kRJ+=e8&i4Gnblag'1pGa'\ZR)KnY+7%[6bc=eXWF_SpF3)Za%],gZ`_uX
%/YQt2b:?s(V2;\b;kTu@d`u5p7':X2S>s!A"sqSbl\<@@T7W1`=;qH'>,THWa+m+.m96q@bEkL%"/=2#@;6#!=Z:BSLSs=@%n[;?
%\R?E8r.(`%ZPA`k:kfN-MaAQ/isBggW)pEL6oqd$C7Wut%$=t8&#0N?D^D-dC/$]^dF%"%-ju:2)sQS(LSU];ES]EkZ9L[u30nh.
%I!*_$$6FXd"QfW=(t'pN%r>=M*!PVA[&1Hn/i_Ma64B!LkO&<Tok`uQ/e1Z/\i9s\I0tu:2&:gOQ.ug8#c!`uX#u<A:sM([3\F`S
%WQ\_2$0h/(X'6XbOKM]@OfK9s^c&l'4)t%Gg50H;aB]T?5!H6UnK9Y0Trg,/;i#RfK-*;@GM*c\*^4n$i^$/jioTPq.&A1kQP&!5
%m\Q8:HEju%Rjo.YkII.>cqCt_I<LP8o$huM0n4Il*\"bmV2h;$\2<Fr]W1?[5..ib5l^>rpt+=S*C@lNMGT<T]*RMDVrgIJr;./S
%>o(QbIO.(]64bah\!N`^b9J:nLBT:J@U8S3VfP>CCCY*]!TS_'r*,Bh45B,:VG;h[J1d##V6ltQ@.hJINF9#<8=.s]W,.:-.`Ic(
%HVc`1.F5!5m$>*pS2&9PN5-,pbf(aMZ;ijh*o::JMTGpjXIDHZf]keT-nCPQ1\(ic;WOMP!Z#VZ1)l$3?L@,RZRQd&c5%(>EmNqt
%?j21E*W^_rPRU8Y_<;Ps-k?=9HGs]GL'AVM,QMWQ^5S/dTYEoc0jl@\_r&;Y[Ks8a67t\`%8okSAU"'<Nstag!G1qT=-]F6G;QC1
%-<l$(P)2IL$=WLQM\<<LiF/0_K9p%+RqojSP)n"t?!0!/0;SuM"T^9NWB1J5X!&V%fdkE2R&l`WSA)C5]j!b8#1LK7IJU1f%;gC@
%M`.YS*Poqcbm/$a.q:1t!J4ds2#O4L;E$?8"?uVSi)(b_/:o*6=p9b@+[<'44t9$5jRe/*^rV1j3:ZXp@8B5,![]r)Fs0!h\VluC
%cU"[(q]%VtJ2IXibq"_On_Yl%Z>>?PAdG:aY%u"05r)(aV]'ADXM5"n.<UAq@i(F[>1ZkN6o&$fI)sVD]kC9R\C.V`kG(kg+tS<K
%YgPgX)S=g^0G1lK&s#DsR]SuKR*ZOf>9\hDp%jpki9("_8QhhH;BSXORjri.>=*uL8Z^dhb=$G2F^1X:M9#u7K)1Y,2D%P:KH^sO
%BqnQ]PYiWSK4^o_JO)&K&5#QlH=MEC,g@2OR+@C]9m&a::(e<B"cqM0ifal$_]pQ/);.HU,&NLi3[03[hD76d)o346XCMN72k[mG
%Qqk%:qaIs?#B6IE3^Fnq0jnriHPif0X+s&"FR"kkE)lG=?u8lF<dMepLU$q[gGT0sAfa?OP(HIn9N=oc0\_?d_K5t.Rg>8)-'K&]
%7X'@/$l66>!ihn?>?QX*!<eSAa:#B@dcjH!F32>eXMN)kQ3>pR9HajC5WYqN67Sp)!1Sa,XhZBjT4O;9'e>h%X`\heTr!C!AE7WF
%iqMKQ"F*P<8jcND#PLI>MV3JKoV,6BrtZ5Jh%`?QMl@D#GUmT22dOoOLg8?cRnWG#""Msqh0tQi;Puq09QHDlXVk5(6-sP7Yf$dn
%nr0P#JTK]K>b5fjUuGZu#^hVCl^HBMR8@KXAkFh;lNJ[Y9&?!7T++0UF0O4Na-)!W7P,:bR$/WE%;jp<JE^@WYQSB8PL,$,`;o]V
%#u_q5M]J58q5@spQaUH1Mpt5i8odJ8Hn9mqWH:'2g%elgoh'&uk7AZf*#ng"-I0s"nHUt9'5iV],;V(T(<CqC1CF/T2Z)de"8^Di
%nJj*;_l^Eo6uu92`(Kh]P&B*7&7W:_P\5)*p'o)5Pb?i"4"(uL?\tB?*_)MsdY;iuV7&Zu?u8>2&XA!aM)HleT_ns+\ZCmc(C1JY
%4dn)rq"01SGM>FjKVYQ@#a@o<\d:W8`G?$h"8H@^[:7tE%,1iAaBH=_&i&0n_dVA+<FD_j@+Pu?#2gj5%q1SgJ.l'ms%jJ6b+^;%
%0apW/DQ2-Z#\h7Ao,LXcC-WAk'c0oFP;&G:&s/"sX4sI9V[Mb\l?6G[K<,k?iIR_Z@^&Cdfpt\a>HKU9Zk2hlgqo3cl>I./9`BU_
%>C*<N(t'3cljMK.[P;MV':OEW+"uI1[?,qB[@SLRL/=+XhT.e-N(a33[^=FX=;&A-^)p^@nSL_PclK(YJ4(\b#d&4)SJWSN6d-E3
%kX#?LdL0ZE!7P/roM&"W=@/-rf0f!`m[LR>e1EfUC9!mLm_(o5p^%A_Z;mV<=rHiT<MJ;K!Y1mHjL$Ho2s#qA@F5/C.K"CSdh"oK
%8Vnf?S8Xh*i9HbL6uhLP+2I<7hJ`1-mgL!0fL<P^Boap`c*OCA*o\La08c/,ibk\!l1PalL7ZK8Pg/I>;pDl[#Z>\i%UgrK0'bcV
%<Db/_B#F9=P._aC^@EPU=EMZ8(sM&NNYn]6l<`EC=Oo-]T,.mJj0jb-eE-c^,@S6iG)MRC:4pMUAQl@X9SDu+HL1GCmk/kVpr)+8
%JaV:hVj79O%!QK"3Q?Yg<tGh>58?5b>!4nY8!Q[nr-^M58EQRB&eCjlROh8%\^op$?a'rqM6D)UU#cOKg7,F&jh]X\C.'V%FD0F9
%dgFp7Wl)1?aMfI0:+=:;.E)PS`m;`_V-EWgj.,G/Z&(qhe_#d"Fi]Z0$N;r)>o6FW@O?kWEU4$We`b1"hC^n<:qDLtR22lc,M)5J
%L`WP](A\90K#cGe9'k-do;^qYXRPbZYsR[nUK='gZA7OQI9u'ihd35ecpq$+[-JYA"';(--Fl;3BFF-LEY8rsPS1<J5cfdO5T%:Y
%g+8_F>39PBSfjD.Q*&G-K+`k*c(m-Ygo0jXEt3@#PLB`[?Ho5LJ-A<^e+C*TDL^@Oa[%oMd8(;4+bFLQh\r/99@/jhn`Y`$P]i1!
%%R7K-@nFSRYmCZr_A_5R%oL18iPlbK"AotuDO(N7E>f,E7%3ljd.\C-**:YWWn:=Z9o-l:-1=7U2Ab/NgRG7tpE1(V6QZ2<dnBH)
%`OAh633sR2lqddc*D@Ek0Ddp(XBT_;ep.,6Baq1clW]f'4ic'J[WT&%V1*csdMLAEPik``9!W.i_Rm@h)hE&_jW7uf2>ZCB3Z/gm
%a#+B'NGBSoihBQmN`D.aS]Z3"63c64Fl35^3^F-8koHKUh8ZS;F,H+D^%]TkXKqVo1!.t'q+q)LoON/ak+Fd7knKkkVN?W3;eV2[
%B"QGS>P=#Vp-g7spp4^4+a-96<e_8J'u7ODJ4!rd[ktFm#T(hT?*1mj#-CDPlLL%#<@!/Zpc@:L^CZJUX6/qQ^n&`d!"#17,?kdV
%(&ss,!J-EV$nHV:CBQ&t71jV8pl$n/Z".Ot<+>8jC#d\haXt"7UZ*&BMN`C\$ks*<%P+*3Nr.2niG"uq?)DpW`bA<J;MH@7@lp>\
%%FDMbQk,E$!d9/%?t]ZKKT/cq_;^p5>tZqgFbm1LfLLmbhC8X?3E/eF;:-V"#qXq6D&^`.$m4/:@,NoZ1.:b+.#*PHJ=-F#k,N,"
%!clj86-bX*+\L<cP!>gj4$-X@G2]@:9*dcL_hF-aMW+g0<Q%*E1#G*nPS7iPij;jQC0F\4ELOoh#[G.,e'b*%3?f6,h4J<?gTh^7
%!uD)c_a:Mdj$@qUHZL2t[3`)jV1a7plt9=X2)f_S;LaC0q1c1;g+X=ukMSO0F*Lm"k.hMo,MQYD<,K$8)''^Yp.!"L1CVLp>f^<`
%bZ$YLkVqDR4#*^=U'^B'S(Bu8p_[u_Uuk^B$:'N)g5.r=\A*s>[g9m#Hsq7S"NPT-r#V'H3k8(;$8-:eUeq(TS:,Ws3;ZhhWI9"t
%1^@*=V;i4&9?JklAIa_rboAk7nU)?GJ#(:RPc"'jM1&@/*a,+=cTo!sD_'q9`8<H$`b1Lb=pqG"+kErg>14EkNAV9s35&GHN_Ktl
%cWI(g+]K[I;onnObqBUsQu4r<A)"!9aJPg_q7'L/0tqk:%Nd\=IF-&GcUMe#oS2[?35Tm`Led4R\i>)b]O=\Kg%+l4^,W#"4Mt/i
%iE-5MH0e:6qN)\Jh,q"W22?7+ZDEb21`1E;]-/<=dj21*4fbH>p&LX8;2;M,M-u(34_^6d3dg;DddnrX?2!ecC!1C@+M_>mQ?fMq
%76;YJb$fPRSu6Ya(KTX]R?.D6\`("3eU7EG^,7tXPC]_Xb<1O@9a$;Y[[_n7oC):rLSs:*&'P/8`Ltn:$?YchC2!Jc#)*$[*^&.D
%/9PO8`=BoUEhlWq1G?_!S4&O`c'%5-6nprWgc(+AVUu6q1cd6D0nT*JjMM4uOIpHNluV0IS@#)\;JWfIPe)7$Y0ussj3YN]g$6ek
%I/mEb[4\`5k4[6g#%W@cVR)9sI&Rl,-9B5^(?4i%>)7fmiMUSNZo'W?KBs>?34lkm&SKIE`K98@Tu*gL[,"qjN2=,!$!je]=aV,$
%-.(sbqmqO";sP?nFc#Ib$m2*DAU*.HBX-847Mp@'U!.la+`_bFJqoCl/>sh$%!F/pD\*j5Qk)3]m-Z0MBCpo=AXbt520-ee>h]_O
%EuS:aLXDlWc-%@%W%*d"cff'?ET^s1;<0-lV,kVaQ<K]'IUUVGj`XliG=T5J<tuq"O'Nq"X:oY]Yl=NHGP/\Wo?)5;!XAQdknN'J
%bN?^p"s+oseJn$bI=$R$WAZN+V[3Uf,_[.I:iHk_Je$)FenY?n;4LpZr_dHLO!8k7MV/)LImPV',YBGf%3Df@U^>4.iijB@>3cL[
%O)*.ngAT`^`p%';DD,*k^Cd/Ob#X:KMM!cV&Z*n(JRMZ5*!*>i0EhX^ejN"`^(fH-QIW^6#)$9COEP\Pfh8X]DFao"5p$FS*Y]p(
%X5[V"\o_'+bn(u`V2.[)Q_HV?AVtmW>Ji-Oa)`\O,]TM#D:t#6R6e^Q7-k):T`W7"d3WU]h6tDn8\-JZhQ]&[%m+OX>B7(>/Z[jB
%h,m>(-![FS7mO+b/Hu?A=<\Y5(^eh#T49(+!H[T(Iph5),iO)(mE@9aUIKc!FW:E3S"iVT\WRS^9OD4cQG9Ok*WRGcVHtLQN-4oq
%61[nUmmcq$@3H]uKci,"6kr9b@TE[pY@=tu$^i1g&<+h0<ibF0D.+^=1"4O+6m>Hd%i13`754BEG&<^l.+NIOkTb8'F*qUr9`WPi
%=qL/'UAiRZBpRk6155d-8Gj+TlqK,=b:3e0W!nSo_tHkg5aaZj`9Y60V_2F*Cc]C2XQ,U!:fQ+@PGG-h'bd)fPNbYh>SrfjGj$J^
%UMp3mXa5iH<h5(='D'L)(1\cNLU#%QSk@4IR&g/M/hB;8Cp]@gVCq:-PUoW0&<$hN?s(<?rQ)7'm!^MZ6ZpkPX`i-tLg=[8OXNVN
%gr-7\M[Fm17_+\Vg]`MD-M2:oE86NE4!V*tlftI^Ir"ANhe43&m^DIRFTC,`MG1]OZu2X/F]dT=5E=.3aKBk9G.U<+3N.p,+NG0f
%%udgI:DakS-"DAH9Yp\Z7VTSt3n"'8Z!*)7<WPPiQs<[hE#Z(!FPTO\ZObbDN>>*kjojt#P&9h0Ld:KB.Sk\QD64=0(Mj>R/t=/6
%CJd2A),_I#,CY'@>A"[`.'bf:mfJIL@&,c1Aq<s$@t^Is)ZTB2M=IW^6$r:*^\dl>=.ap8msfe'2u*kDro3t'T)7X$IsU]m5Q(6"
%<tDM7k3G7cDg>r-)#_5Gh<Q`O]_^u%s8;'L0E0"*Dt2ueY9-FB1iM`DZ_.96rj7.QlYjL?_XG6frD.@HJ,Qu4s7k.=hqB1(=24^^
%^\7$O_(N=/_ger+i8OPt]^,H<=,)(2]`,h55;#1jjtQ0UqQ'R-r^V?>]_;SRs)@caKMd'/qD9`&reWikh>;f9J,%tu@ropn?9dtX
%ja1?RpCBL$+QL!2gn3TLb.S=qqhN?J$\DE,M3D!/IDO`(r:$VtOKJ5MT6=.!2F/5\]GG*hdU^S&Dk#_es*:Z-gY[_goaCQ'&(LTf
%<TM>*Ornp\KC!D*hr5s-g4rj8[m'1B2qq]QqX!1C>J-F(?>mO@B+M2\rpKG`[o2V<5(!(emFSQ!rmR9`]bu)S^\>'Q?bcEC>K1QP
%J,@b<?[qt0B(nN=pZ:/uhWpHsX?XAdH[U6eYKp\?WH7s'hgE2YiAY+,DEiU%)h7PRf,$Z#p\TDdHJct_pt(_]n<q/<-,4MYroH@M
%:A8DYXo\DO?M]))=;-#>FK@@jc`\G)qr[915.pjZJ%bj+5G%;Lgu;Jr%si,Cpof";hsc+lRQ:M%0PQKiY.QLs+I3iM#4Eq60*h_,
%7,4fZ^^.iJ<7K$VGbfS3&Zc,h`.WLFJtR"].X'kGA3i=KUGH+`nOD*-Sr5Ap]^tK!\#^YK33^HA/g/0_]9m_dH=mo\8gFNDd=_C1
%d3)c))[2#@^3Cn1IoOO-YBCQ2l^ofBpsAC/4s6b)n57pN0<_2GreLN4s*q^!rq7Ed-Mc-g]X7M1rMKsJd1c0<X8.TER[fCWbn#sp
%e_Y;i^isll&chmp;E&Faed6&>$g6g'/GdDNEHa=X-IJ[G0_.t'6q)>@B/_W!G[*HKngQU=J&-2'fNmn%X!_i3!K/)8DL7_SHg,M>
%dbEAj5MS_9]@h(dIs@F1Vg8+VbgYHuR\udu4T0_u-jO^9p"L!MdTtE.KNEZ<rq1c,m,-Bm]_ZQMrql^$YQ"<TouGtSVgnL%0E.\k
%3<GC&0j##CnVSA>6dq9dZrXXpOpXue0EY8L[^;abJ.\'0:i(iJb(Ig&/QJ.3.aF'?QQo*HN\]Su*0o2WisI+L-*D/[3/:3g.oMf2
%RE]O%)dd7P2=Jc*r9/MXRI(!^6"bp0)J^=#b(nW2`ak5FQ0A*p0V@(1oc`8to?apVQ<Ns?'eJH)%)Ll9-+1QTZ)a8]8G!Oh99#,?
%\OiXSRMFDJeq0hZQAr5p2k.B0V3]X:NI:Ci9$1a5KK$,_9OKGeVm*lJT@W#H"FqQ4>Phn>rKJC5Blc,/W1?+1A6Z`<T(O)DS)\R;
%=UB)tP?VDa:k^nV&>\qJjTc_YC'8$6*nAHl14YRX21hfT?s6_H?&6=`//qA/_#Udk>lg;n'"\iS?rij*WPDGtW^TKQb?IcYZlCV8
%'D9?oW"B6c<[0onL1D#T4sF$B<U<TD7Idc_571#NnkrHO$GL<^\dNX1U<d=)(k6)\b'&S7e_NT[$jCHQJPn,Uc!CNF"a.X?`qVb@
%+atn`O$uLBO-6edRiaslabVEblb2_d2NAMXr7NXo)$F`3nZ.dN*iE1m0ZrA_KP7+Q'@RO[[n6\p*HEW,]3];IaWuP=Zj$Z?ZA5F$
%%F#fF8/1ZgZCsI:g%>p\e[V(`/Y]`fi4F7#)IQoa<je"_'C7OFD%c"6j\sRL=,7rLcW0Wo[;%Skju"c+QfJ>TiWI5#GjebESJ=i1
%@K)K+s-+850hag`#lCO$ps1[codMEjF%dU(b)63-(Z_Kqps2n9J'*Xub)1\kMLWd+J'*Xu9'UiIMZ8/]5G,7@07/:7A]9-7=hIO5
%nXmiaIEIHI9]kSnA]9KlSd].O=P#&he>n!50r!N,RTApcaH_?fJ>22M06JZnC<J%C*gpSW``/g^I*n&Z4BaqhE]aN,^IP+h*IOuI
%`qtbP13A<.mbl$98<fQ27qLuTqGWtI,@9"@$1,4Ma4^J^+L3klltI6\fC_AX*tG.h2_<$;A-E7<(/$RkK/-h;K)./%#6TbnA?XMf
%cHcUT"V]UA<(.UK:<h8C%f4pJS7"S:(irl0FlR>q#oW8Y+;S!,n""f1&(p;G1'%4*-r=uXe]b%@]*M"',&2"&1Lkk5bQh;Q4q.bc
%j$<*h4]j>J%;V1Lh0qc9YJ[J$3BlbqStfdX"n<eR^+*S(O5^k%Zq?*HS;Q?^i`*8om1[!-YZJYi]\uiZ+mA@%2K6]44/dXTN+++U
%BpI(C*?EJ#"^\cm\9RdFLl6-fjb06+!VrQ?""F8BDiWfHK^J9F]J18$U.0BZB+D'+5nIjb:h$[r,YCP8q<;GJ^-*>mB'o<Ih?#4\
%TpjcP5.L]WEju*K!PApC=H@u-RFIqI?mS8Bd'5nkITgp^h\ZKqN8Nt!>.ZB!9%u'7/l.oXK,aEqb#c<d$ARr$Hn%d(!qrU</nu&!
%e`2@*(u,p^!pKHDm)5ht!Si,B6QP_j'Xb)".M)[?79T`"U_pXMhGF5;9&S6iS8';_/0"q+-P8r^U9rF\eDB_?o?F\G)-';:al?Th
%$("<k=(bFhG8n%_!bmVW][*E67Q]"A6(`[*MM1^L*>B>`5\5H*1#'Wbdt[^PB4>PS(K1RP7%WItWB3[Kf[6u/$\5JbA%EmJ+5#Ct
%26a%uf_X,#:XYp[3,579-XG@Fl1kF*pU(7#:.Bask79\=Sp^u3c8-ncmmtbG\A,43&.!5rpV<!bls"uQ:[H;Pddm_3mctD%nXOb5
%4A!l6"\^+cpOt!Zq#bj8[0QCJ*8&F>Sk78BAP%`LFB<e^_#8][JOT6\<t@Dbcb?5gPm?-1Sj.1<?[q#1oN_:d"&IA:DeT^4GXm)Z
%^tjG+JKnJa97jK'(pIc'4/?MM)=b][MGRT^*cmL9^&5siP.`5*J(!bfrjXS2Q-6(B_XgP'p!>kTq4k+]BMTggCV'ML1[3ROOEg_-
%c('H":YXdW+,@bE?Vf:Ao^"@6]3*,YGXm)Z^tjG;Ja9pHgcb-P4o^bd1ZH.@r.2KWl@BiPs/9!KqHS@C(.d$`q[VlTei3$_%g5!.
%cd%FRStr9&aY;n6U3TO\rkR?<rIHpZo'V&Vl1qeFOY#:QSj.1<?[Eog\hBuZnPX],/P,gHJbtK"m",'2q?)Z8`)dI38^G*s)AMRE
%l1kF*p[nc7nLe'0n0C0sQ6t8H]@-9Umd>GW)+X5I?iTp^K06,-1%SQ;,fNE/G*?7"ORODqg\g3NYQW62I[a0OgIX-1PU=<JG`Lh^
%Q7X>#HMSsOhL)6Mi>?;H="aq>XQlU/gWQ1ak:aG=:G7VR':8"VZFpP"nFC/"VdI+'rghhF8`"VEU>S&B9Rq7T/j5OB0;K&moA._N
%d61c-p\4?_hUXHRom1`6)5G&_FBg<bioMc)\W?k&*76Wi/4IKFp<in\ri#F^\FBX7A#=8/S\H%c[*]MWrVRqS\Fk$#gX<,-rYQI!
%r56=0,qncj4'$m783RId,uC@35j>gcS>RE!Rl[;u&>h0V8;Lh*$DSmI)]DP?],r@/7*p&`^Ua6@h$ioRB[ROl[rCpfMUR%\C-[Z4
%hFNd>@?BUmls8>4Ps:39b@Vr8:>O3[AM`Jt#@1R#\QO(K&nt'QJMU4MOp[#&@#a,6ej*JZ7.:1HLG.lli-#k;LVBT!rAKnGQNs9[
%f2pIpQoW#f<X3(dT\__C>"393fY#uW$G)@`'l5<jN)5bd(LDmeT,&"^hBF-bBj.aA#73q)9aQrLH0$lI@nG4>""@`=PZAoZk&-_'
%@b=(*kJe_B_6@[UbM@X9-o@5NAt$>g@pa0t5+5H@16gLOE;=J'TX+qFD@f6>apasrLP@Ma_5d2B76IE7N+\4b2&t!E`h";F"lB`N
%Kp59=EF"U$NLQWDZBsQ!W<c=dOL/&QFKQJSGH=f]6W[e_C^gtN\t?nT<WK]t<73+.6pi%'Yt64FH3f4"#pCm)H^.pY2hG<j\P%[=
%as@+q%7GBjnQ39s*LB^0?!F>0Kc#S:RF7b*&25]Hpp`D`W*f1>=L\T1PL6i>s"g$G`Mk#eOmQaLPK1Y&_<(fOUt7>K8m:j+p)'^P
%*V%t-g_bI&WDiL@l$:nHFbo8<I3XhK;ble.hsWM!C(5Xt/10_\5$9q3;[ApA5R?SY6fJH(pWJ&f<EH$m7l'K^`aY,mU`bXPm''ii
%=>;&DaV:odKO@b9@@Pq;]]dOdj3m(p?mIKM.N>7)5sH)PEHn(;]CnPBP0EA?IA9j^4^)Sje.lKZVnte6']f77hOOrt&Qd'@7qBJc
%FHQ_Z7Jq:_<Cq\a0b-6f,d#M94]qoQ][[_HBZD1[:EEb4oDE90(TL,FN8P[afO>sejAV7&9T2\cCsf04bfSd'^9kSP)0@g_<4/F>
%;qVT'9<7:!9rSm*Y_],JT>4*DTDH4\s8-Sroafp\bN#e*44HKVC-f?2;E,$o8"iQt+cTs)Z&#j@(Wge;UYR)Sf"#1dZh-")J[T9U
%o4B0kPF_h,.T<?NP-!e=$?O9@NC>d2gFmo2.>!nXe.Fju1O/iTpm`Fp!S!FT+"lg5:>r*tEYqe3,]e6mf)[r6o[Jmq4tq@nf;Nj0
%&TJbe;@;+b;6,^%2$E0eouub^\N4h)\6[6kbK44*]^Z)1#/%/]n`%7$H<.Eg7UJ32##F=5KG+La>@(M*p=cMl1CJs4btm@G2no!2
%VrE"YCn>f&lTC`AU_AW"/%>BplYTLWCYEKngk2am;F*arc=f<V;8ag#</?YAN&em<PW+bs2:ag82\A.lUsY3cas/m4DI(.]dV9bX
%GGKW9KkPfVcDf$YmBu]GVce8AN6QWa,*S7e>>[p>?)K,&Ng0+&1kV:2AfE_L:cNFIgWTJ]E?!2&X\E!K:D\YTJDfopk!=r$bP!1T
%B8oZ"$L`R'\(18>#k`Vm*d"tZ=qi6"BI?K&N7EAR+*LMYB/g/L_b;#*4EU\,f11gb7:Y!H%q\9$rfT%<)&jlArp9]F.^4NQ!+DY>
%P0N>7;Q`D/d\M>!L:pN[/kJtn!&)TkW1oN*(I`K!%g`;&dR^s)&CIjJ8EZ.37@_S-/fj37aD"-WcIR@`OKa?rQuNe&4c_pQXcq7T
%aJ/rdAs\<aL(k@I+s^+RVC)V=.#uPoD]CXIpeagBB@9gGM]9[h/8*.@!j"2`bYlC=1PeR'7hIbZG\oD;I9m:p$b#a&@=AbJon]Lg
%Y232]_.AtQP3gXWr`BKtI];"oiut]F'?qMZ4E'n?)AY;2Hp:'10qIV6?\r26RAa4IK$,af=TYM<R!_HMp:Cft?:^#g(-_j$_*ODo
%8WW_0S4SHoBgWS#A'k/P1`Je"HnE.A/+bSnRF1.FFq+RV]56GYL?lh`dC/trn"2*[25BBN`2hJ62jrFR$a)c\?'l'jY$XeBLASP5
%+]1C5EP'?no@ujkjpfbSfI;MOE@D1$^E<[d+[r+sXL>5[MTpX9Wa'(R)JWjRLN$NHWjB^pq_:o4;3(>nI7d.')GEc/)2cja&_J!I
%)D3eF<(N9/AUmBa%P2DC2j<>bRa&D_gZ,9C6DTS:G\A-SdujcI'W*q]<A8`&P_b9-Uj^aQKIEi-&lP1AOp8PL-m0t]PG1YH$AnWK
%l%sEWU$4%1_bnu(N_$J#)4?s^Qop6?Z2o5^1:"`12+AppI`&2YN6d.D"49.Ym!Ujg'TokX,;UmXM.I7B2J)79W,G]NNmf^>2FA_A
%7'9!7<2K-D:r#W+oj`7^8GuGSob;O?4BdRaPh?G+>-QIB;t_[i-MLa&m?'>!MjaFLF%o@M]j#m5f&Q>+m4i]P.8h^fH5M)QJ!KD\
%Gt8om/L.AP"@Jd&GoOTe4h+]f]e,2^j_bQK'@[Yh8AV%R5o;F"g/P^%<.-?6]_8hbRsWq%9c7V;:pcNL^E>+LW!nuDN?HCVp*'pb
%if$IRK'gs,(3$(9T;2bTo^.2*.>4Ub]f2aUZRHIf-OgI,E.9Q>M;B&KQA1MIUS<M^X"h?Xp=WBmU"JGc<O1*[W+hT]AsnkM<9%_G
%W*@=b7ZS$mGR,M6AuHD/@JJe"%^U,a^A$O]6S?_H(rFa2D"!o^3W==2rqc*Ks88@is*4J4hd=.sr:;60jZe.gVq:t@p<0Yr]RKa9
%^\H9e?iJs7YJ0r2CHV=`T@]]ArTW_8Dnl23mH[j2rpOe)%2)pQ?1?$ErloB]p(r5Krr=o778a~>
%AI9_PrivateDataEnd
